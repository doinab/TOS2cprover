Preprocessed file pp.c written
File parsed into AST
--------------------------------------------------------------------------------
FileAST: 
  Typedef: name='ptrdiff_t', quals=[], storage=['typedef']
    TypeDecl: declname='ptrdiff_t', quals=[]
      IdentifierType: names=['int']
  Typedef: name='size_t', quals=[], storage=['typedef']
    TypeDecl: declname='size_t', quals=[]
      IdentifierType: names=['int', 'unsigned']
  Typedef: name='wchar_t', quals=[], storage=['typedef']
    TypeDecl: declname='wchar_t', quals=[]
      IdentifierType: names=['int']
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_nonnull', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_bnd', packed=False
      Decl: name='lo', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='lo', quals=[]
            IdentifierType: names=['void']
      Decl: name='hi', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='hi', quals=[]
            IdentifierType: names=['void']
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_bnd_nok', packed=False
      Decl: name='lo', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='lo', quals=[]
            IdentifierType: names=['void']
      Decl: name='hi', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='hi', quals=[]
            IdentifierType: names=['void']
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_count', packed=False
      Decl: name='n', quals=[], storage=[]
        TypeDecl: declname='n', quals=[]
          IdentifierType: names=['int']
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_count_nok', packed=False
      Decl: name='n', quals=[], storage=[]
        TypeDecl: declname='n', quals=[]
          IdentifierType: names=['int']
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_one', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_one_nok', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_dmemset', packed=False
      Decl: name='a1', quals=[], storage=[]
        TypeDecl: declname='a1', quals=[]
          IdentifierType: names=['int']
      Decl: name='a2', quals=[], storage=[]
        TypeDecl: declname='a2', quals=[]
          IdentifierType: names=['int']
      Decl: name='a3', quals=[], storage=[]
        TypeDecl: declname='a3', quals=[]
          IdentifierType: names=['int']
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_dmemcpy', packed=False
      Decl: name='a1', quals=[], storage=[]
        TypeDecl: declname='a1', quals=[]
          IdentifierType: names=['int']
      Decl: name='a2', quals=[], storage=[]
        TypeDecl: declname='a2', quals=[]
          IdentifierType: names=['int']
      Decl: name='a3', quals=[], storage=[]
        TypeDecl: declname='a3', quals=[]
          IdentifierType: names=['int']
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_nts', packed=False
  Typedef: name='int8_t', quals=[], storage=['typedef']
    TypeDecl: declname='int8_t', quals=[]
      IdentifierType: names=['char', 'signed']
  Typedef: name='uint8_t', quals=[], storage=['typedef']
    TypeDecl: declname='uint8_t', quals=[]
      IdentifierType: names=['char', 'unsigned']
  Typedef: name='int16_t', quals=[], storage=['typedef']
    TypeDecl: declname='int16_t', quals=[]
      IdentifierType: names=['int']
  Typedef: name='uint16_t', quals=[], storage=['typedef']
    TypeDecl: declname='uint16_t', quals=[]
      IdentifierType: names=['int', 'unsigned']
  Typedef: name='int32_t', quals=[], storage=['typedef']
    TypeDecl: declname='int32_t', quals=[]
      IdentifierType: names=['long']
  Typedef: name='uint32_t', quals=[], storage=['typedef']
    TypeDecl: declname='uint32_t', quals=[]
      IdentifierType: names=['long', 'unsigned']
  Typedef: name='int64_t', quals=[], storage=['typedef']
    TypeDecl: declname='int64_t', quals=[]
      IdentifierType: names=['long', 'long']
  Typedef: name='uint64_t', quals=[], storage=['typedef']
    TypeDecl: declname='uint64_t', quals=[]
      IdentifierType: names=['long', 'long', 'unsigned']
  Typedef: name='intptr_t', quals=[], storage=['typedef']
    TypeDecl: declname='intptr_t', quals=[]
      IdentifierType: names=['int16_t']
  Typedef: name='uintptr_t', quals=[], storage=['typedef']
    TypeDecl: declname='uintptr_t', quals=[]
      IdentifierType: names=['uint16_t']
  Typedef: name='nx_int8_t', quals=[], storage=['typedef']
    TypeDecl: declname='nx_int8_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='1'
  Typedef: name='__nesc_nxbase_nx_int8_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nx_int8_t', quals=[]
      IdentifierType: names=['int8_t']
  Typedef: name='nx_int16_t', quals=[], storage=['typedef']
    TypeDecl: declname='nx_int16_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='2'
  Typedef: name='__nesc_nxbase_nx_int16_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nx_int16_t', quals=[]
      IdentifierType: names=['int16_t']
  Typedef: name='nx_int32_t', quals=[], storage=['typedef']
    TypeDecl: declname='nx_int32_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='4'
  Typedef: name='__nesc_nxbase_nx_int32_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nx_int32_t', quals=[]
      IdentifierType: names=['int32_t']
  Typedef: name='nx_int64_t', quals=[], storage=['typedef']
    TypeDecl: declname='nx_int64_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='8'
  Typedef: name='__nesc_nxbase_nx_int64_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nx_int64_t', quals=[]
      IdentifierType: names=['int64_t']
  Typedef: name='nx_uint8_t', quals=[], storage=['typedef']
    TypeDecl: declname='nx_uint8_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='1'
  Typedef: name='__nesc_nxbase_nx_uint8_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nx_uint8_t', quals=[]
      IdentifierType: names=['uint8_t']
  Typedef: name='nx_uint16_t', quals=[], storage=['typedef']
    TypeDecl: declname='nx_uint16_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='2'
  Typedef: name='__nesc_nxbase_nx_uint16_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nx_uint16_t', quals=[]
      IdentifierType: names=['uint16_t']
  Typedef: name='nx_uint32_t', quals=[], storage=['typedef']
    TypeDecl: declname='nx_uint32_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='4'
  Typedef: name='__nesc_nxbase_nx_uint32_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nx_uint32_t', quals=[]
      IdentifierType: names=['uint32_t']
  Typedef: name='nx_uint64_t', quals=[], storage=['typedef']
    TypeDecl: declname='nx_uint64_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='8'
  Typedef: name='__nesc_nxbase_nx_uint64_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nx_uint64_t', quals=[]
      IdentifierType: names=['uint64_t']
  Typedef: name='nxle_int8_t', quals=[], storage=['typedef']
    TypeDecl: declname='nxle_int8_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='1'
  Typedef: name='__nesc_nxbase_nxle_int8_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nxle_int8_t', quals=[]
      IdentifierType: names=['int8_t']
  Typedef: name='nxle_int16_t', quals=[], storage=['typedef']
    TypeDecl: declname='nxle_int16_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='2'
  Typedef: name='__nesc_nxbase_nxle_int16_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nxle_int16_t', quals=[]
      IdentifierType: names=['int16_t']
  Typedef: name='nxle_int32_t', quals=[], storage=['typedef']
    TypeDecl: declname='nxle_int32_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='4'
  Typedef: name='__nesc_nxbase_nxle_int32_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nxle_int32_t', quals=[]
      IdentifierType: names=['int32_t']
  Typedef: name='nxle_int64_t', quals=[], storage=['typedef']
    TypeDecl: declname='nxle_int64_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='8'
  Typedef: name='__nesc_nxbase_nxle_int64_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nxle_int64_t', quals=[]
      IdentifierType: names=['int64_t']
  Typedef: name='nxle_uint8_t', quals=[], storage=['typedef']
    TypeDecl: declname='nxle_uint8_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='1'
  Typedef: name='__nesc_nxbase_nxle_uint8_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nxle_uint8_t', quals=[]
      IdentifierType: names=['uint8_t']
  Typedef: name='nxle_uint16_t', quals=[], storage=['typedef']
    TypeDecl: declname='nxle_uint16_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='2'
  Typedef: name='__nesc_nxbase_nxle_uint16_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nxle_uint16_t', quals=[]
      IdentifierType: names=['uint16_t']
  Typedef: name='nxle_uint32_t', quals=[], storage=['typedef']
    TypeDecl: declname='nxle_uint32_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='4'
  Typedef: name='__nesc_nxbase_nxle_uint32_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nxle_uint32_t', quals=[]
      IdentifierType: names=['uint32_t']
  Typedef: name='nxle_uint64_t', quals=[], storage=['typedef']
    TypeDecl: declname='nxle_uint64_t', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='8'
  Typedef: name='__nesc_nxbase_nxle_uint64_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nxle_uint64_t', quals=[]
      IdentifierType: names=['uint64_t']
  Typedef: name='u_char', quals=[], storage=['typedef']
    TypeDecl: declname='u_char', quals=[]
      IdentifierType: names=['char', 'unsigned']
  Typedef: name='u_short', quals=[], storage=['typedef']
    TypeDecl: declname='u_short', quals=[]
      IdentifierType: names=['short', 'unsigned']
  Typedef: name='u_int', quals=[], storage=['typedef']
    TypeDecl: declname='u_int', quals=[]
      IdentifierType: names=['int', 'unsigned']
  Typedef: name='u_long', quals=[], storage=['typedef']
    TypeDecl: declname='u_long', quals=[]
      IdentifierType: names=['long', 'unsigned']
  Typedef: name='ushort', quals=[], storage=['typedef']
    TypeDecl: declname='ushort', quals=[]
      IdentifierType: names=['short', 'unsigned']
  Typedef: name='uint', quals=[], storage=['typedef']
    TypeDecl: declname='uint', quals=[]
      IdentifierType: names=['int', 'unsigned']
  Typedef: name='u_int8_t', quals=[], storage=['typedef']
    TypeDecl: declname='u_int8_t', quals=[]
      IdentifierType: names=['uint8_t']
  Typedef: name='u_int16_t', quals=[], storage=['typedef']
    TypeDecl: declname='u_int16_t', quals=[]
      IdentifierType: names=['uint16_t']
  Typedef: name='u_int32_t', quals=[], storage=['typedef']
    TypeDecl: declname='u_int32_t', quals=[]
      IdentifierType: names=['uint32_t']
  Typedef: name='u_int64_t', quals=[], storage=['typedef']
    TypeDecl: declname='u_int64_t', quals=[]
      IdentifierType: names=['uint64_t']
  Typedef: name='u_quad_t', quals=[], storage=['typedef']
    TypeDecl: declname='u_quad_t', quals=[]
      IdentifierType: names=['u_int64_t']
  Typedef: name='quad_t', quals=[], storage=['typedef']
    TypeDecl: declname='quad_t', quals=[]
      IdentifierType: names=['int64_t']
  Typedef: name='qaddr_t', quals=[], storage=['typedef']
    PtrDecl: quals=[]
      TypeDecl: declname='qaddr_t', quals=[]
        IdentifierType: names=['quad_t']
  Typedef: name='caddr_t', quals=[], storage=['typedef']
    PtrDecl: quals=[]
      TypeDecl: declname='caddr_t', quals=[]
        IdentifierType: names=['char']
  Typedef: name='c_caddr_t', quals=['const'], storage=['typedef']
    PtrDecl: quals=[]
      TypeDecl: declname='c_caddr_t', quals=['const']
        IdentifierType: names=['char']
  Typedef: name='v_caddr_t', quals=['volatile'], storage=['typedef']
    PtrDecl: quals=[]
      TypeDecl: declname='v_caddr_t', quals=['volatile']
        IdentifierType: names=['char']
  Typedef: name='fixpt_t', quals=[], storage=['typedef']
    TypeDecl: declname='fixpt_t', quals=[]
      IdentifierType: names=['u_int32_t']
  Typedef: name='gid_t', quals=[], storage=['typedef']
    TypeDecl: declname='gid_t', quals=[]
      IdentifierType: names=['u_int32_t']
  Typedef: name='in_addr_t', quals=[], storage=['typedef']
    TypeDecl: declname='in_addr_t', quals=[]
      IdentifierType: names=['u_int32_t']
  Typedef: name='in_port_t', quals=[], storage=['typedef']
    TypeDecl: declname='in_port_t', quals=[]
      IdentifierType: names=['u_int16_t']
  Typedef: name='ino_t', quals=[], storage=['typedef']
    TypeDecl: declname='ino_t', quals=[]
      IdentifierType: names=['u_int32_t']
  Typedef: name='key_t', quals=[], storage=['typedef']
    TypeDecl: declname='key_t', quals=[]
      IdentifierType: names=['long']
  Typedef: name='mode_t', quals=[], storage=['typedef']
    TypeDecl: declname='mode_t', quals=[]
      IdentifierType: names=['u_int16_t']
  Typedef: name='nlink_t', quals=[], storage=['typedef']
    TypeDecl: declname='nlink_t', quals=[]
      IdentifierType: names=['u_int16_t']
  Typedef: name='rlim_t', quals=[], storage=['typedef']
    TypeDecl: declname='rlim_t', quals=[]
      IdentifierType: names=['quad_t']
  Typedef: name='segsz_t', quals=[], storage=['typedef']
    TypeDecl: declname='segsz_t', quals=[]
      IdentifierType: names=['int32_t']
  Typedef: name='swblk_t', quals=[], storage=['typedef']
    TypeDecl: declname='swblk_t', quals=[]
      IdentifierType: names=['int32_t']
  Typedef: name='ufs_daddr_t', quals=[], storage=['typedef']
    TypeDecl: declname='ufs_daddr_t', quals=[]
      IdentifierType: names=['int32_t']
  Typedef: name='ufs_time_t', quals=[], storage=['typedef']
    TypeDecl: declname='ufs_time_t', quals=[]
      IdentifierType: names=['int32_t']
  Typedef: name='uid_t', quals=[], storage=['typedef']
    TypeDecl: declname='uid_t', quals=[]
      IdentifierType: names=['u_int32_t']
  Decl: name='memset', quals=[], storage=['extern']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='arg_0x702690', quals=[], storage=[]
          PtrDecl: quals=[]
            TypeDecl: declname='arg_0x702690', quals=[]
              IdentifierType: names=['void']
        Decl: name='arg_0x7027e8', quals=[], storage=[]
          TypeDecl: declname='arg_0x7027e8', quals=[]
            IdentifierType: names=['int']
        Decl: name='arg_0x702980', quals=[], storage=[]
          TypeDecl: declname='arg_0x702980', quals=[]
            IdentifierType: names=['size_t']
      PtrDecl: quals=[]
        TypeDecl: declname='memset', quals=[]
          IdentifierType: names=['void']
  Decl: name='memset', quals=[], storage=['extern']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='arg_0x1045650', quals=[], storage=[]
          PtrDecl: quals=[]
            TypeDecl: declname='arg_0x1045650', quals=[]
              IdentifierType: names=['void']
        Decl: name='arg_0x10457a8', quals=[], storage=[]
          TypeDecl: declname='arg_0x10457a8', quals=[]
            IdentifierType: names=['int']
        Decl: name='arg_0x1045940', quals=[], storage=[]
          TypeDecl: declname='arg_0x1045940', quals=[]
            IdentifierType: names=['size_t']
      PtrDecl: quals=[]
        TypeDecl: declname='memset', quals=[]
          IdentifierType: names=['void']
  Typedef: name='div_t', quals=[], storage=['typedef']
    TypeDecl: declname='div_t', quals=[]
      Struct: name='__nesc_unnamed4242', packed=False
        Decl: name='quot', quals=[], storage=[]
          TypeDecl: declname='quot', quals=[]
            IdentifierType: names=['int']
        Decl: name='rem', quals=[], storage=[]
          TypeDecl: declname='rem', quals=[]
            IdentifierType: names=['int']
  Typedef: name='ldiv_t', quals=[], storage=['typedef']
    TypeDecl: declname='ldiv_t', quals=[]
      Struct: name='__nesc_unnamed4243', packed=False
        Decl: name='quot', quals=[], storage=[]
          TypeDecl: declname='quot', quals=[]
            IdentifierType: names=['long']
        Decl: name='rem', quals=[], storage=[]
          TypeDecl: declname='rem', quals=[]
            IdentifierType: names=['long']
  Typedef: name='__int32_t', quals=[], storage=['typedef']
    TypeDecl: declname='__int32_t', quals=[]
      IdentifierType: names=['int', 'long']
  Typedef: name='__uint32_t', quals=[], storage=['typedef']
    TypeDecl: declname='__uint32_t', quals=[]
      IdentifierType: names=['int', 'long', 'unsigned']
  Typedef: name='_off_t', quals=[], storage=['typedef']
    TypeDecl: declname='_off_t', quals=[]
      IdentifierType: names=['long']
  Typedef: name='_ssize_t', quals=[], storage=['typedef']
    TypeDecl: declname='_ssize_t', quals=[]
      IdentifierType: names=['long']
  Typedef: name='__ULong', quals=[], storage=['typedef']
    TypeDecl: declname='__ULong', quals=[]
      IdentifierType: names=['__uint32_t']
  Decl: name=None, quals=[], storage=[]
    Struct: name='_glue', packed=False
      Decl: name='_next', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_next', quals=[]
            Struct: name='_glue', packed=False
      Decl: name='_niobs', quals=[], storage=[]
        TypeDecl: declname='_niobs', quals=[]
          IdentifierType: names=['int']
      Decl: name='_iobs', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_iobs', quals=[]
            Struct: name='__sFILE', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='_Bigint', packed=False
      Decl: name='_next', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_next', quals=[]
            Struct: name='_Bigint', packed=False
      Decl: name='_k', quals=[], storage=[]
        TypeDecl: declname='_k', quals=[]
          IdentifierType: names=['int']
      Decl: name='_maxwds', quals=[], storage=[]
        TypeDecl: declname='_maxwds', quals=[]
          IdentifierType: names=['int']
      Decl: name='_sign', quals=[], storage=[]
        TypeDecl: declname='_sign', quals=[]
          IdentifierType: names=['int']
      Decl: name='_wds', quals=[], storage=[]
        TypeDecl: declname='_wds', quals=[]
          IdentifierType: names=['int']
      Decl: name='_x', quals=[], storage=[]
        ArrayDecl: 
          TypeDecl: declname='_x', quals=[]
            IdentifierType: names=['__ULong']
          Constant: type='int', value='1'
  Decl: name=None, quals=[], storage=[]
    Struct: name='__tm', packed=False
      Decl: name='__tm_sec', quals=[], storage=[]
        TypeDecl: declname='__tm_sec', quals=[]
          IdentifierType: names=['int']
      Decl: name='__tm_min', quals=[], storage=[]
        TypeDecl: declname='__tm_min', quals=[]
          IdentifierType: names=['int']
      Decl: name='__tm_hour', quals=[], storage=[]
        TypeDecl: declname='__tm_hour', quals=[]
          IdentifierType: names=['int']
      Decl: name='__tm_mday', quals=[], storage=[]
        TypeDecl: declname='__tm_mday', quals=[]
          IdentifierType: names=['int']
      Decl: name='__tm_mon', quals=[], storage=[]
        TypeDecl: declname='__tm_mon', quals=[]
          IdentifierType: names=['int']
      Decl: name='__tm_year', quals=[], storage=[]
        TypeDecl: declname='__tm_year', quals=[]
          IdentifierType: names=['int']
      Decl: name='__tm_wday', quals=[], storage=[]
        TypeDecl: declname='__tm_wday', quals=[]
          IdentifierType: names=['int']
      Decl: name='__tm_yday', quals=[], storage=[]
        TypeDecl: declname='__tm_yday', quals=[]
          IdentifierType: names=['int']
      Decl: name='__tm_isdst', quals=[], storage=[]
        TypeDecl: declname='__tm_isdst', quals=[]
          IdentifierType: names=['int']
  Decl: name=None, quals=[], storage=[]
    Struct: name='_atexit', packed=False
      Decl: name='_next', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_next', quals=[]
            Struct: name='_atexit', packed=False
      Decl: name='_ind', quals=[], storage=[]
        TypeDecl: declname='_ind', quals=[]
          IdentifierType: names=['int']
      Decl: name='_fns', quals=[], storage=[]
        ArrayDecl: 
          PtrDecl: quals=[]
            FuncDecl: quals=None
              ParamList: 
                Typename: quals=[]
                  TypeDecl: declname=None, quals=[]
                    IdentifierType: names=['void']
              TypeDecl: declname='_fns', quals=[]
                IdentifierType: names=['void']
          Constant: type='int', value='32'
  Decl: name=None, quals=[], storage=[]
    Struct: name='__sbuf', packed=False
      Decl: name='_base', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_base', quals=[]
            IdentifierType: names=['char', 'unsigned']
      Decl: name='_size', quals=[], storage=[]
        TypeDecl: declname='_size', quals=[]
          IdentifierType: names=['int']
  Typedef: name='_fpos_t', quals=[], storage=['typedef']
    TypeDecl: declname='_fpos_t', quals=[]
      IdentifierType: names=['long']
  Decl: name=None, quals=[], storage=[]
    Struct: name='__sFILE', packed=False
      Decl: name='_p', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_p', quals=[]
            IdentifierType: names=['char', 'unsigned']
      Decl: name='_r', quals=[], storage=[]
        TypeDecl: declname='_r', quals=[]
          IdentifierType: names=['int']
      Decl: name='_w', quals=[], storage=[]
        TypeDecl: declname='_w', quals=[]
          IdentifierType: names=['int']
      Decl: name='_flags', quals=[], storage=[]
        TypeDecl: declname='_flags', quals=[]
          IdentifierType: names=['short']
      Decl: name='_file', quals=[], storage=[]
        TypeDecl: declname='_file', quals=[]
          IdentifierType: names=['short']
      Decl: name='_bf', quals=[], storage=[]
        TypeDecl: declname='_bf', quals=[]
          Struct: name='__sbuf', packed=False
      Decl: name='_lbfsize', quals=[], storage=[]
        TypeDecl: declname='_lbfsize', quals=[]
          IdentifierType: names=['int']
      Decl: name='_cookie', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_cookie', quals=[]
            IdentifierType: names=['void']
      Decl: name='_read', quals=[], storage=[]
        PtrDecl: quals=[]
          FuncDecl: quals=None
            ParamList: 
              Decl: name='_cookie', quals=[], storage=[]
                PtrDecl: quals=[]
                  TypeDecl: declname='_cookie', quals=[]
                    IdentifierType: names=['void']
              Decl: name='_buf', quals=[], storage=[]
                PtrDecl: quals=[]
                  TypeDecl: declname='_buf', quals=[]
                    IdentifierType: names=['char']
              Decl: name='_n', quals=[], storage=[]
                TypeDecl: declname='_n', quals=[]
                  IdentifierType: names=['int']
            TypeDecl: declname='_read', quals=[]
              IdentifierType: names=['int']
      Decl: name='_write', quals=[], storage=[]
        PtrDecl: quals=[]
          FuncDecl: quals=None
            ParamList: 
              Decl: name='_cookie', quals=[], storage=[]
                PtrDecl: quals=[]
                  TypeDecl: declname='_cookie', quals=[]
                    IdentifierType: names=['void']
              Decl: name='_buf', quals=['const'], storage=[]
                PtrDecl: quals=[]
                  TypeDecl: declname='_buf', quals=['const']
                    IdentifierType: names=['char']
              Decl: name='_n', quals=[], storage=[]
                TypeDecl: declname='_n', quals=[]
                  IdentifierType: names=['int']
            TypeDecl: declname='_write', quals=[]
              IdentifierType: names=['int']
      Decl: name='_seek', quals=[], storage=[]
        PtrDecl: quals=[]
          FuncDecl: quals=None
            ParamList: 
              Decl: name='_cookie', quals=[], storage=[]
                PtrDecl: quals=[]
                  TypeDecl: declname='_cookie', quals=[]
                    IdentifierType: names=['void']
              Decl: name='_offset', quals=[], storage=[]
                TypeDecl: declname='_offset', quals=[]
                  IdentifierType: names=['_fpos_t']
              Decl: name='_whence', quals=[], storage=[]
                TypeDecl: declname='_whence', quals=[]
                  IdentifierType: names=['int']
            TypeDecl: declname='_seek', quals=[]
              IdentifierType: names=['_fpos_t']
      Decl: name='_close', quals=[], storage=[]
        PtrDecl: quals=[]
          FuncDecl: quals=None
            ParamList: 
              Decl: name='_cookie', quals=[], storage=[]
                PtrDecl: quals=[]
                  TypeDecl: declname='_cookie', quals=[]
                    IdentifierType: names=['void']
            TypeDecl: declname='_close', quals=[]
              IdentifierType: names=['int']
      Decl: name='_ub', quals=[], storage=[]
        TypeDecl: declname='_ub', quals=[]
          Struct: name='__sbuf', packed=False
      Decl: name='_up', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_up', quals=[]
            IdentifierType: names=['char', 'unsigned']
      Decl: name='_ur', quals=[], storage=[]
        TypeDecl: declname='_ur', quals=[]
          IdentifierType: names=['int']
      Decl: name='_ubuf', quals=[], storage=[]
        ArrayDecl: 
          TypeDecl: declname='_ubuf', quals=[]
            IdentifierType: names=['char', 'unsigned']
          Constant: type='int', value='3'
      Decl: name='_nbuf', quals=[], storage=[]
        ArrayDecl: 
          TypeDecl: declname='_nbuf', quals=[]
            IdentifierType: names=['char', 'unsigned']
          Constant: type='int', value='1'
      Decl: name='_lb', quals=[], storage=[]
        TypeDecl: declname='_lb', quals=[]
          Struct: name='__sbuf', packed=False
      Decl: name='_blksize', quals=[], storage=[]
        TypeDecl: declname='_blksize', quals=[]
          IdentifierType: names=['int']
      Decl: name='_offset', quals=[], storage=[]
        TypeDecl: declname='_offset', quals=[]
          IdentifierType: names=['int']
      Decl: name='_data', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_data', quals=[]
            Struct: name='_reent', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='_rand48', packed=False
      Decl: name='_seed', quals=[], storage=[]
        ArrayDecl: 
          TypeDecl: declname='_seed', quals=[]
            IdentifierType: names=['short', 'unsigned']
          Constant: type='int', value='3'
      Decl: name='_mult', quals=[], storage=[]
        ArrayDecl: 
          TypeDecl: declname='_mult', quals=[]
            IdentifierType: names=['short', 'unsigned']
          Constant: type='int', value='3'
      Decl: name='_add', quals=[], storage=[]
        TypeDecl: declname='_add', quals=[]
          IdentifierType: names=['short', 'unsigned']
  Decl: name=None, quals=[], storage=[]
    Struct: name='_reent', packed=False
      Decl: name='_errno', quals=[], storage=[]
        TypeDecl: declname='_errno', quals=[]
          IdentifierType: names=['int']
      Decl: name='_stdin', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_stdin', quals=[]
            Struct: name='__sFILE', packed=False
      Decl: name='_stdout', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_stdout', quals=[]
            Struct: name='__sFILE', packed=False
      Decl: name='_stderr', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_stderr', quals=[]
            Struct: name='__sFILE', packed=False
      Decl: name='_inc', quals=[], storage=[]
        TypeDecl: declname='_inc', quals=[]
          IdentifierType: names=['int']
      Decl: name='_emergency', quals=[], storage=[]
        ArrayDecl: 
          TypeDecl: declname='_emergency', quals=[]
            IdentifierType: names=['char']
          Constant: type='int', value='25'
      Decl: name='_current_category', quals=[], storage=[]
        TypeDecl: declname='_current_category', quals=[]
          IdentifierType: names=['int']
      Decl: name='_current_locale', quals=['const'], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_current_locale', quals=['const']
            IdentifierType: names=['char']
      Decl: name='__sdidinit', quals=[], storage=[]
        TypeDecl: declname='__sdidinit', quals=[]
          IdentifierType: names=['int']
      Decl: name='__cleanup', quals=[], storage=[]
        PtrDecl: quals=[]
          FuncDecl: quals=None
            ParamList: 
              Decl: name='arg_0x1073ab8', quals=[], storage=[]
                PtrDecl: quals=[]
                  TypeDecl: declname='arg_0x1073ab8', quals=[]
                    Struct: name='_reent', packed=False
            TypeDecl: declname='__cleanup', quals=[]
              IdentifierType: names=['void']
      Decl: name='_result', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_result', quals=[]
            Struct: name='_Bigint', packed=False
      Decl: name='_result_k', quals=[], storage=[]
        TypeDecl: declname='_result_k', quals=[]
          IdentifierType: names=['int']
      Decl: name='_p5s', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_p5s', quals=[]
            Struct: name='_Bigint', packed=False
      Decl: name='_freelist', quals=[], storage=[]
        PtrDecl: quals=[]
          PtrDecl: quals=[]
            TypeDecl: declname='_freelist', quals=[]
              Struct: name='_Bigint', packed=False
      Decl: name='_cvtlen', quals=[], storage=[]
        TypeDecl: declname='_cvtlen', quals=[]
          IdentifierType: names=['int']
      Decl: name='_cvtbuf', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_cvtbuf', quals=[]
            IdentifierType: names=['char']
      Decl: name='_new', quals=[], storage=[]
        TypeDecl: declname='_new', quals=[]
          Union: name='__nesc_unnamed4244', packed=False
            Decl: name='_reent', quals=[], storage=[]
              TypeDecl: declname='_reent', quals=[]
                Struct: name='__nesc_unnamed4245', packed=False
                  Decl: name='_unused_rand', quals=[], storage=[]
                    TypeDecl: declname='_unused_rand', quals=[]
                      IdentifierType: names=['int', 'unsigned']
                  Decl: name='_strtok_last', quals=[], storage=[]
                    PtrDecl: quals=[]
                      TypeDecl: declname='_strtok_last', quals=[]
                        IdentifierType: names=['char']
                  Decl: name='_asctime_buf', quals=[], storage=[]
                    ArrayDecl: 
                      TypeDecl: declname='_asctime_buf', quals=[]
                        IdentifierType: names=['char']
                      Constant: type='int', value='26'
                  Decl: name='_localtime_buf', quals=[], storage=[]
                    TypeDecl: declname='_localtime_buf', quals=[]
                      Struct: name='__tm', packed=False
                  Decl: name='_gamma_signgam', quals=[], storage=[]
                    TypeDecl: declname='_gamma_signgam', quals=[]
                      IdentifierType: names=['int']
                  Decl: name='_rand_next', quals=['__extension__'], storage=[]
                    TypeDecl: declname='_rand_next', quals=['__extension__']
                      IdentifierType: names=['long', 'long', 'unsigned']
                  Decl: name='_r48', quals=[], storage=[]
                    TypeDecl: declname='_r48', quals=[]
                      Struct: name='_rand48', packed=False
            Decl: name='_unused', quals=[], storage=[]
              TypeDecl: declname='_unused', quals=[]
                Struct: name='__nesc_unnamed4246', packed=False
                  Decl: name='_nextf', quals=[], storage=[]
                    ArrayDecl: 
                      PtrDecl: quals=[]
                        TypeDecl: declname='_nextf', quals=[]
                          IdentifierType: names=['char', 'unsigned']
                      Constant: type='int', value='30'
                  Decl: name='_nmalloc', quals=[], storage=[]
                    ArrayDecl: 
                      TypeDecl: declname='_nmalloc', quals=[]
                        IdentifierType: names=['int', 'unsigned']
                      Constant: type='int', value='30'
      Decl: name='_atexit', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='_atexit', quals=[]
            Struct: name='_atexit', packed=False
      Decl: name='_atexit0', quals=[], storage=[]
        TypeDecl: declname='_atexit0', quals=[]
          Struct: name='_atexit', packed=False
      Decl: name='_sig_func', quals=[], storage=[]
        PtrDecl: quals=[]
          PtrDecl: quals=[]
            FuncDecl: quals=None
              ParamList: 
                Decl: name='arg_0x1077c98', quals=[], storage=[]
                  TypeDecl: declname='arg_0x1077c98', quals=[]
                    IdentifierType: names=['int']
              TypeDecl: declname='_sig_func', quals=[]
                IdentifierType: names=['void']
      Decl: name='__sglue', quals=[], storage=[]
        TypeDecl: declname='__sglue', quals=[]
          Struct: name='_glue', packed=False
      Decl: name='__sf', quals=[], storage=[]
        ArrayDecl: 
          TypeDecl: declname='__sf', quals=[]
            Struct: name='__sFILE', packed=False
          Constant: type='int', value='3'
  Decl: name=None, quals=[], storage=[]
    Struct: name='_reent', packed=False
  Decl: name=None, quals=[], storage=[]
    Union: name='__dmath', packed=False
      Decl: name='i', quals=[], storage=[]
        ArrayDecl: 
          TypeDecl: declname='i', quals=[]
            IdentifierType: names=['__uint32_t']
          Constant: type='int', value='2'
      Decl: name='d', quals=[], storage=[]
        TypeDecl: declname='d', quals=[]
          IdentifierType: names=['double']
  Decl: name=None, quals=[], storage=[]
    Union: name='__dmath', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='exception', packed=False
      Decl: name='type', quals=[], storage=[]
        TypeDecl: declname='type', quals=[]
          IdentifierType: names=['int']
      Decl: name='name', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='name', quals=[]
            IdentifierType: names=['char']
      Decl: name='arg1', quals=[], storage=[]
        TypeDecl: declname='arg1', quals=[]
          IdentifierType: names=['double']
      Decl: name='arg2', quals=[], storage=[]
        TypeDecl: declname='arg2', quals=[]
          IdentifierType: names=['double']
      Decl: name='retval', quals=[], storage=[]
        TypeDecl: declname='retval', quals=[]
          IdentifierType: names=['double']
      Decl: name='err', quals=[], storage=[]
        TypeDecl: declname='err', quals=[]
          IdentifierType: names=['int']
  Decl: name=None, quals=[], storage=[]
    Enum: name='__fdlibm_version'
      EnumeratorList: 
        Enumerator: name='__fdlibm_ieee'
          UnaryOp: op='-'
            Constant: type='int', value='1'
        Enumerator: name='__fdlibm_svid'
        Enumerator: name='__fdlibm_xopen'
        Enumerator: name='__fdlibm_posix'
  Decl: name=None, quals=[], storage=[]
    Enum: name='__fdlibm_version'
  Typedef: name='bool', quals=[], storage=['typedef']
    TypeDecl: declname='bool', quals=[]
      IdentifierType: names=['uint8_t']
  Decl: name=None, quals=[], storage=[]
    Enum: name='__nesc_unnamed4247'
      EnumeratorList: 
        Enumerator: name='FALSE'
          Constant: type='int', value='0'
        Enumerator: name='TRUE'
          Constant: type='int', value='1'
  Typedef: name='nx_bool', quals=[], storage=['typedef']
    TypeDecl: declname='nx_bool', quals=[]
      IdentifierType: names=['nx_int8_t']
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_atmostonce', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_atleastonce', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='__nesc_attr_exactlyonce', packed=False
  Decl: name=None, quals=[], storage=[]
    Enum: name='__nesc_unnamed4248'
      EnumeratorList: 
        Enumerator: name='SUCCESS'
          Constant: type='int', value='0'
        Enumerator: name='FAIL'
          Constant: type='int', value='1'
        Enumerator: name='ESIZE'
          Constant: type='int', value='2'
        Enumerator: name='ECANCEL'
          Constant: type='int', value='3'
        Enumerator: name='EOFF'
          Constant: type='int', value='4'
        Enumerator: name='EBUSY'
          Constant: type='int', value='5'
        Enumerator: name='EINVAL'
          Constant: type='int', value='6'
        Enumerator: name='ERETRY'
          Constant: type='int', value='7'
        Enumerator: name='ERESERVE'
          Constant: type='int', value='8'
        Enumerator: name='EALREADY'
          Constant: type='int', value='9'
        Enumerator: name='ENOMEM'
          Constant: type='int', value='10'
        Enumerator: name='ENOACK'
          Constant: type='int', value='11'
        Enumerator: name='ELAST'
          Constant: type='int', value='11'
  Typedef: name='error_t', quals=[], storage=['typedef']
    TypeDecl: declname='error_t', quals=[]
      IdentifierType: names=['uint8_t']
  Typedef: name='ioregister_t', quals=[], storage=['typedef']
    TypeDecl: declname='ioregister_t', quals=[]
      Union: name='port', packed=True
        Decl: name='reg_p', quals=['volatile'], storage=[]
          TypeDecl: declname='reg_p', quals=['volatile']
            IdentifierType: names=['char', 'unsigned']
        Decl: name='__pin', quals=['volatile'], storage=[]
          TypeDecl: declname='__pin', quals=['volatile']
            Struct: name='__nesc_unnamed4249', packed=False
              Decl: name='__p0', quals=[], storage=[]
                TypeDecl: declname='__p0', quals=[]
                  IdentifierType: names=['char', 'unsigned']
                Constant: type='int', value='1'
              Decl: name='__p1', quals=[], storage=[]
                TypeDecl: declname='__p1', quals=[]
                  IdentifierType: names=['char', 'unsigned']
                Constant: type='int', value='1'
              Decl: name='__p2', quals=[], storage=[]
                TypeDecl: declname='__p2', quals=[]
                  IdentifierType: names=['char', 'unsigned']
                Constant: type='int', value='1'
              Decl: name='__p3', quals=[], storage=[]
                TypeDecl: declname='__p3', quals=[]
                  IdentifierType: names=['char', 'unsigned']
                Constant: type='int', value='1'
              Decl: name='__p4', quals=[], storage=[]
                TypeDecl: declname='__p4', quals=[]
                  IdentifierType: names=['char', 'unsigned']
                Constant: type='int', value='1'
              Decl: name='__p5', quals=[], storage=[]
                TypeDecl: declname='__p5', quals=[]
                  IdentifierType: names=['char', 'unsigned']
                Constant: type='int', value='1'
              Decl: name='__p6', quals=[], storage=[]
                TypeDecl: declname='__p6', quals=[]
                  IdentifierType: names=['char', 'unsigned']
                Constant: type='int', value='1'
              Decl: name='__p7', quals=[], storage=[]
                TypeDecl: declname='__p7', quals=[]
                  IdentifierType: names=['char', 'unsigned']
                Constant: type='int', value='1'
  Decl: name=None, quals=[], storage=[]
    Struct: name='port_full_t', packed=False
      Decl: name='in', quals=[], storage=[]
        TypeDecl: declname='in', quals=[]
          IdentifierType: names=['ioregister_t']
      Decl: name='out', quals=[], storage=[]
        TypeDecl: declname='out', quals=[]
          IdentifierType: names=['ioregister_t']
      Decl: name='dir', quals=[], storage=[]
        TypeDecl: declname='dir', quals=[]
          IdentifierType: names=['ioregister_t']
      Decl: name='ifg', quals=[], storage=[]
        TypeDecl: declname='ifg', quals=[]
          IdentifierType: names=['ioregister_t']
      Decl: name='ies', quals=[], storage=[]
        TypeDecl: declname='ies', quals=[]
          IdentifierType: names=['ioregister_t']
      Decl: name='ie', quals=[], storage=[]
        TypeDecl: declname='ie', quals=[]
          IdentifierType: names=['ioregister_t']
      Decl: name='sel', quals=[], storage=[]
        TypeDecl: declname='sel', quals=[]
          IdentifierType: names=['ioregister_t']
  Decl: name=None, quals=[], storage=[]
    Struct: name='port_simple_t', packed=False
      Decl: name='in', quals=[], storage=[]
        TypeDecl: declname='in', quals=[]
          IdentifierType: names=['ioregister_t']
      Decl: name='out', quals=[], storage=[]
        TypeDecl: declname='out', quals=[]
          IdentifierType: names=['ioregister_t']
      Decl: name='dir', quals=[], storage=[]
        TypeDecl: declname='dir', quals=[]
          IdentifierType: names=['ioregister_t']
      Decl: name='sel', quals=[], storage=[]
        TypeDecl: declname='sel', quals=[]
          IdentifierType: names=['ioregister_t']
  Decl: name=None, quals=[], storage=[]
    Struct: name='port_full_t', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='port_full_t', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='port_simple_t', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='port_simple_t', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='port_simple_t', packed=False
  Decl: name=None, quals=[], storage=[]
    Struct: name='port_simple_t', packed=False
  Decl: name='P1OUT@"0x0021"', quals=['volatile'], storage=[]
    TypeDecl: declname='P1OUT@"0x0021"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P1DIR@"0x0022"', quals=['volatile'], storage=[]
    TypeDecl: declname='P1DIR@"0x0022"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P1IE@"0x0025"', quals=['volatile'], storage=[]
    TypeDecl: declname='P1IE@"0x0025"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P1SEL@"0x0026"', quals=['volatile'], storage=[]
    TypeDecl: declname='P1SEL@"0x0026"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P2OUT@"0x0029"', quals=['volatile'], storage=[]
    TypeDecl: declname='P2OUT@"0x0029"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P2DIR@"0x002A"', quals=['volatile'], storage=[]
    TypeDecl: declname='P2DIR@"0x002A"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P2IE@"0x002D"', quals=['volatile'], storage=[]
    TypeDecl: declname='P2IE@"0x002D"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P2SEL@"0x002E"', quals=['volatile'], storage=[]
    TypeDecl: declname='P2SEL@"0x002E"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P3OUT@"0x0019"', quals=['volatile'], storage=[]
    TypeDecl: declname='P3OUT@"0x0019"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P3DIR@"0x001A"', quals=['volatile'], storage=[]
    TypeDecl: declname='P3DIR@"0x001A"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P3SEL@"0x001B"', quals=['volatile'], storage=[]
    TypeDecl: declname='P3SEL@"0x001B"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P4OUT@"0x001D"', quals=['volatile'], storage=[]
    TypeDecl: declname='P4OUT@"0x001D"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P4DIR@"0x001E"', quals=['volatile'], storage=[]
    TypeDecl: declname='P4DIR@"0x001E"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P4SEL@"0x001F"', quals=['volatile'], storage=[]
    TypeDecl: declname='P4SEL@"0x001F"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P5OUT@"0x0031"', quals=['volatile'], storage=[]
    TypeDecl: declname='P5OUT@"0x0031"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P5DIR@"0x0032"', quals=['volatile'], storage=[]
    TypeDecl: declname='P5DIR@"0x0032"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P5SEL@"0x0033"', quals=['volatile'], storage=[]
    TypeDecl: declname='P5SEL@"0x0033"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P6OUT@"0x0035"', quals=['volatile'], storage=[]
    TypeDecl: declname='P6OUT@"0x0035"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P6DIR@"0x0036"', quals=['volatile'], storage=[]
    TypeDecl: declname='P6DIR@"0x0036"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='P6SEL@"0x0037"', quals=['volatile'], storage=[]
    TypeDecl: declname='P6SEL@"0x0037"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='U0TCTL@"0x0071"', quals=['volatile'], storage=[]
    TypeDecl: declname='U0TCTL@"0x0071"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='U1TCTL@"0x0079"', quals=['volatile'], storage=[]
    TypeDecl: declname='U1TCTL@"0x0079"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='TA0CTL@"0x0160"', quals=['volatile'], storage=[]
    TypeDecl: declname='TA0CTL@"0x0160"', quals=['volatile']
      IdentifierType: names=['int', 'unsigned']
  Decl: name='TA0R@"0x0170"', quals=['volatile'], storage=[]
    TypeDecl: declname='TA0R@"0x0170"', quals=['volatile']
      IdentifierType: names=['int', 'unsigned']
  Decl: name='TA0CCTL0@"0x0162"', quals=['volatile'], storage=[]
    TypeDecl: declname='TA0CCTL0@"0x0162"', quals=['volatile']
      IdentifierType: names=['int', 'unsigned']
  Decl: name='TA0CCTL1@"0x0164"', quals=['volatile'], storage=[]
    TypeDecl: declname='TA0CCTL1@"0x0164"', quals=['volatile']
      IdentifierType: names=['int', 'unsigned']
  Decl: name='TA0CCTL2@"0x0166"', quals=['volatile'], storage=[]
    TypeDecl: declname='TA0CCTL2@"0x0166"', quals=['volatile']
      IdentifierType: names=['int', 'unsigned']
  Typedef: name='tactl_t', quals=[], storage=['typedef']
    TypeDecl: declname='tactl_t', quals=[]
      Struct: name='__nesc_unnamed4250', packed=True
        Decl: name='taifg', quals=['volatile'], storage=[]
          TypeDecl: declname='taifg', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='taie', quals=['volatile'], storage=[]
          TypeDecl: declname='taie', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='taclr', quals=['volatile'], storage=[]
          TypeDecl: declname='taclr', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='dummy', quals=['volatile'], storage=[]
          TypeDecl: declname='dummy', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='tamc', quals=['volatile'], storage=[]
          TypeDecl: declname='tamc', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
        Decl: name='taid', quals=['volatile'], storage=[]
          TypeDecl: declname='taid', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
        Decl: name='tassel', quals=['volatile'], storage=[]
          TypeDecl: declname='tassel', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
  Typedef: name='tacctl_t', quals=[], storage=['typedef']
    TypeDecl: declname='tacctl_t', quals=[]
      Struct: name='__nesc_unnamed4251', packed=True
        Decl: name='ccifg', quals=['volatile'], storage=[]
          TypeDecl: declname='ccifg', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='cov', quals=['volatile'], storage=[]
          TypeDecl: declname='cov', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='out', quals=['volatile'], storage=[]
          TypeDecl: declname='out', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='cci', quals=['volatile'], storage=[]
          TypeDecl: declname='cci', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='ccie', quals=['volatile'], storage=[]
          TypeDecl: declname='ccie', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='outmod', quals=['volatile'], storage=[]
          TypeDecl: declname='outmod', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='3'
        Decl: name='cap', quals=['volatile'], storage=[]
          TypeDecl: declname='cap', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='dummy', quals=['volatile'], storage=[]
          TypeDecl: declname='dummy', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='scci', quals=['volatile'], storage=[]
          TypeDecl: declname='scci', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='scs', quals=['volatile'], storage=[]
          TypeDecl: declname='scs', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='ccis', quals=['volatile'], storage=[]
          TypeDecl: declname='ccis', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
        Decl: name='cm', quals=['volatile'], storage=[]
          TypeDecl: declname='cm', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
  Decl: name=None, quals=[], storage=[]
    Struct: name='timera_t', packed=False
      Decl: name='ctl', quals=[], storage=[]
        TypeDecl: declname='ctl', quals=[]
          IdentifierType: names=['tactl_t']
      Decl: name='cctl0', quals=[], storage=[]
        TypeDecl: declname='cctl0', quals=[]
          IdentifierType: names=['tacctl_t']
      Decl: name='cctl1', quals=[], storage=[]
        TypeDecl: declname='cctl1', quals=[]
          IdentifierType: names=['tacctl_t']
      Decl: name='cctl2', quals=[], storage=[]
        TypeDecl: declname='cctl2', quals=[]
          IdentifierType: names=['tacctl_t']
      Decl: name='dummy', quals=['volatile'], storage=[]
        ArrayDecl: 
          TypeDecl: declname='dummy', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='4'
      Decl: name='tar', quals=['volatile'], storage=[]
        TypeDecl: declname='tar', quals=['volatile']
          IdentifierType: names=['unsigned']
      Decl: name='taccr0', quals=['volatile'], storage=[]
        TypeDecl: declname='taccr0', quals=['volatile']
          IdentifierType: names=['unsigned']
      Decl: name='taccr1', quals=['volatile'], storage=[]
        TypeDecl: declname='taccr1', quals=['volatile']
          IdentifierType: names=['unsigned']
      Decl: name='taccr2', quals=['volatile'], storage=[]
        TypeDecl: declname='taccr2', quals=['volatile']
          IdentifierType: names=['unsigned']
  Decl: name=None, quals=[], storage=[]
    Struct: name='timera_t', packed=False
  Decl: name='TBR@"0x0190"', quals=['volatile'], storage=[]
    TypeDecl: declname='TBR@"0x0190"', quals=['volatile']
      IdentifierType: names=['int', 'unsigned']
  Decl: name='TBCCTL0@"0x0182"', quals=['volatile'], storage=[]
    TypeDecl: declname='TBCCTL0@"0x0182"', quals=['volatile']
      IdentifierType: names=['int', 'unsigned']
  Decl: name='TBCCR0@"0x0192"', quals=['volatile'], storage=[]
    TypeDecl: declname='TBCCR0@"0x0192"', quals=['volatile']
      IdentifierType: names=['int', 'unsigned']
  Typedef: name='tbctl_t', quals=[], storage=['typedef']
    TypeDecl: declname='tbctl_t', quals=[]
      Struct: name='__nesc_unnamed4252', packed=True
        Decl: name='tbifg', quals=['volatile'], storage=[]
          TypeDecl: declname='tbifg', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='tbie', quals=['volatile'], storage=[]
          TypeDecl: declname='tbie', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='tbclr', quals=['volatile'], storage=[]
          TypeDecl: declname='tbclr', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='dummy1', quals=['volatile'], storage=[]
          TypeDecl: declname='dummy1', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='tbmc', quals=['volatile'], storage=[]
          TypeDecl: declname='tbmc', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
        Decl: name='tbid', quals=['volatile'], storage=[]
          TypeDecl: declname='tbid', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
        Decl: name='tbssel', quals=['volatile'], storage=[]
          TypeDecl: declname='tbssel', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
        Decl: name='dummy2', quals=['volatile'], storage=[]
          TypeDecl: declname='dummy2', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='tbcntl', quals=['volatile'], storage=[]
          TypeDecl: declname='tbcntl', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
        Decl: name='tbclgrp', quals=['volatile'], storage=[]
          TypeDecl: declname='tbclgrp', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
  Typedef: name='tbcctl_t', quals=[], storage=['typedef']
    TypeDecl: declname='tbcctl_t', quals=[]
      Struct: name='__nesc_unnamed4253', packed=True
        Decl: name='ccifg', quals=['volatile'], storage=[]
          TypeDecl: declname='ccifg', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='cov', quals=['volatile'], storage=[]
          TypeDecl: declname='cov', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='out', quals=['volatile'], storage=[]
          TypeDecl: declname='out', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='cci', quals=['volatile'], storage=[]
          TypeDecl: declname='cci', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='ccie', quals=['volatile'], storage=[]
          TypeDecl: declname='ccie', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='outmod', quals=['volatile'], storage=[]
          TypeDecl: declname='outmod', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='3'
        Decl: name='cap', quals=['volatile'], storage=[]
          TypeDecl: declname='cap', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='clld', quals=['volatile'], storage=[]
          TypeDecl: declname='clld', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
        Decl: name='scs', quals=['volatile'], storage=[]
          TypeDecl: declname='scs', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='ccis', quals=['volatile'], storage=[]
          TypeDecl: declname='ccis', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
        Decl: name='cm', quals=['volatile'], storage=[]
          TypeDecl: declname='cm', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
  Decl: name=None, quals=[], storage=[]
    Struct: name='timerb_t', packed=False
      Decl: name='ctl', quals=[], storage=[]
        TypeDecl: declname='ctl', quals=[]
          IdentifierType: names=['tbctl_t']
      Decl: name='cctl0', quals=[], storage=[]
        TypeDecl: declname='cctl0', quals=[]
          IdentifierType: names=['tbcctl_t']
      Decl: name='cctl1', quals=[], storage=[]
        TypeDecl: declname='cctl1', quals=[]
          IdentifierType: names=['tbcctl_t']
      Decl: name='cctl2', quals=[], storage=[]
        TypeDecl: declname='cctl2', quals=[]
          IdentifierType: names=['tbcctl_t']
      Decl: name='cctl3', quals=[], storage=[]
        TypeDecl: declname='cctl3', quals=[]
          IdentifierType: names=['tbcctl_t']
      Decl: name='cctl4', quals=[], storage=[]
        TypeDecl: declname='cctl4', quals=[]
          IdentifierType: names=['tbcctl_t']
      Decl: name='cctl5', quals=[], storage=[]
        TypeDecl: declname='cctl5', quals=[]
          IdentifierType: names=['tbcctl_t']
      Decl: name='cctl6', quals=[], storage=[]
        TypeDecl: declname='cctl6', quals=[]
          IdentifierType: names=['tbcctl_t']
      Decl: name='tbr', quals=['volatile'], storage=[]
        TypeDecl: declname='tbr', quals=['volatile']
          IdentifierType: names=['unsigned']
      Decl: name='tbccr0', quals=['volatile'], storage=[]
        TypeDecl: declname='tbccr0', quals=['volatile']
          IdentifierType: names=['unsigned']
      Decl: name='tbccr1', quals=['volatile'], storage=[]
        TypeDecl: declname='tbccr1', quals=['volatile']
          IdentifierType: names=['unsigned']
      Decl: name='tbccr2', quals=['volatile'], storage=[]
        TypeDecl: declname='tbccr2', quals=['volatile']
          IdentifierType: names=['unsigned']
      Decl: name='tbccr3', quals=['volatile'], storage=[]
        TypeDecl: declname='tbccr3', quals=['volatile']
          IdentifierType: names=['unsigned']
      Decl: name='tbccr4', quals=['volatile'], storage=[]
        TypeDecl: declname='tbccr4', quals=['volatile']
          IdentifierType: names=['unsigned']
      Decl: name='tbccr5', quals=['volatile'], storage=[]
        TypeDecl: declname='tbccr5', quals=['volatile']
          IdentifierType: names=['unsigned']
      Decl: name='tbccr6', quals=['volatile'], storage=[]
        TypeDecl: declname='tbccr6', quals=['volatile']
          IdentifierType: names=['unsigned']
  Decl: name=None, quals=[], storage=[]
    Struct: name='timerb_t', packed=False
  Decl: name='DCOCTL@"0x0056"', quals=['volatile'], storage=[]
    TypeDecl: declname='DCOCTL@"0x0056"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='BCSCTL1@"0x0057"', quals=['volatile'], storage=[]
    TypeDecl: declname='BCSCTL1@"0x0057"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='BCSCTL2@"0x0058"', quals=['volatile'], storage=[]
    TypeDecl: declname='BCSCTL2@"0x0058"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='ADC12CTL0@"0x01A0"', quals=['volatile'], storage=[]
    TypeDecl: declname='ADC12CTL0@"0x01A0"', quals=['volatile']
      IdentifierType: names=['int', 'unsigned']
  Decl: name='ADC12CTL1@"0x01A2"', quals=['volatile'], storage=[]
    TypeDecl: declname='ADC12CTL1@"0x01A2"', quals=['volatile']
      IdentifierType: names=['int', 'unsigned']
  Typedef: name='adc12ctl0_t', quals=[], storage=['typedef']
    TypeDecl: declname='adc12ctl0_t', quals=[]
      Struct: name='__nesc_unnamed4254', packed=True
        Decl: name='adc12sc', quals=['volatile'], storage=[]
          TypeDecl: declname='adc12sc', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='enc', quals=['volatile'], storage=[]
          TypeDecl: declname='enc', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='adc12tovie', quals=['volatile'], storage=[]
          TypeDecl: declname='adc12tovie', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='adc12ovie', quals=['volatile'], storage=[]
          TypeDecl: declname='adc12ovie', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='adc12on', quals=['volatile'], storage=[]
          TypeDecl: declname='adc12on', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='refon', quals=['volatile'], storage=[]
          TypeDecl: declname='refon', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='r2_5v', quals=['volatile'], storage=[]
          TypeDecl: declname='r2_5v', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='msc', quals=['volatile'], storage=[]
          TypeDecl: declname='msc', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='sht0', quals=['volatile'], storage=[]
          TypeDecl: declname='sht0', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='4'
        Decl: name='sht1', quals=['volatile'], storage=[]
          TypeDecl: declname='sht1', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='4'
  Typedef: name='adc12ctl1_t', quals=[], storage=['typedef']
    TypeDecl: declname='adc12ctl1_t', quals=[]
      Struct: name='__nesc_unnamed4255', packed=True
        Decl: name='adc12busy', quals=['volatile'], storage=[]
          TypeDecl: declname='adc12busy', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='conseq', quals=['volatile'], storage=[]
          TypeDecl: declname='conseq', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
        Decl: name='adc12ssel', quals=['volatile'], storage=[]
          TypeDecl: declname='adc12ssel', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
        Decl: name='adc12div', quals=['volatile'], storage=[]
          TypeDecl: declname='adc12div', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='3'
        Decl: name='issh', quals=['volatile'], storage=[]
          TypeDecl: declname='issh', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='shp', quals=['volatile'], storage=[]
          TypeDecl: declname='shp', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='shs', quals=['volatile'], storage=[]
          TypeDecl: declname='shs', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='2'
        Decl: name='cstartadd', quals=['volatile'], storage=[]
          TypeDecl: declname='cstartadd', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='4'
  Typedef: name='adc12xflg_t', quals=[], storage=['typedef']
    TypeDecl: declname='adc12xflg_t', quals=[]
      Struct: name='__nesc_unnamed4256', packed=True
        Decl: name='bit0', quals=['volatile'], storage=[]
          TypeDecl: declname='bit0', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit1', quals=['volatile'], storage=[]
          TypeDecl: declname='bit1', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit2', quals=['volatile'], storage=[]
          TypeDecl: declname='bit2', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit3', quals=['volatile'], storage=[]
          TypeDecl: declname='bit3', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit4', quals=['volatile'], storage=[]
          TypeDecl: declname='bit4', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit5', quals=['volatile'], storage=[]
          TypeDecl: declname='bit5', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit6', quals=['volatile'], storage=[]
          TypeDecl: declname='bit6', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit7', quals=['volatile'], storage=[]
          TypeDecl: declname='bit7', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit8', quals=['volatile'], storage=[]
          TypeDecl: declname='bit8', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit9', quals=['volatile'], storage=[]
          TypeDecl: declname='bit9', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit10', quals=['volatile'], storage=[]
          TypeDecl: declname='bit10', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit11', quals=['volatile'], storage=[]
          TypeDecl: declname='bit11', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit12', quals=['volatile'], storage=[]
          TypeDecl: declname='bit12', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit13', quals=['volatile'], storage=[]
          TypeDecl: declname='bit13', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit14', quals=['volatile'], storage=[]
          TypeDecl: declname='bit14', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
        Decl: name='bit15', quals=['volatile'], storage=[]
          TypeDecl: declname='bit15', quals=['volatile']
            IdentifierType: names=['unsigned']
          Constant: type='int', value='1'
  Decl: name=None, quals=[], storage=[]
    Struct: name='adc12_t', packed=False
      Decl: name='ctl0', quals=[], storage=[]
        TypeDecl: declname='ctl0', quals=[]
          IdentifierType: names=['adc12ctl0_t']
      Decl: name='ctl1', quals=[], storage=[]
        TypeDecl: declname='ctl1', quals=[]
          IdentifierType: names=['adc12ctl1_t']
      Decl: name='ifg', quals=[], storage=[]
        TypeDecl: declname='ifg', quals=[]
          IdentifierType: names=['adc12xflg_t']
      Decl: name='ie', quals=[], storage=[]
        TypeDecl: declname='ie', quals=[]
          IdentifierType: names=['adc12xflg_t']
      Decl: name='iv', quals=[], storage=[]
        TypeDecl: declname='iv', quals=[]
          IdentifierType: names=['adc12xflg_t']
  Decl: name=None, quals=[], storage=[]
    Struct: name='adc12_t', packed=False
  Decl: name='ME1@"0x0004"', quals=['volatile'], storage=[]
    TypeDecl: declname='ME1@"0x0004"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='ME2@"0x0005"', quals=['volatile'], storage=[]
    TypeDecl: declname='ME2@"0x0005"', quals=['volatile']
      IdentifierType: names=['char', 'unsigned']
  Decl: name='U0CTLnr@"0x0070"', quals=['volatile'], storage=['static']
    TypeDecl: declname='U0CTLnr@"0x0070"', quals=['volatile']
      IdentifierType: names=['uint8_t']
  Decl: name='I2CTCTLnr@"0x0071"', quals=['volatile'], storage=['static']
    TypeDecl: declname='I2CTCTLnr@"0x0071"', quals=['volatile']
      IdentifierType: names=['uint8_t']
  Decl: name='I2CDCTLnr@"0x0072"', quals=['volatile'], storage=['static']
    TypeDecl: declname='I2CDCTLnr@"0x0072"', quals=['volatile']
      IdentifierType: names=['uint8_t']
  Typedef: name='mcu_power_t', quals=[], storage=['typedef']
    TypeDecl: declname='mcu_power_t', quals=[]
      IdentifierType: names=['uint8_t']
  Decl: name='mcombine', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='m1', quals=[], storage=[]
          TypeDecl: declname='m1', quals=[]
            IdentifierType: names=['mcu_power_t']
        Decl: name='m2', quals=[], storage=[]
          TypeDecl: declname='m2', quals=[]
            IdentifierType: names=['mcu_power_t']
      TypeDecl: declname='mcombine', quals=[]
        IdentifierType: names=['mcu_power_t']
  Decl: name=None, quals=[], storage=[]
    Enum: name='__nesc_unnamed4257'
      EnumeratorList: 
        Enumerator: name='MSP430_POWER_ACTIVE'
          Constant: type='int', value='0'
        Enumerator: name='MSP430_POWER_LPM0'
          Constant: type='int', value='1'
        Enumerator: name='MSP430_POWER_LPM1'
          Constant: type='int', value='2'
        Enumerator: name='MSP430_POWER_LPM2'
          Constant: type='int', value='3'
        Enumerator: name='MSP430_POWER_LPM3'
          Constant: type='int', value='4'
        Enumerator: name='MSP430_POWER_LPM4'
          Constant: type='int', value='5'
  Decl: name='__nesc_disable_interrupt', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='__nesc_disable_interrupt', quals=[]
        IdentifierType: names=['void']
  Decl: name='__nesc_enable_interrupt', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='__nesc_enable_interrupt', quals=[]
        IdentifierType: names=['void']
  Typedef: name='__nesc_atomic_t', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_atomic_t', quals=[]
      IdentifierType: names=['bool']
  Decl: name='__nesc_atomic_start', quals=[], storage=[]
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='__nesc_atomic_start', quals=[]
        IdentifierType: names=['__nesc_atomic_t']
  Decl: name='__nesc_atomic_end', quals=[], storage=[]
    FuncDecl: quals=None
      ParamList: 
        Decl: name='reenable_interrupts', quals=[], storage=[]
          TypeDecl: declname='reenable_interrupts', quals=[]
            IdentifierType: names=['__nesc_atomic_t']
      TypeDecl: declname='__nesc_atomic_end', quals=[]
        IdentifierType: names=['void']
  Decl: name='__nesc_atomic_start', quals=[], storage=[]
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='__nesc_atomic_start', quals=[]
        IdentifierType: names=['__nesc_atomic_t']
  Decl: name='__nesc_atomic_end', quals=[], storage=[]
    FuncDecl: quals=None
      ParamList: 
        Decl: name='reenable_interrupts', quals=[], storage=[]
          TypeDecl: declname='reenable_interrupts', quals=[]
            IdentifierType: names=['__nesc_atomic_t']
      TypeDecl: declname='__nesc_atomic_end', quals=[]
        IdentifierType: names=['void']
  Typedef: name='nx_float', quals=[], storage=['typedef']
    TypeDecl: declname='nx_float', quals=[]
      Struct: name=None, packed=True
        Decl: name='data', quals=[], storage=[]
          ArrayDecl: 
            TypeDecl: declname='data', quals=[]
              IdentifierType: names=['char', 'unsigned']
            Constant: type='int', value='4'
  Typedef: name='__nesc_nxbase_nx_float', quals=[], storage=['typedef']
    TypeDecl: declname='__nesc_nxbase_nx_float', quals=[]
      IdentifierType: names=['float']
  Decl: name='TOSH_SET_SIMO0_PIN', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      TypeDecl: declname='TOSH_SET_SIMO0_PIN', quals=[]
        IdentifierType: names=['void']
  Decl: name='TOSH_CLR_SIMO0_PIN', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      TypeDecl: declname='TOSH_CLR_SIMO0_PIN', quals=[]
        IdentifierType: names=['void']
  Decl: name='TOSH_MAKE_SIMO0_OUTPUT', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      TypeDecl: declname='TOSH_MAKE_SIMO0_OUTPUT', quals=[]
        IdentifierType: names=['void']
  Decl: name='TOSH_SET_UCLK0_PIN', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      TypeDecl: declname='TOSH_SET_UCLK0_PIN', quals=[]
        IdentifierType: names=['void']
  Decl: name='TOSH_CLR_UCLK0_PIN', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      TypeDecl: declname='TOSH_CLR_UCLK0_PIN', quals=[]
        IdentifierType: names=['void']
  Decl: name='TOSH_MAKE_UCLK0_OUTPUT', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      TypeDecl: declname='TOSH_MAKE_UCLK0_OUTPUT', quals=[]
        IdentifierType: names=['void']
  Decl: name=None, quals=[], storage=[]
    Enum: name='__nesc_unnamed4258'
      EnumeratorList: 
        Enumerator: name='TOSH_HUMIDITY_ADDR'
          Constant: type='int', value='5'
        Enumerator: name='TOSH_HUMIDTEMP_ADDR'
          Constant: type='int', value='3'
        Enumerator: name='TOSH_HUMIDITY_RESET'
          Constant: type='int', value='0x1E'
  Decl: name='TOSH_SET_FLASH_CS_PIN', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      TypeDecl: declname='TOSH_SET_FLASH_CS_PIN', quals=[]
        IdentifierType: names=['void']
  Decl: name='TOSH_CLR_FLASH_CS_PIN', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      TypeDecl: declname='TOSH_CLR_FLASH_CS_PIN', quals=[]
        IdentifierType: names=['void']
  Decl: name='TOSH_MAKE_FLASH_CS_OUTPUT', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      TypeDecl: declname='TOSH_MAKE_FLASH_CS_OUTPUT', quals=[]
        IdentifierType: names=['void']
  Decl: name='TOSH_SET_FLASH_HOLD_PIN', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      TypeDecl: declname='TOSH_SET_FLASH_HOLD_PIN', quals=[]
        IdentifierType: names=['void']
  Decl: name='TOSH_MAKE_FLASH_HOLD_OUTPUT', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      TypeDecl: declname='TOSH_MAKE_FLASH_HOLD_OUTPUT', quals=[]
        IdentifierType: names=['void']
  Decl: name=None, quals=[], storage=[]
    Enum: name='__nesc_unnamed4259'
      EnumeratorList: 
        Enumerator: name='MSP430TIMER_CM_NONE'
          Constant: type='int', value='0'
        Enumerator: name='MSP430TIMER_CM_RISING'
          Constant: type='int', value='1'
        Enumerator: name='MSP430TIMER_CM_FALLING'
          Constant: type='int', value='2'
        Enumerator: name='MSP430TIMER_CM_BOTH'
          Constant: type='int', value='3'
        Enumerator: name='MSP430TIMER_STOP_MODE'
          Constant: type='int', value='0'
        Enumerator: name='MSP430TIMER_UP_MODE'
          Constant: type='int', value='1'
        Enumerator: name='MSP430TIMER_CONTINUOUS_MODE'
          Constant: type='int', value='2'
        Enumerator: name='MSP430TIMER_UPDOWN_MODE'
          Constant: type='int', value='3'
        Enumerator: name='MSP430TIMER_TACLK'
          Constant: type='int', value='0'
        Enumerator: name='MSP430TIMER_TBCLK'
          Constant: type='int', value='0'
        Enumerator: name='MSP430TIMER_ACLK'
          Constant: type='int', value='1'
        Enumerator: name='MSP430TIMER_SMCLK'
          Constant: type='int', value='2'
        Enumerator: name='MSP430TIMER_INCLK'
          Constant: type='int', value='3'
        Enumerator: name='MSP430TIMER_CLOCKDIV_1'
          Constant: type='int', value='0'
        Enumerator: name='MSP430TIMER_CLOCKDIV_2'
          Constant: type='int', value='1'
        Enumerator: name='MSP430TIMER_CLOCKDIV_4'
          Constant: type='int', value='2'
        Enumerator: name='MSP430TIMER_CLOCKDIV_8'
          Constant: type='int', value='3'
  Typedef: name='msp430_compare_control_t', quals=[], storage=['typedef']
    TypeDecl: declname='msp430_compare_control_t', quals=[]
      Struct: name='__nesc_unnamed4260', packed=False
        Decl: name='ccifg', quals=[], storage=[]
          TypeDecl: declname='ccifg', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='cov', quals=[], storage=[]
          TypeDecl: declname='cov', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='out', quals=[], storage=[]
          TypeDecl: declname='out', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='cci', quals=[], storage=[]
          TypeDecl: declname='cci', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='ccie', quals=[], storage=[]
          TypeDecl: declname='ccie', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='outmod', quals=[], storage=[]
          TypeDecl: declname='outmod', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='3'
        Decl: name='cap', quals=[], storage=[]
          TypeDecl: declname='cap', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='clld', quals=[], storage=[]
          TypeDecl: declname='clld', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='2'
        Decl: name='scs', quals=[], storage=[]
          TypeDecl: declname='scs', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='ccis', quals=[], storage=[]
          TypeDecl: declname='ccis', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='2'
        Decl: name='cm', quals=[], storage=[]
          TypeDecl: declname='cm', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='2'
  Typedef: name='msp430_timer_a_control_t', quals=[], storage=['typedef']
    TypeDecl: declname='msp430_timer_a_control_t', quals=[]
      Struct: name='__nesc_unnamed4261', packed=False
        Decl: name='taifg', quals=[], storage=[]
          TypeDecl: declname='taifg', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='taie', quals=[], storage=[]
          TypeDecl: declname='taie', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='taclr', quals=[], storage=[]
          TypeDecl: declname='taclr', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='_unused0', quals=[], storage=[]
          TypeDecl: declname='_unused0', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='mc', quals=[], storage=[]
          TypeDecl: declname='mc', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='2'
        Decl: name='id', quals=[], storage=[]
          TypeDecl: declname='id', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='2'
        Decl: name='tassel', quals=[], storage=[]
          TypeDecl: declname='tassel', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='2'
        Decl: name='_unused1', quals=[], storage=[]
          TypeDecl: declname='_unused1', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='6'
  Typedef: name='msp430_timer_b_control_t', quals=[], storage=['typedef']
    TypeDecl: declname='msp430_timer_b_control_t', quals=[]
      Struct: name='__nesc_unnamed4262', packed=False
        Decl: name='tbifg', quals=[], storage=[]
          TypeDecl: declname='tbifg', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='tbie', quals=[], storage=[]
          TypeDecl: declname='tbie', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='tbclr', quals=[], storage=[]
          TypeDecl: declname='tbclr', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='_unused0', quals=[], storage=[]
          TypeDecl: declname='_unused0', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='mc', quals=[], storage=[]
          TypeDecl: declname='mc', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='2'
        Decl: name='id', quals=[], storage=[]
          TypeDecl: declname='id', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='2'
        Decl: name='tbssel', quals=[], storage=[]
          TypeDecl: declname='tbssel', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='2'
        Decl: name='_unused1', quals=[], storage=[]
          TypeDecl: declname='_unused1', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
        Decl: name='cntl', quals=[], storage=[]
          TypeDecl: declname='cntl', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='2'
        Decl: name='tbclgrp', quals=[], storage=[]
          TypeDecl: declname='tbclgrp', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='2'
        Decl: name='_unused2', quals=[], storage=[]
          TypeDecl: declname='_unused2', quals=[]
            IdentifierType: names=['int']
          Constant: type='int', value='1'
  Typedef: name='TMilli', quals=[], storage=['typedef']
    TypeDecl: declname='TMilli', quals=[]
      Struct: name='__nesc_unnamed4263', packed=False
        Decl: name='notUsed', quals=[], storage=[]
          TypeDecl: declname='notUsed', quals=[]
            IdentifierType: names=['int']
  Typedef: name='T32khz', quals=[], storage=['typedef']
    TypeDecl: declname='T32khz', quals=[]
      Struct: name='__nesc_unnamed4264', packed=False
        Decl: name='notUsed', quals=[], storage=[]
          TypeDecl: declname='notUsed', quals=[]
            IdentifierType: names=['int']
  Typedef: name='TMicro', quals=[], storage=['typedef']
    TypeDecl: declname='TMicro', quals=[]
      Struct: name='__nesc_unnamed4265', packed=False
        Decl: name='notUsed', quals=[], storage=[]
          TypeDecl: declname='notUsed', quals=[]
            IdentifierType: names=['int']
  Decl: name=None, quals=[], storage=[]
    Enum: name='__nesc_unnamed4266'
      EnumeratorList: 
        Enumerator: name='LEDS_LED0'
          BinaryOp: op='<<'
            Constant: type='int', value='1'
            Constant: type='int', value='0'
        Enumerator: name='LEDS_LED1'
          BinaryOp: op='<<'
            Constant: type='int', value='1'
            Constant: type='int', value='1'
        Enumerator: name='LEDS_LED2'
          BinaryOp: op='<<'
            Constant: type='int', value='1'
            Constant: type='int', value='2'
        Enumerator: name='LEDS_LED3'
          BinaryOp: op='<<'
            Constant: type='int', value='1'
            Constant: type='int', value='3'
        Enumerator: name='LEDS_LED4'
          BinaryOp: op='<<'
            Constant: type='int', value='1'
            Constant: type='int', value='4'
        Enumerator: name='LEDS_LED5'
          BinaryOp: op='<<'
            Constant: type='int', value='1'
            Constant: type='int', value='5'
        Enumerator: name='LEDS_LED6'
          BinaryOp: op='<<'
            Constant: type='int', value='1'
            Constant: type='int', value='6'
        Enumerator: name='LEDS_LED7'
          BinaryOp: op='<<'
            Constant: type='int', value='1'
            Constant: type='int', value='7'
  Typedef: name='BlinkC_Timer0_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='BlinkC_Timer0_precision_tag', quals=[]
      IdentifierType: names=['TMilli']
  Typedef: name='BlinkC_Timer1_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='BlinkC_Timer1_precision_tag', quals=[]
      IdentifierType: names=['TMilli']
  Typedef: name='BlinkC_Timer2_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='BlinkC_Timer2_precision_tag', quals=[]
      IdentifierType: names=['TMilli']
  Decl: name=None, quals=[], storage=[]
    Enum: name='Msp430Timer32khzC_0___nesc_unnamed4267'
      EnumeratorList: 
        Enumerator: name='Msp430Timer32khzC_0_ALARM_ID'
          Constant: type='int', value='0U'
  Typedef: name='Msp430AlarmC_0_frequency_tag', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430AlarmC_0_frequency_tag', quals=[]
      IdentifierType: names=['T32khz']
  Typedef: name='Msp430AlarmC_0_Alarm_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430AlarmC_0_Alarm_precision_tag', quals=[]
      IdentifierType: names=['Msp430AlarmC_0_frequency_tag']
  Typedef: name='Msp430AlarmC_0_Alarm_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430AlarmC_0_Alarm_size_type', quals=[]
      IdentifierType: names=['uint16_t']
  Typedef: name='Msp430CounterC_0_frequency_tag', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430CounterC_0_frequency_tag', quals=[]
      IdentifierType: names=['T32khz']
  Typedef: name='Msp430CounterC_0_Counter_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430CounterC_0_Counter_precision_tag', quals=[]
      IdentifierType: names=['Msp430CounterC_0_frequency_tag']
  Typedef: name='Msp430CounterC_0_Counter_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430CounterC_0_Counter_size_type', quals=[]
      IdentifierType: names=['uint16_t']
  Typedef: name='TransformCounterC_0_to_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='TransformCounterC_0_to_precision_tag', quals=[]
      IdentifierType: names=['TMilli']
  Typedef: name='TransformCounterC_0_to_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='TransformCounterC_0_to_size_type', quals=[]
      IdentifierType: names=['uint32_t']
  Typedef: name='TransformCounterC_0_from_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='TransformCounterC_0_from_precision_tag', quals=[]
      IdentifierType: names=['T32khz']
  Typedef: name='TransformCounterC_0_from_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='TransformCounterC_0_from_size_type', quals=[]
      IdentifierType: names=['uint16_t']
  Typedef: name='TransformCounterC_0_upper_count_type', quals=[], storage=['typedef']
    TypeDecl: declname='TransformCounterC_0_upper_count_type', quals=[]
      IdentifierType: names=['uint32_t']
  Typedef: name='TransformCounterC_0_CounterFrom_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='TransformCounterC_0_CounterFrom_precision_tag', quals=[]
      IdentifierType: names=['TransformCounterC_0_from_precision_tag']
  Typedef: name='TransformCounterC_0_CounterFrom_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='TransformCounterC_0_CounterFrom_size_type', quals=[]
      IdentifierType: names=['TransformCounterC_0_from_size_type']
  Typedef: name='TransformCounterC_0_Counter_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='TransformCounterC_0_Counter_precision_tag', quals=[]
      IdentifierType: names=['TransformCounterC_0_to_precision_tag']
  Typedef: name='TransformCounterC_0_Counter_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='TransformCounterC_0_Counter_size_type', quals=[]
      IdentifierType: names=['TransformCounterC_0_to_size_type']
  Typedef: name='TransformAlarmC_0_to_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='TransformAlarmC_0_to_precision_tag', quals=[]
      IdentifierType: names=['TMilli']
  Typedef: name='TransformAlarmC_0_to_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='TransformAlarmC_0_to_size_type', quals=[]
      IdentifierType: names=['uint32_t']
  Typedef: name='TransformAlarmC_0_from_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='TransformAlarmC_0_from_precision_tag', quals=[]
      IdentifierType: names=['T32khz']
  Typedef: name='TransformAlarmC_0_from_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='TransformAlarmC_0_from_size_type', quals=[]
      IdentifierType: names=['uint16_t']
  Typedef: name='TransformAlarmC_0_Alarm_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='TransformAlarmC_0_Alarm_precision_tag', quals=[]
      IdentifierType: names=['TransformAlarmC_0_to_precision_tag']
  Typedef: name='TransformAlarmC_0_Alarm_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='TransformAlarmC_0_Alarm_size_type', quals=[]
      IdentifierType: names=['TransformAlarmC_0_to_size_type']
  Typedef: name='TransformAlarmC_0_AlarmFrom_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='TransformAlarmC_0_AlarmFrom_precision_tag', quals=[]
      IdentifierType: names=['TransformAlarmC_0_from_precision_tag']
  Typedef: name='TransformAlarmC_0_AlarmFrom_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='TransformAlarmC_0_AlarmFrom_size_type', quals=[]
      IdentifierType: names=['TransformAlarmC_0_from_size_type']
  Typedef: name='TransformAlarmC_0_Counter_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='TransformAlarmC_0_Counter_precision_tag', quals=[]
      IdentifierType: names=['TransformAlarmC_0_to_precision_tag']
  Typedef: name='TransformAlarmC_0_Counter_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='TransformAlarmC_0_Counter_size_type', quals=[]
      IdentifierType: names=['TransformAlarmC_0_to_size_type']
  Typedef: name='AlarmToTimerC_0_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='AlarmToTimerC_0_precision_tag', quals=[]
      IdentifierType: names=['TMilli']
  Typedef: name='AlarmToTimerC_0_Alarm_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='AlarmToTimerC_0_Alarm_precision_tag', quals=[]
      IdentifierType: names=['AlarmToTimerC_0_precision_tag']
  Typedef: name='AlarmToTimerC_0_Alarm_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='AlarmToTimerC_0_Alarm_size_type', quals=[]
      IdentifierType: names=['uint32_t']
  Typedef: name='AlarmToTimerC_0_Timer_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='AlarmToTimerC_0_Timer_precision_tag', quals=[]
      IdentifierType: names=['AlarmToTimerC_0_precision_tag']
  Typedef: name='VirtualizeTimerC_0_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='VirtualizeTimerC_0_precision_tag', quals=[]
      IdentifierType: names=['TMilli']
  Typedef: name='VirtualizeTimerC_0_TimerFrom_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='VirtualizeTimerC_0_TimerFrom_precision_tag', quals=[]
      IdentifierType: names=['VirtualizeTimerC_0_precision_tag']
  Typedef: name='VirtualizeTimerC_0_Timer_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='VirtualizeTimerC_0_Timer_precision_tag', quals=[]
      IdentifierType: names=['VirtualizeTimerC_0_precision_tag']
  Typedef: name='CounterToLocalTimeC_0_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='CounterToLocalTimeC_0_precision_tag', quals=[]
      IdentifierType: names=['TMilli']
  Typedef: name='CounterToLocalTimeC_0_LocalTime_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='CounterToLocalTimeC_0_LocalTime_precision_tag', quals=[]
      IdentifierType: names=['CounterToLocalTimeC_0_precision_tag']
  Typedef: name='CounterToLocalTimeC_0_Counter_precision_tag', quals=[], storage=['typedef']
    TypeDecl: declname='CounterToLocalTimeC_0_Counter_precision_tag', quals=[]
      IdentifierType: names=['CounterToLocalTimeC_0_precision_tag']
  Typedef: name='CounterToLocalTimeC_0_Counter_size_type', quals=[], storage=['typedef']
    TypeDecl: declname='CounterToLocalTimeC_0_Counter_size_type', quals=[]
      IdentifierType: names=['uint32_t']
  Decl: name='PlatformP_Init_init', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='PlatformP_Init_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='MotePlatformC_Init_init', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='MotePlatformC_Init_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='Msp430ClockP_Msp430ClockInit_defaultInitClocks', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_defaultInitClocks', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_default_initTimerB', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_default_initTimerB', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_defaultInitTimerA', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_defaultInitTimerA', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_default_initTimerA', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_default_initTimerA', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_defaultInitTimerB', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_defaultInitTimerB', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_defaultSetupDcoCalibrate', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_defaultSetupDcoCalibrate', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_default_setupDcoCalibrate', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_default_setupDcoCalibrate', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_default_initClocks', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_default_initClocks', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Init_init', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Init_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='Msp430TimerP_0_VectorTimerX0_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_0_VectorTimerX0_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_0_Overflow_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_0_Overflow_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_0_VectorTimerX1_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_0_VectorTimerX1_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_0_Event_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='arg_0x1561800', quals=[], storage=[]
          TypeDecl: declname='arg_0x1561800', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='Msp430TimerP_0_Event_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_1_VectorTimerX0_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_1_VectorTimerX0_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_1_Overflow_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_1_Overflow_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_1_VectorTimerX1_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_1_VectorTimerX1_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_1_Event_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='arg_0x1561800', quals=[], storage=[]
          TypeDecl: declname='arg_0x1561800', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='Msp430TimerP_1_Event_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_1_Timer_get', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_1_Timer_get', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerP_1_Timer_isOverflowPending', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_1_Timer_isOverflowPending', quals=[]
        IdentifierType: names=['bool']
  Decl: name='Msp430TimerCapComP_0_Capture_getEvent', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_0_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_0_Capture_default_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_0_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_0_Control_getControl', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_0_Control_getControl', quals=[]
        IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_0_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_0_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_0_Compare_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_0_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_0_Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_0_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_1_Capture_getEvent', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_1_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_1_Capture_default_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_1_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_1_Control_getControl', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_1_Control_getControl', quals=[]
        IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_1_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_1_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_1_Compare_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_1_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_1_Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_1_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_2_Capture_getEvent', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_2_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_2_Capture_default_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_2_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_2_Control_getControl', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_2_Control_getControl', quals=[]
        IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_2_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_2_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_2_Compare_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_2_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_2_Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_2_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Capture_getEvent', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_3_Capture_default_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_3_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Control_getControl', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Control_getControl', quals=[]
        IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_3_Control_enableEvents', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Control_enableEvents', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Control_setControlAsCompare', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Control_setControlAsCompare', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Control_disableEvents', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Control_disableEvents', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Control_clearPendingInterrupt', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Control_clearPendingInterrupt', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Compare_setEvent', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_3_Compare_setEvent', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Compare_setEventFromNow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='delta', quals=[], storage=[]
          TypeDecl: declname='delta', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_3_Compare_setEventFromNow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_4_Capture_getEvent', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_4_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_4_Capture_default_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_4_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_4_Control_getControl', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_4_Control_getControl', quals=[]
        IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_4_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_4_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_4_Compare_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_4_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_4_Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_4_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_5_Capture_getEvent', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_5_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_5_Capture_default_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_5_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_5_Control_getControl', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_5_Control_getControl', quals=[]
        IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_5_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_5_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_5_Compare_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_5_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_5_Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_5_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_6_Capture_getEvent', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_6_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_6_Capture_default_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_6_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_6_Control_getControl', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_6_Control_getControl', quals=[]
        IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_6_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_6_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_6_Compare_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_6_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_6_Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_6_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_7_Capture_getEvent', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_7_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_7_Capture_default_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_7_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_7_Control_getControl', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_7_Control_getControl', quals=[]
        IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_7_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_7_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_7_Compare_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_7_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_7_Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_7_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_8_Capture_getEvent', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_8_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_8_Capture_default_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_8_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_8_Control_getControl', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_8_Control_getControl', quals=[]
        IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_8_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_8_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_8_Compare_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_8_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_8_Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_8_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_9_Capture_getEvent', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_9_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_9_Capture_default_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_9_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_9_Control_getControl', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_9_Control_getControl', quals=[]
        IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_9_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_9_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_9_Compare_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_9_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_9_Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_9_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='SchedulerBasicP_TaskBasic_postTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='arg_0x147bb38', quals=[], storage=[]
          TypeDecl: declname='arg_0x147bb38', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='SchedulerBasicP_TaskBasic_postTask', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='SchedulerBasicP_TaskBasic_default_runTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='arg_0x147bb38', quals=[], storage=[]
          TypeDecl: declname='arg_0x147bb38', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='SchedulerBasicP_TaskBasic_default_runTask', quals=[]
        IdentifierType: names=['void']
  Decl: name='SchedulerBasicP_Scheduler_init', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='SchedulerBasicP_Scheduler_init', quals=[]
        IdentifierType: names=['void']
  Decl: name='SchedulerBasicP_Scheduler_taskLoop', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='SchedulerBasicP_Scheduler_taskLoop', quals=[]
        IdentifierType: names=['void']
  Decl: name='SchedulerBasicP_Scheduler_runNextTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='SchedulerBasicP_Scheduler_runNextTask', quals=[]
        IdentifierType: names=['bool']
  Decl: name='McuSleepC_McuPowerOverride_default_lowestState', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='McuSleepC_McuPowerOverride_default_lowestState', quals=[]
        IdentifierType: names=['mcu_power_t']
  Decl: name='McuSleepC_McuSleep_sleep', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='McuSleepC_McuSleep_sleep', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Timer0_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='BlinkC_Timer0_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Boot_booted', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='BlinkC_Boot_booted', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Timer1_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='BlinkC_Timer1_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Timer2_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='BlinkC_Timer2_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Init_init', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Init_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='LedsP_Leds_led0Toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Leds_led0Toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Leds_led1Toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Leds_led1Toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Leds_led2Toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Leds_led2Toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_36_IO_toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_36_IO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_36_IO_makeOutput', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_36_IO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_36_IO_set', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_36_IO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_37_IO_toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_37_IO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_37_IO_makeOutput', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_37_IO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_37_IO_set', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_37_IO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_38_IO_toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_38_IO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_38_IO_makeOutput', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_38_IO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_38_IO_set', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_38_IO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_0_GeneralIO_toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_0_GeneralIO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_0_GeneralIO_makeOutput', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_0_GeneralIO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_0_GeneralIO_set', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_0_GeneralIO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_1_GeneralIO_toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_1_GeneralIO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_1_GeneralIO_makeOutput', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_1_GeneralIO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_1_GeneralIO_set', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_1_GeneralIO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_2_GeneralIO_toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_2_GeneralIO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_2_GeneralIO_makeOutput', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_2_GeneralIO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_2_GeneralIO_set', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_2_GeneralIO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Msp430Compare_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Msp430Compare_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Msp430Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Msp430Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Alarm_startAt', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='t0', quals=[], storage=[]
          TypeDecl: declname='t0', quals=[]
            IdentifierType: names=['Msp430AlarmC_0_Alarm_size_type']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['Msp430AlarmC_0_Alarm_size_type']
      TypeDecl: declname='Msp430AlarmC_0_Alarm_startAt', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Alarm_stop', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Alarm_stop', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Init_init', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Init_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='Msp430CounterC_0_Msp430Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430CounterC_0_Msp430Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430CounterC_0_Counter_get', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430CounterC_0_Counter_get', quals=[]
        IdentifierType: names=['Msp430CounterC_0_Counter_size_type']
  Decl: name='Msp430CounterC_0_Counter_isOverflowPending', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430CounterC_0_Counter_isOverflowPending', quals=[]
        IdentifierType: names=['bool']
  Decl: name='TransformCounterC_0_CounterFrom_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformCounterC_0_CounterFrom_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformCounterC_0_Counter_get', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformCounterC_0_Counter_get', quals=[]
        IdentifierType: names=['TransformCounterC_0_Counter_size_type']
  Decl: name='TransformAlarmC_0_Alarm_getNow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_Alarm_getNow', quals=[]
        IdentifierType: names=['TransformAlarmC_0_Alarm_size_type']
  Decl: name='TransformAlarmC_0_Alarm_startAt', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='t0', quals=[], storage=[]
          TypeDecl: declname='t0', quals=[]
            IdentifierType: names=['TransformAlarmC_0_Alarm_size_type']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['TransformAlarmC_0_Alarm_size_type']
      TypeDecl: declname='TransformAlarmC_0_Alarm_startAt', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformAlarmC_0_Alarm_getAlarm', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_Alarm_getAlarm', quals=[]
        IdentifierType: names=['TransformAlarmC_0_Alarm_size_type']
  Decl: name='TransformAlarmC_0_Alarm_stop', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_Alarm_stop', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformAlarmC_0_AlarmFrom_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_AlarmFrom_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformAlarmC_0_Counter_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_Counter_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='AlarmToTimerC_0_fired_runTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_fired_runTask', quals=[]
        IdentifierType: names=['void']
  Decl: name='AlarmToTimerC_0_Alarm_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_Alarm_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='AlarmToTimerC_0_Timer_getNow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_Timer_getNow', quals=[]
        IdentifierType: names=['uint32_t']
  Decl: name='AlarmToTimerC_0_Timer_startOneShotAt', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='t0', quals=[], storage=[]
          TypeDecl: declname='t0', quals=[]
            IdentifierType: names=['uint32_t']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['uint32_t']
      TypeDecl: declname='AlarmToTimerC_0_Timer_startOneShotAt', quals=[]
        IdentifierType: names=['void']
  Decl: name='AlarmToTimerC_0_Timer_stop', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_Timer_stop', quals=[]
        IdentifierType: names=['void']
  Decl: name='VirtualizeTimerC_0_updateFromTimer_runTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='VirtualizeTimerC_0_updateFromTimer_runTask', quals=[]
        IdentifierType: names=['void']
  Decl: name='VirtualizeTimerC_0_TimerFrom_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='VirtualizeTimerC_0_TimerFrom_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='VirtualizeTimerC_0_Timer_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='arg_0x18a3ea0', quals=[], storage=[]
          TypeDecl: declname='arg_0x18a3ea0', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='VirtualizeTimerC_0_Timer_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='VirtualizeTimerC_0_Timer_startPeriodic', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='arg_0x18a3ea0', quals=[], storage=[]
          TypeDecl: declname='arg_0x18a3ea0', quals=[]
            IdentifierType: names=['uint8_t']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['uint32_t']
      TypeDecl: declname='VirtualizeTimerC_0_Timer_startPeriodic', quals=[]
        IdentifierType: names=['void']
  Decl: name='CounterToLocalTimeC_0_Counter_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='CounterToLocalTimeC_0_Counter_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='PlatformP_MoteInit_init', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='PlatformP_MoteInit_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='PlatformP_MoteClockInit_init', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='PlatformP_MoteClockInit_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='PlatformP_LedsInit_init', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='PlatformP_LedsInit_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='PlatformP_Init_init', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='PlatformP_Init_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='MotePlatformC_uwait', quals=[], storage=['__inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='u', quals=[], storage=[]
          TypeDecl: declname='u', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='MotePlatformC_uwait', quals=[]
        IdentifierType: names=['void']
  Decl: name='MotePlatformC_TOSH_wait', quals=[], storage=['__inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='MotePlatformC_TOSH_wait', quals=[]
        IdentifierType: names=['void']
  Decl: name='MotePlatformC_TOSH_FLASH_M25P_DP_bit', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='set', quals=[], storage=[]
          TypeDecl: declname='set', quals=[]
            IdentifierType: names=['bool']
      TypeDecl: declname='MotePlatformC_TOSH_FLASH_M25P_DP_bit', quals=[]
        IdentifierType: names=['void']
  Decl: name='MotePlatformC_TOSH_FLASH_M25P_DP', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='MotePlatformC_TOSH_FLASH_M25P_DP', quals=[]
        IdentifierType: names=['void']
  Decl: name='MotePlatformC_Init_init', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='MotePlatformC_Init_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='Msp430ClockP_Msp430ClockInit_initTimerB', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_initTimerB', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_initTimerA', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_initTimerA', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_setupDcoCalibrate', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_setupDcoCalibrate', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_initClocks', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_initClocks', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_IE1@"0x0000"', quals=['volatile'], storage=['static']
    TypeDecl: declname='Msp430ClockP_IE1@"0x0000"', quals=['volatile']
      IdentifierType: names=['uint8_t']
  Decl: name='Msp430ClockP_TA0CTL@"0x0160"', quals=['volatile'], storage=['static']
    TypeDecl: declname='Msp430ClockP_TA0CTL@"0x0160"', quals=['volatile']
      IdentifierType: names=['uint16_t']
  Decl: name='Msp430ClockP_TA0IV@"0x012E"', quals=['volatile'], storage=['static']
    TypeDecl: declname='Msp430ClockP_TA0IV@"0x012E"', quals=['volatile']
      IdentifierType: names=['uint16_t']
  Decl: name='Msp430ClockP_TBCTL@"0x0180"', quals=['volatile'], storage=['static']
    TypeDecl: declname='Msp430ClockP_TBCTL@"0x0180"', quals=['volatile']
      IdentifierType: names=['uint16_t']
  Decl: name='Msp430ClockP_TBIV@"0x011E"', quals=['volatile'], storage=['static']
    TypeDecl: declname='Msp430ClockP_TBIV@"0x011E"', quals=['volatile']
      IdentifierType: names=['uint16_t']
  Decl: name=None, quals=[], storage=[]
    Enum: name='Msp430ClockP___nesc_unnamed4268'
      EnumeratorList: 
        Enumerator: name='Msp430ClockP_ACLK_CALIB_PERIOD'
          Constant: type='int', value='8'
        Enumerator: name='Msp430ClockP_TARGET_DCO_DELTA'
          BinaryOp: op='*'
            BinaryOp: op='/'
              Constant: type='int', value='4096'
              Constant: type='int', value='32'
            ID: name='Msp430ClockP_ACLK_CALIB_PERIOD'
  Decl: name='Msp430ClockP_Msp430ClockInit_defaultSetupDcoCalibrate', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_defaultSetupDcoCalibrate', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_defaultInitClocks', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_defaultInitClocks', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_defaultInitTimerA', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_defaultInitTimerA', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_defaultInitTimerB', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_defaultInitTimerB', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_default_setupDcoCalibrate', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_default_setupDcoCalibrate', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_default_initClocks', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_default_initClocks', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_default_initTimerA', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_default_initTimerA', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Msp430ClockInit_default_initTimerB', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Msp430ClockInit_default_initTimerB', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_startTimerA', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_startTimerA', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_startTimerB', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_startTimerB', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_set_dco_calib', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='calib', quals=[], storage=[]
          TypeDecl: declname='calib', quals=[]
            IdentifierType: names=['int']
      TypeDecl: declname='Msp430ClockP_set_dco_calib', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_test_calib_busywait_delta', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='calib', quals=[], storage=[]
          TypeDecl: declname='calib', quals=[]
            IdentifierType: names=['int']
      TypeDecl: declname='Msp430ClockP_test_calib_busywait_delta', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430ClockP_busyCalibrateDco', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_busyCalibrateDco', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430ClockP_Init_init', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430ClockP_Init_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='Msp430TimerP_0_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='arg_0x1561800', quals=[], storage=[]
          TypeDecl: declname='arg_0x1561800', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='Msp430TimerP_0_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_0_Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_0_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_0_VectorTimerX0_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_0_VectorTimerX0_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_0_VectorTimerX1_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_0_VectorTimerX1_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_0_Overflow_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_0_Overflow_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_0_Event_default_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='n', quals=[], storage=[]
          TypeDecl: declname='n', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='Msp430TimerP_0_Event_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_1_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='arg_0x1561800', quals=[], storage=[]
          TypeDecl: declname='arg_0x1561800', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='Msp430TimerP_1_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_1_Timer_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_1_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_1_Timer_get', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_1_Timer_get', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerP_1_Timer_isOverflowPending', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_1_Timer_isOverflowPending', quals=[]
        IdentifierType: names=['bool']
  Decl: name='Msp430TimerP_1_VectorTimerX0_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_1_VectorTimerX0_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_1_VectorTimerX1_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_1_VectorTimerX1_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_1_Overflow_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerP_1_Overflow_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerP_1_Event_default_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='n', quals=[], storage=[]
          TypeDecl: declname='n', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='Msp430TimerP_1_Event_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_0_Capture_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_0_Capture_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_0_Compare_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_0_Compare_fired', quals=[]
        IdentifierType: names=['void']
  Typedef: name='Msp430TimerCapComP_0_cc_t', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430TimerCapComP_0_cc_t', quals=[]
      IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_0_int2CC', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_0_int2CC', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_0_cc_t']
  Decl: name='Msp430TimerCapComP_0_Control_getControl', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_0_Control_getControl', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_0_cc_t']
  Decl: name='Msp430TimerCapComP_0_Capture_getEvent', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_0_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_0_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_0_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_0_Capture_default_captured', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='n', quals=[], storage=[]
          TypeDecl: declname='n', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_0_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_0_Compare_default_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_0_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_0_Timer_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_0_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_1_Capture_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_1_Capture_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_1_Compare_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_1_Compare_fired', quals=[]
        IdentifierType: names=['void']
  Typedef: name='Msp430TimerCapComP_1_cc_t', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430TimerCapComP_1_cc_t', quals=[]
      IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_1_int2CC', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_1_int2CC', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_1_cc_t']
  Decl: name='Msp430TimerCapComP_1_Control_getControl', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_1_Control_getControl', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_1_cc_t']
  Decl: name='Msp430TimerCapComP_1_Capture_getEvent', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_1_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_1_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_1_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_1_Capture_default_captured', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='n', quals=[], storage=[]
          TypeDecl: declname='n', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_1_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_1_Compare_default_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_1_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_1_Timer_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_1_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_2_Capture_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_2_Capture_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_2_Compare_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_2_Compare_fired', quals=[]
        IdentifierType: names=['void']
  Typedef: name='Msp430TimerCapComP_2_cc_t', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430TimerCapComP_2_cc_t', quals=[]
      IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_2_int2CC', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_2_int2CC', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_2_cc_t']
  Decl: name='Msp430TimerCapComP_2_Control_getControl', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_2_Control_getControl', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_2_cc_t']
  Decl: name='Msp430TimerCapComP_2_Capture_getEvent', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_2_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_2_Event_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_2_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_2_Capture_default_captured', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='n', quals=[], storage=[]
          TypeDecl: declname='n', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_2_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_2_Compare_default_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_2_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_2_Timer_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_2_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Capture_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_3_Capture_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Compare_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Compare_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Timer_get', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Timer_get', quals=[]
        IdentifierType: names=['uint16_t']
  Typedef: name='Msp430TimerCapComP_3_cc_t', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430TimerCapComP_3_cc_t', quals=[]
      IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_3_CC2int', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['Msp430TimerCapComP_3_cc_t']
      TypeDecl: declname='Msp430TimerCapComP_3_CC2int', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_3_int2CC', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_3_int2CC', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_3_cc_t']
  Decl: name='Msp430TimerCapComP_3_compareControl', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_compareControl', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_3_Control_getControl', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Control_getControl', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_3_cc_t']
  Decl: name='Msp430TimerCapComP_3_Control_clearPendingInterrupt', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Control_clearPendingInterrupt', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Control_setControlAsCompare', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Control_setControlAsCompare', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Control_enableEvents', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Control_enableEvents', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Control_disableEvents', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Control_disableEvents', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Capture_getEvent', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_3_Compare_setEvent', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_3_Compare_setEvent', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Compare_setEventFromNow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_3_Compare_setEventFromNow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Event_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Capture_default_captured', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='n', quals=[], storage=[]
          TypeDecl: declname='n', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_3_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_3_Timer_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_3_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_4_Capture_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_4_Capture_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_4_Compare_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_4_Compare_fired', quals=[]
        IdentifierType: names=['void']
  Typedef: name='Msp430TimerCapComP_4_cc_t', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430TimerCapComP_4_cc_t', quals=[]
      IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_4_int2CC', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_4_int2CC', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_4_cc_t']
  Decl: name='Msp430TimerCapComP_4_Control_getControl', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_4_Control_getControl', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_4_cc_t']
  Decl: name='Msp430TimerCapComP_4_Capture_getEvent', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_4_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_4_Event_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_4_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_4_Capture_default_captured', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='n', quals=[], storage=[]
          TypeDecl: declname='n', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_4_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_4_Compare_default_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_4_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_4_Timer_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_4_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_5_Capture_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_5_Capture_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_5_Compare_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_5_Compare_fired', quals=[]
        IdentifierType: names=['void']
  Typedef: name='Msp430TimerCapComP_5_cc_t', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430TimerCapComP_5_cc_t', quals=[]
      IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_5_int2CC', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_5_int2CC', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_5_cc_t']
  Decl: name='Msp430TimerCapComP_5_Control_getControl', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_5_Control_getControl', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_5_cc_t']
  Decl: name='Msp430TimerCapComP_5_Capture_getEvent', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_5_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_5_Event_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_5_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_5_Capture_default_captured', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='n', quals=[], storage=[]
          TypeDecl: declname='n', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_5_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_5_Compare_default_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_5_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_5_Timer_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_5_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_6_Capture_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_6_Capture_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_6_Compare_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_6_Compare_fired', quals=[]
        IdentifierType: names=['void']
  Typedef: name='Msp430TimerCapComP_6_cc_t', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430TimerCapComP_6_cc_t', quals=[]
      IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_6_int2CC', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_6_int2CC', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_6_cc_t']
  Decl: name='Msp430TimerCapComP_6_Control_getControl', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_6_Control_getControl', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_6_cc_t']
  Decl: name='Msp430TimerCapComP_6_Capture_getEvent', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_6_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_6_Event_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_6_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_6_Capture_default_captured', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='n', quals=[], storage=[]
          TypeDecl: declname='n', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_6_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_6_Compare_default_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_6_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_6_Timer_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_6_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_7_Capture_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_7_Capture_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_7_Compare_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_7_Compare_fired', quals=[]
        IdentifierType: names=['void']
  Typedef: name='Msp430TimerCapComP_7_cc_t', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430TimerCapComP_7_cc_t', quals=[]
      IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_7_int2CC', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_7_int2CC', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_7_cc_t']
  Decl: name='Msp430TimerCapComP_7_Control_getControl', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_7_Control_getControl', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_7_cc_t']
  Decl: name='Msp430TimerCapComP_7_Capture_getEvent', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_7_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_7_Event_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_7_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_7_Capture_default_captured', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='n', quals=[], storage=[]
          TypeDecl: declname='n', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_7_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_7_Compare_default_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_7_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_7_Timer_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_7_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_8_Capture_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_8_Capture_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_8_Compare_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_8_Compare_fired', quals=[]
        IdentifierType: names=['void']
  Typedef: name='Msp430TimerCapComP_8_cc_t', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430TimerCapComP_8_cc_t', quals=[]
      IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_8_int2CC', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_8_int2CC', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_8_cc_t']
  Decl: name='Msp430TimerCapComP_8_Control_getControl', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_8_Control_getControl', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_8_cc_t']
  Decl: name='Msp430TimerCapComP_8_Capture_getEvent', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_8_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_8_Event_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_8_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_8_Capture_default_captured', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='n', quals=[], storage=[]
          TypeDecl: declname='n', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_8_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_8_Compare_default_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_8_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_8_Timer_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_8_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_9_Capture_captured', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_9_Capture_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_9_Compare_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_9_Compare_fired', quals=[]
        IdentifierType: names=['void']
  Typedef: name='Msp430TimerCapComP_9_cc_t', quals=[], storage=['typedef']
    TypeDecl: declname='Msp430TimerCapComP_9_cc_t', quals=[]
      IdentifierType: names=['msp430_compare_control_t']
  Decl: name='Msp430TimerCapComP_9_int2CC', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='x', quals=[], storage=[]
          TypeDecl: declname='x', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_9_int2CC', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_9_cc_t']
  Decl: name='Msp430TimerCapComP_9_Control_getControl', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_9_Control_getControl', quals=[]
        IdentifierType: names=['Msp430TimerCapComP_9_cc_t']
  Decl: name='Msp430TimerCapComP_9_Capture_getEvent', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_9_Capture_getEvent', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430TimerCapComP_9_Event_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_9_Event_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_9_Capture_default_captured', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='n', quals=[], storage=[]
          TypeDecl: declname='n', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430TimerCapComP_9_Capture_default_captured', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_9_Compare_default_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_9_Compare_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCapComP_9_Timer_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCapComP_9_Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCommonP_VectorTimerB1_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCommonP_VectorTimerB1_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCommonP_VectorTimerA0_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCommonP_VectorTimerA0_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCommonP_VectorTimerA1_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCommonP_VectorTimerA1_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430TimerCommonP_VectorTimerB0_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430TimerCommonP_VectorTimerB0_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='sig_TIMERA0_VECTOR', quals=[], storage=[]
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='sig_TIMERA0_VECTOR', quals=[]
        IdentifierType: names=['void']
  Decl: name='sig_TIMERA1_VECTOR', quals=[], storage=[]
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='sig_TIMERA1_VECTOR', quals=[]
        IdentifierType: names=['void']
  Decl: name='sig_TIMERB0_VECTOR', quals=[], storage=[]
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='sig_TIMERB0_VECTOR', quals=[]
        IdentifierType: names=['void']
  Decl: name='sig_TIMERB1_VECTOR', quals=[], storage=[]
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='sig_TIMERB1_VECTOR', quals=[]
        IdentifierType: names=['void']
  Decl: name='RealMainP_SoftwareInit_init', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='RealMainP_SoftwareInit_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='RealMainP_Boot_booted', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='RealMainP_Boot_booted', quals=[]
        IdentifierType: names=['void']
  Decl: name='RealMainP_PlatformInit_init', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='RealMainP_PlatformInit_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='RealMainP_Scheduler_init', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='RealMainP_Scheduler_init', quals=[]
        IdentifierType: names=['void']
  Decl: name='RealMainP_Scheduler_taskLoop', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='RealMainP_Scheduler_taskLoop', quals=[]
        IdentifierType: names=['void']
  Decl: name='RealMainP_Scheduler_runNextTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='RealMainP_Scheduler_runNextTask', quals=[]
        IdentifierType: names=['bool']
  Decl: name='main', quals=[], storage=[]
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='main', quals=[]
        IdentifierType: names=['int']
  Decl: name='SchedulerBasicP_TaskBasic_runTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='arg_0x147bb38', quals=[], storage=[]
          TypeDecl: declname='arg_0x147bb38', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='SchedulerBasicP_TaskBasic_runTask', quals=[]
        IdentifierType: names=['void']
  Decl: name='SchedulerBasicP_McuSleep_sleep', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='SchedulerBasicP_McuSleep_sleep', quals=[]
        IdentifierType: names=['void']
  Decl: name=None, quals=[], storage=[]
    Enum: name='SchedulerBasicP___nesc_unnamed4269'
      EnumeratorList: 
        Enumerator: name='SchedulerBasicP_NUM_TASKS'
          Constant: type='int', value='2U'
        Enumerator: name='SchedulerBasicP_NO_TASK'
          Constant: type='int', value='255'
  Decl: name='SchedulerBasicP_m_head', quals=[], storage=[]
    TypeDecl: declname='SchedulerBasicP_m_head', quals=[]
      IdentifierType: names=['uint8_t']
  Decl: name='SchedulerBasicP_m_tail', quals=[], storage=[]
    TypeDecl: declname='SchedulerBasicP_m_tail', quals=[]
      IdentifierType: names=['uint8_t']
  Decl: name='SchedulerBasicP_m_next', quals=[], storage=[]
    ArrayDecl: 
      TypeDecl: declname='SchedulerBasicP_m_next', quals=[]
        IdentifierType: names=['uint8_t']
      ID: name='SchedulerBasicP_NUM_TASKS'
  Decl: name='SchedulerBasicP_popTask', quals=[], storage=['__inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='SchedulerBasicP_popTask', quals=[]
        IdentifierType: names=['uint8_t']
  Decl: name='SchedulerBasicP_isWaiting', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='id', quals=[], storage=[]
          TypeDecl: declname='id', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='SchedulerBasicP_isWaiting', quals=[]
        IdentifierType: names=['bool']
  Decl: name='SchedulerBasicP_pushTask', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='id', quals=[], storage=[]
          TypeDecl: declname='id', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='SchedulerBasicP_pushTask', quals=[]
        IdentifierType: names=['bool']
  Decl: name='SchedulerBasicP_Scheduler_init', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='SchedulerBasicP_Scheduler_init', quals=[]
        IdentifierType: names=['void']
  Decl: name='SchedulerBasicP_Scheduler_runNextTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='SchedulerBasicP_Scheduler_runNextTask', quals=[]
        IdentifierType: names=['bool']
  Decl: name='SchedulerBasicP_Scheduler_taskLoop', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='SchedulerBasicP_Scheduler_taskLoop', quals=[]
        IdentifierType: names=['void']
  Decl: name='SchedulerBasicP_TaskBasic_postTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='id', quals=[], storage=[]
          TypeDecl: declname='id', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='SchedulerBasicP_TaskBasic_postTask', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='SchedulerBasicP_TaskBasic_default_runTask', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='id', quals=[], storage=[]
          TypeDecl: declname='id', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='SchedulerBasicP_TaskBasic_default_runTask', quals=[]
        IdentifierType: names=['void']
  Decl: name='McuSleepC_McuPowerOverride_lowestState', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='McuSleepC_McuPowerOverride_lowestState', quals=[]
        IdentifierType: names=['mcu_power_t']
  Decl: name='McuSleepC_dirty', quals=[], storage=[]
    TypeDecl: declname='McuSleepC_dirty', quals=[]
      IdentifierType: names=['bool']
    ID: name='TRUE'
  Decl: name='McuSleepC_powerState', quals=[], storage=[]
    TypeDecl: declname='McuSleepC_powerState', quals=[]
      IdentifierType: names=['mcu_power_t']
    ID: name='MSP430_POWER_ACTIVE'
  Decl: name='McuSleepC_msp430PowerBits', quals=['const'], storage=[]
    ArrayDecl: 
      TypeDecl: declname='McuSleepC_msp430PowerBits', quals=['const']
        IdentifierType: names=['uint16_t']
      BinaryOp: op='+'
        ID: name='MSP430_POWER_LPM4'
        Constant: type='int', value='1'
    ExprList: 
      Constant: type='int', value='0'
      Constant: type='int', value='0x0010'
      BinaryOp: op='+'
        Constant: type='int', value='0x0040'
        Constant: type='int', value='0x0010'
      BinaryOp: op='+'
        Constant: type='int', value='0x0080'
        Constant: type='int', value='0x0010'
      BinaryOp: op='+'
        BinaryOp: op='+'
          Constant: type='int', value='0x0080'
          Constant: type='int', value='0x0040'
        Constant: type='int', value='0x0010'
      BinaryOp: op='+'
        BinaryOp: op='+'
          BinaryOp: op='+'
            Constant: type='int', value='0x0080'
            Constant: type='int', value='0x0040'
          Constant: type='int', value='0x0020'
        Constant: type='int', value='0x0010'
  Decl: name='McuSleepC_getPowerState', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='McuSleepC_getPowerState', quals=[]
        IdentifierType: names=['mcu_power_t']
  Decl: name='McuSleepC_computePowerState', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='McuSleepC_computePowerState', quals=[]
        IdentifierType: names=['void']
  Decl: name='McuSleepC_McuSleep_sleep', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='McuSleepC_McuSleep_sleep', quals=[]
        IdentifierType: names=['void']
  Decl: name='McuSleepC_McuPowerOverride_default_lowestState', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='McuSleepC_McuPowerOverride_default_lowestState', quals=[]
        IdentifierType: names=['mcu_power_t']
  Decl: name='BlinkC_Timer0_startPeriodic', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['uint32_t']
      TypeDecl: declname='BlinkC_Timer0_startPeriodic', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Timer1_startPeriodic', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['uint32_t']
      TypeDecl: declname='BlinkC_Timer1_startPeriodic', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Leds_led0Toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='BlinkC_Leds_led0Toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Leds_led1Toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='BlinkC_Leds_led1Toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Leds_led2Toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='BlinkC_Leds_led2Toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Timer2_startPeriodic', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['uint32_t']
      TypeDecl: declname='BlinkC_Timer2_startPeriodic', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Boot_booted', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='BlinkC_Boot_booted', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Timer0_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='BlinkC_Timer0_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Timer1_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='BlinkC_Timer1_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='BlinkC_Timer2_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='BlinkC_Timer2_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Led0_toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Led0_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Led0_makeOutput', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Led0_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Led0_set', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Led0_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Led1_toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Led1_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Led1_makeOutput', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Led1_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Led1_set', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Led1_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Led2_toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Led2_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Led2_makeOutput', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Led2_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Led2_set', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Led2_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Init_init', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Init_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='LedsP_Leds_led0Toggle', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Leds_led0Toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Leds_led1Toggle', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Leds_led1Toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='LedsP_Leds_led2Toggle', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='LedsP_Leds_led2Toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_36_IO_set', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_36_IO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_36_IO_toggle', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_36_IO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_36_IO_makeOutput', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_36_IO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_37_IO_set', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_37_IO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_37_IO_toggle', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_37_IO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_37_IO_makeOutput', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_37_IO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_38_IO_set', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_38_IO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_38_IO_toggle', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_38_IO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='HplMsp430GeneralIOP_38_IO_makeOutput', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='HplMsp430GeneralIOP_38_IO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_0_HplGeneralIO_toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_0_HplGeneralIO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_0_HplGeneralIO_makeOutput', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_0_HplGeneralIO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_0_HplGeneralIO_set', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_0_HplGeneralIO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_0_GeneralIO_set', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_0_GeneralIO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_0_GeneralIO_toggle', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_0_GeneralIO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_0_GeneralIO_makeOutput', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_0_GeneralIO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_1_HplGeneralIO_toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_1_HplGeneralIO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_1_HplGeneralIO_makeOutput', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_1_HplGeneralIO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_1_HplGeneralIO_set', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_1_HplGeneralIO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_1_GeneralIO_set', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_1_GeneralIO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_1_GeneralIO_toggle', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_1_GeneralIO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_1_GeneralIO_makeOutput', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_1_GeneralIO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_2_HplGeneralIO_toggle', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_2_HplGeneralIO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_2_HplGeneralIO_makeOutput', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_2_HplGeneralIO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_2_HplGeneralIO_set', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_2_HplGeneralIO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_2_GeneralIO_set', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_2_GeneralIO_set', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_2_GeneralIO_toggle', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_2_GeneralIO_toggle', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430GpioC_2_GeneralIO_makeOutput', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430GpioC_2_GeneralIO_makeOutput', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Msp430Compare_setEvent', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='time', quals=[], storage=[]
          TypeDecl: declname='time', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430AlarmC_0_Msp430Compare_setEvent', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Msp430Compare_setEventFromNow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='delta', quals=[], storage=[]
          TypeDecl: declname='delta', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430AlarmC_0_Msp430Compare_setEventFromNow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Msp430Timer_get', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Msp430Timer_get', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430AlarmC_0_Alarm_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Alarm_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Msp430TimerControl_enableEvents', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Msp430TimerControl_enableEvents', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Msp430TimerControl_setControlAsCompare', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Msp430TimerControl_setControlAsCompare', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Msp430TimerControl_disableEvents', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Msp430TimerControl_disableEvents', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Msp430TimerControl_clearPendingInterrupt', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Msp430TimerControl_clearPendingInterrupt', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Init_init', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Init_init', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='Msp430AlarmC_0_Alarm_stop', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Alarm_stop', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Msp430Compare_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Msp430Compare_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Alarm_startAt', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='t0', quals=[], storage=[]
          TypeDecl: declname='t0', quals=[]
            IdentifierType: names=['uint16_t']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['uint16_t']
      TypeDecl: declname='Msp430AlarmC_0_Alarm_startAt', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430AlarmC_0_Msp430Timer_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430AlarmC_0_Msp430Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430CounterC_0_Msp430Timer_get', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430CounterC_0_Msp430Timer_get', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430CounterC_0_Msp430Timer_isOverflowPending', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430CounterC_0_Msp430Timer_isOverflowPending', quals=[]
        IdentifierType: names=['bool']
  Decl: name='Msp430CounterC_0_Counter_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430CounterC_0_Counter_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='Msp430CounterC_0_Counter_get', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430CounterC_0_Counter_get', quals=[]
        IdentifierType: names=['uint16_t']
  Decl: name='Msp430CounterC_0_Counter_isOverflowPending', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430CounterC_0_Counter_isOverflowPending', quals=[]
        IdentifierType: names=['bool']
  Decl: name='Msp430CounterC_0_Msp430Timer_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='Msp430CounterC_0_Msp430Timer_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformCounterC_0_CounterFrom_get', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformCounterC_0_CounterFrom_get', quals=[]
        IdentifierType: names=['TransformCounterC_0_CounterFrom_size_type']
  Decl: name='TransformCounterC_0_CounterFrom_isOverflowPending', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformCounterC_0_CounterFrom_isOverflowPending', quals=[]
        IdentifierType: names=['bool']
  Decl: name='TransformCounterC_0_Counter_overflow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformCounterC_0_Counter_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformCounterC_0_m_upper', quals=[], storage=[]
    TypeDecl: declname='TransformCounterC_0_m_upper', quals=[]
      IdentifierType: names=['TransformCounterC_0_upper_count_type']
  Decl: name=None, quals=[], storage=[]
    Enum: name='TransformCounterC_0___nesc_unnamed4270'
      EnumeratorList: 
        Enumerator: name='TransformCounterC_0_LOW_SHIFT_RIGHT'
          Constant: type='int', value='5'
        Enumerator: name='TransformCounterC_0_HIGH_SHIFT_LEFT'
          BinaryOp: op='-'
            BinaryOp: op='*'
              Constant: type='int', value='8'
              UnaryOp: op='sizeof'
                Typename: quals=[]
                  TypeDecl: declname=None, quals=[]
                    IdentifierType: names=['TransformCounterC_0_from_size_type']
            ID: name='TransformCounterC_0_LOW_SHIFT_RIGHT'
        Enumerator: name='TransformCounterC_0_NUM_UPPER_BITS'
          BinaryOp: op='+'
            BinaryOp: op='-'
              BinaryOp: op='*'
                Constant: type='int', value='8'
                UnaryOp: op='sizeof'
                  Typename: quals=[]
                    TypeDecl: declname=None, quals=[]
                      IdentifierType: names=['TransformCounterC_0_to_size_type']
              BinaryOp: op='*'
                Constant: type='int', value='8'
                UnaryOp: op='sizeof'
                  Typename: quals=[]
                    TypeDecl: declname=None, quals=[]
                      IdentifierType: names=['TransformCounterC_0_from_size_type']
            Constant: type='int', value='5'
        Enumerator: name='TransformCounterC_0_OVERFLOW_MASK'
          TernaryOp: 
            ID: name='TransformCounterC_0_NUM_UPPER_BITS'
            BinaryOp: op='-'
              BinaryOp: op='<<'
                Cast: 
                  Typename: quals=[]
                    TypeDecl: declname=None, quals=[]
                      IdentifierType: names=['TransformCounterC_0_upper_count_type']
                  Constant: type='int', value='2'
                BinaryOp: op='-'
                  ID: name='TransformCounterC_0_NUM_UPPER_BITS'
                  Constant: type='int', value='1'
              Constant: type='int', value='1'
            Constant: type='int', value='0'
  Decl: name='TransformCounterC_0_Counter_get', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformCounterC_0_Counter_get', quals=[]
        IdentifierType: names=['TransformCounterC_0_to_size_type']
  Decl: name='TransformCounterC_0_CounterFrom_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformCounterC_0_CounterFrom_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformAlarmC_0_Alarm_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_Alarm_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformAlarmC_0_AlarmFrom_startAt', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='t0', quals=[], storage=[]
          TypeDecl: declname='t0', quals=[]
            IdentifierType: names=['TransformAlarmC_0_AlarmFrom_size_type']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['TransformAlarmC_0_AlarmFrom_size_type']
      TypeDecl: declname='TransformAlarmC_0_AlarmFrom_startAt', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformAlarmC_0_AlarmFrom_stop', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_AlarmFrom_stop', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformAlarmC_0_Counter_get', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_Counter_get', quals=[]
        IdentifierType: names=['TransformAlarmC_0_Counter_size_type']
  Decl: name='TransformAlarmC_0_m_t0', quals=[], storage=[]
    TypeDecl: declname='TransformAlarmC_0_m_t0', quals=[]
      IdentifierType: names=['TransformAlarmC_0_to_size_type']
  Decl: name='TransformAlarmC_0_m_dt', quals=[], storage=[]
    TypeDecl: declname='TransformAlarmC_0_m_dt', quals=[]
      IdentifierType: names=['TransformAlarmC_0_to_size_type']
  Decl: name=None, quals=[], storage=[]
    Enum: name='TransformAlarmC_0___nesc_unnamed4271'
      EnumeratorList: 
        Enumerator: name='TransformAlarmC_0_MAX_DELAY_LOG2'
          BinaryOp: op='-'
            BinaryOp: op='-'
              BinaryOp: op='*'
                Constant: type='int', value='8'
                UnaryOp: op='sizeof'
                  Typename: quals=[]
                    TypeDecl: declname=None, quals=[]
                      IdentifierType: names=['TransformAlarmC_0_from_size_type']
              Constant: type='int', value='1'
            Constant: type='int', value='5'
        Enumerator: name='TransformAlarmC_0_MAX_DELAY'
          BinaryOp: op='<<'
            Cast: 
              Typename: quals=[]
                TypeDecl: declname=None, quals=[]
                  IdentifierType: names=['TransformAlarmC_0_to_size_type']
              Constant: type='int', value='1'
            ID: name='TransformAlarmC_0_MAX_DELAY_LOG2'
  Decl: name='TransformAlarmC_0_Alarm_getNow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_Alarm_getNow', quals=[]
        IdentifierType: names=['TransformAlarmC_0_to_size_type']
  Decl: name='TransformAlarmC_0_Alarm_getAlarm', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_Alarm_getAlarm', quals=[]
        IdentifierType: names=['TransformAlarmC_0_to_size_type']
  Decl: name='TransformAlarmC_0_Alarm_stop', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_Alarm_stop', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformAlarmC_0_set_alarm', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_set_alarm', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformAlarmC_0_Alarm_startAt', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='t0', quals=[], storage=[]
          TypeDecl: declname='t0', quals=[]
            IdentifierType: names=['TransformAlarmC_0_to_size_type']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['TransformAlarmC_0_to_size_type']
      TypeDecl: declname='TransformAlarmC_0_Alarm_startAt', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformAlarmC_0_AlarmFrom_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_AlarmFrom_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='TransformAlarmC_0_Counter_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='TransformAlarmC_0_Counter_overflow', quals=[]
        IdentifierType: names=['void']
  Decl: name='AlarmToTimerC_0_fired_postTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_fired_postTask', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='AlarmToTimerC_0_Alarm_getNow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_Alarm_getNow', quals=[]
        IdentifierType: names=['AlarmToTimerC_0_Alarm_size_type']
  Decl: name='AlarmToTimerC_0_Alarm_startAt', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='t0', quals=[], storage=[]
          TypeDecl: declname='t0', quals=[]
            IdentifierType: names=['AlarmToTimerC_0_Alarm_size_type']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['AlarmToTimerC_0_Alarm_size_type']
      TypeDecl: declname='AlarmToTimerC_0_Alarm_startAt', quals=[]
        IdentifierType: names=['void']
  Decl: name='AlarmToTimerC_0_Alarm_getAlarm', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_Alarm_getAlarm', quals=[]
        IdentifierType: names=['AlarmToTimerC_0_Alarm_size_type']
  Decl: name='AlarmToTimerC_0_Alarm_stop', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_Alarm_stop', quals=[]
        IdentifierType: names=['void']
  Decl: name='AlarmToTimerC_0_Timer_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_Timer_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name=None, quals=[], storage=[]
    Enum: name='AlarmToTimerC_0___nesc_unnamed4272'
      EnumeratorList: 
        Enumerator: name='AlarmToTimerC_0_fired'
          Constant: type='int', value='0U'
  Typedef: name='AlarmToTimerC_0___nesc_sillytask_fired', quals=[], storage=['typedef']
    ArrayDecl: 
      TypeDecl: declname='AlarmToTimerC_0___nesc_sillytask_fired', quals=[]
        IdentifierType: names=['int']
      ID: name='AlarmToTimerC_0_fired'
  Decl: name='AlarmToTimerC_0_m_dt', quals=[], storage=[]
    TypeDecl: declname='AlarmToTimerC_0_m_dt', quals=[]
      IdentifierType: names=['uint32_t']
  Decl: name='AlarmToTimerC_0_m_oneshot', quals=[], storage=[]
    TypeDecl: declname='AlarmToTimerC_0_m_oneshot', quals=[]
      IdentifierType: names=['bool']
  Decl: name='AlarmToTimerC_0_start', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='t0', quals=[], storage=[]
          TypeDecl: declname='t0', quals=[]
            IdentifierType: names=['uint32_t']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['uint32_t']
        Decl: name='oneshot', quals=[], storage=[]
          TypeDecl: declname='oneshot', quals=[]
            IdentifierType: names=['bool']
      TypeDecl: declname='AlarmToTimerC_0_start', quals=[]
        IdentifierType: names=['void']
  Decl: name='AlarmToTimerC_0_Timer_stop', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_Timer_stop', quals=[]
        IdentifierType: names=['void']
  Decl: name='AlarmToTimerC_0_fired_runTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_fired_runTask', quals=[]
        IdentifierType: names=['void']
  Decl: name='AlarmToTimerC_0_Alarm_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_Alarm_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='AlarmToTimerC_0_Timer_startOneShotAt', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='t0', quals=[], storage=[]
          TypeDecl: declname='t0', quals=[]
            IdentifierType: names=['uint32_t']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['uint32_t']
      TypeDecl: declname='AlarmToTimerC_0_Timer_startOneShotAt', quals=[]
        IdentifierType: names=['void']
  Decl: name='AlarmToTimerC_0_Timer_getNow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='AlarmToTimerC_0_Timer_getNow', quals=[]
        IdentifierType: names=['uint32_t']
  Decl: name='VirtualizeTimerC_0_updateFromTimer_postTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='VirtualizeTimerC_0_updateFromTimer_postTask', quals=[]
        IdentifierType: names=['error_t']
  Decl: name='VirtualizeTimerC_0_TimerFrom_getNow', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='VirtualizeTimerC_0_TimerFrom_getNow', quals=[]
        IdentifierType: names=['uint32_t']
  Decl: name='VirtualizeTimerC_0_TimerFrom_startOneShotAt', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='t0', quals=[], storage=[]
          TypeDecl: declname='t0', quals=[]
            IdentifierType: names=['uint32_t']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['uint32_t']
      TypeDecl: declname='VirtualizeTimerC_0_TimerFrom_startOneShotAt', quals=[]
        IdentifierType: names=['void']
  Decl: name='VirtualizeTimerC_0_TimerFrom_stop', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='VirtualizeTimerC_0_TimerFrom_stop', quals=[]
        IdentifierType: names=['void']
  Decl: name='VirtualizeTimerC_0_Timer_fired', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='arg_0x18a3ea0', quals=[], storage=[]
          TypeDecl: declname='arg_0x18a3ea0', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='VirtualizeTimerC_0_Timer_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name=None, quals=[], storage=[]
    Enum: name='VirtualizeTimerC_0___nesc_unnamed4273'
      EnumeratorList: 
        Enumerator: name='VirtualizeTimerC_0_updateFromTimer'
          Constant: type='int', value='1U'
  Typedef: name='VirtualizeTimerC_0___nesc_sillytask_updateFromTimer', quals=[], storage=['typedef']
    ArrayDecl: 
      TypeDecl: declname='VirtualizeTimerC_0___nesc_sillytask_updateFromTimer', quals=[]
        IdentifierType: names=['int']
      ID: name='VirtualizeTimerC_0_updateFromTimer'
  Decl: name=None, quals=[], storage=[]
    Enum: name='VirtualizeTimerC_0___nesc_unnamed4274'
      EnumeratorList: 
        Enumerator: name='VirtualizeTimerC_0_NUM_TIMERS'
          Constant: type='int', value='3U'
        Enumerator: name='VirtualizeTimerC_0_END_OF_LIST'
          Constant: type='int', value='255'
  Typedef: name='VirtualizeTimerC_0_Timer_t', quals=[], storage=['typedef']
    TypeDecl: declname='VirtualizeTimerC_0_Timer_t', quals=[]
      Struct: name='VirtualizeTimerC_0___nesc_unnamed4275', packed=False
        Decl: name='t0', quals=[], storage=[]
          TypeDecl: declname='t0', quals=[]
            IdentifierType: names=['uint32_t']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['uint32_t']
        Decl: name='isoneshot', quals=[], storage=[]
          TypeDecl: declname='isoneshot', quals=[]
            IdentifierType: names=['bool']
          Constant: type='int', value='1'
        Decl: name='isrunning', quals=[], storage=[]
          TypeDecl: declname='isrunning', quals=[]
            IdentifierType: names=['bool']
          Constant: type='int', value='1'
        Decl: name='_reserved', quals=[], storage=[]
          TypeDecl: declname='_reserved', quals=[]
            IdentifierType: names=['bool']
          Constant: type='int', value='6'
  Decl: name='VirtualizeTimerC_0_m_timers', quals=[], storage=[]
    ArrayDecl: 
      TypeDecl: declname='VirtualizeTimerC_0_m_timers', quals=[]
        IdentifierType: names=['VirtualizeTimerC_0_Timer_t']
      ID: name='VirtualizeTimerC_0_NUM_TIMERS'
  Decl: name='VirtualizeTimerC_0_fireTimers', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='now', quals=[], storage=[]
          TypeDecl: declname='now', quals=[]
            IdentifierType: names=['uint32_t']
      TypeDecl: declname='VirtualizeTimerC_0_fireTimers', quals=[]
        IdentifierType: names=['void']
  Decl: name='VirtualizeTimerC_0_updateFromTimer_runTask', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='VirtualizeTimerC_0_updateFromTimer_runTask', quals=[]
        IdentifierType: names=['void']
  Decl: name='VirtualizeTimerC_0_TimerFrom_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='VirtualizeTimerC_0_TimerFrom_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='VirtualizeTimerC_0_startTimer', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='num', quals=[], storage=[]
          TypeDecl: declname='num', quals=[]
            IdentifierType: names=['uint8_t']
        Decl: name='t0', quals=[], storage=[]
          TypeDecl: declname='t0', quals=[]
            IdentifierType: names=['uint32_t']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['uint32_t']
        Decl: name='isoneshot', quals=[], storage=[]
          TypeDecl: declname='isoneshot', quals=[]
            IdentifierType: names=['bool']
      TypeDecl: declname='VirtualizeTimerC_0_startTimer', quals=[]
        IdentifierType: names=['void']
  Decl: name='VirtualizeTimerC_0_Timer_startPeriodic', quals=[], storage=['static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='num', quals=[], storage=[]
          TypeDecl: declname='num', quals=[]
            IdentifierType: names=['uint8_t']
        Decl: name='dt', quals=[], storage=[]
          TypeDecl: declname='dt', quals=[]
            IdentifierType: names=['uint32_t']
      TypeDecl: declname='VirtualizeTimerC_0_Timer_startPeriodic', quals=[]
        IdentifierType: names=['void']
  Decl: name='VirtualizeTimerC_0_Timer_default_fired', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Decl: name='num', quals=[], storage=[]
          TypeDecl: declname='num', quals=[]
            IdentifierType: names=['uint8_t']
      TypeDecl: declname='VirtualizeTimerC_0_Timer_default_fired', quals=[]
        IdentifierType: names=['void']
  Decl: name='CounterToLocalTimeC_0_Counter_overflow', quals=[], storage=['inline', 'static']
    FuncDecl: quals=None
      ParamList: 
        Typename: quals=[]
          TypeDecl: declname=None, quals=[]
            IdentifierType: names=['void']
      TypeDecl: declname='CounterToLocalTimeC_0_Counter_overflow', quals=[]
        IdentifierType: names=['void']
  FuncDef: 
    Decl: name='__nesc_enable_interrupt', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='__nesc_enable_interrupt', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='|='
        ID: name='_R2'
        Constant: type='int', value='0x0008'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_2_Timer_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_2_Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_1_Timer_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_1_Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_0_Timer_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_0_Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerP_0_Timer_overflow', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerP_0_Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_0_Timer_overflow'
      FuncCall: 
        ID: name='Msp430TimerCapComP_1_Timer_overflow'
      FuncCall: 
        ID: name='Msp430TimerCapComP_2_Timer_overflow'
  FuncDef: 
    Decl: name='Msp430TimerP_0_Overflow_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerP_0_Overflow_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerP_0_Timer_overflow'
  FuncDef: 
    Decl: name='Msp430TimerP_0_Event_default_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='n', quals=[], storage=[]
            TypeDecl: declname='n', quals=[]
              IdentifierType: names=['uint8_t']
        TypeDecl: declname='Msp430TimerP_0_Event_default_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerP_0_Event_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='arg_0x1561800', quals=[], storage=[]
            TypeDecl: declname='arg_0x1561800', quals=[]
              IdentifierType: names=['uint8_t']
        TypeDecl: declname='Msp430TimerP_0_Event_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Switch: 
        ID: name='arg_0x1561800'
        Compound: 
          Case: 
            Constant: type='int', value='0'
            FuncCall: 
              ID: name='Msp430TimerCapComP_0_Event_fired'
          Break: 
          Case: 
            Constant: type='int', value='1'
            FuncCall: 
              ID: name='Msp430TimerCapComP_1_Event_fired'
          Break: 
          Case: 
            Constant: type='int', value='2'
            FuncCall: 
              ID: name='Msp430TimerCapComP_2_Event_fired'
          Break: 
          Case: 
            Constant: type='int', value='5'
            FuncCall: 
              ID: name='Msp430TimerP_0_Overflow_fired'
          Break: 
          Default: 
            FuncCall: 
              ID: name='Msp430TimerP_0_Event_default_fired'
              ExprList: 
                ID: name='arg_0x1561800'
          Break: 
  FuncDef: 
    Decl: name='Msp430TimerP_0_VectorTimerX0_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerP_0_VectorTimerX0_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerP_0_Event_fired'
        ExprList: 
          Constant: type='int', value='0'
  FuncDef: 
    Decl: name='Msp430TimerCommonP_VectorTimerA0_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCommonP_VectorTimerA0_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerP_0_VectorTimerX0_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_0_int2CC', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_0_int2CC', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_0_cc_t']
    Compound: 
      Decl: name='c', quals=[], storage=[]
        TypeDecl: declname='c', quals=[]
          Union: name='Msp430TimerCapComP_0___nesc_unnamed4276', packed=False
            Decl: name='f', quals=[], storage=[]
              TypeDecl: declname='f', quals=[]
                IdentifierType: names=['uint16_t']
            Decl: name='t', quals=[], storage=[]
              TypeDecl: declname='t', quals=[]
                IdentifierType: names=['Msp430TimerCapComP_0_cc_t']
        ExprList: 
          Assignment: op='='
            StructRef: type='.'
              ID: name='f'
            ID: name='x'
      Return: 
        StructRef: type='.'
          ID: name='c'
          ID: name='t'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_0_Control_getControl', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_0_Control_getControl', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_0_cc_t']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='Msp430TimerCapComP_0_int2CC'
          ExprList: 
            UnaryOp: op='*'
              Cast: 
                Typename: quals=['volatile']
                  PtrDecl: quals=[]
                    TypeDecl: declname=None, quals=['volatile']
                      IdentifierType: names=['uint16_t']
                Constant: type='int', value='354U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_0_Capture_default_captured', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='n', quals=[], storage=[]
            TypeDecl: declname='n', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_0_Capture_default_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_0_Capture_captured', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='time', quals=[], storage=[]
            TypeDecl: declname='time', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_0_Capture_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_0_Capture_default_captured'
        ExprList: 
          ID: name='time'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_0_Capture_getEvent', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_0_Capture_getEvent', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Return: 
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='370U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_0_Compare_default_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_0_Compare_default_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_0_Compare_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_0_Compare_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_0_Compare_default_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_1_int2CC', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_1_int2CC', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_1_cc_t']
    Compound: 
      Decl: name='c', quals=[], storage=[]
        TypeDecl: declname='c', quals=[]
          Union: name='Msp430TimerCapComP_1___nesc_unnamed4277', packed=False
            Decl: name='f', quals=[], storage=[]
              TypeDecl: declname='f', quals=[]
                IdentifierType: names=['uint16_t']
            Decl: name='t', quals=[], storage=[]
              TypeDecl: declname='t', quals=[]
                IdentifierType: names=['Msp430TimerCapComP_1_cc_t']
        ExprList: 
          Assignment: op='='
            StructRef: type='.'
              ID: name='f'
            ID: name='x'
      Return: 
        StructRef: type='.'
          ID: name='c'
          ID: name='t'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_1_Control_getControl', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_1_Control_getControl', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_1_cc_t']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='Msp430TimerCapComP_1_int2CC'
          ExprList: 
            UnaryOp: op='*'
              Cast: 
                Typename: quals=['volatile']
                  PtrDecl: quals=[]
                    TypeDecl: declname=None, quals=['volatile']
                      IdentifierType: names=['uint16_t']
                Constant: type='int', value='356U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_1_Capture_default_captured', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='n', quals=[], storage=[]
            TypeDecl: declname='n', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_1_Capture_default_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_1_Capture_captured', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='time', quals=[], storage=[]
            TypeDecl: declname='time', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_1_Capture_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_1_Capture_default_captured'
        ExprList: 
          ID: name='time'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_1_Capture_getEvent', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_1_Capture_getEvent', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Return: 
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='372U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_1_Compare_default_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_1_Compare_default_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_1_Compare_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_1_Compare_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_1_Compare_default_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_2_int2CC', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_2_int2CC', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_2_cc_t']
    Compound: 
      Decl: name='c', quals=[], storage=[]
        TypeDecl: declname='c', quals=[]
          Union: name='Msp430TimerCapComP_2___nesc_unnamed4278', packed=False
            Decl: name='f', quals=[], storage=[]
              TypeDecl: declname='f', quals=[]
                IdentifierType: names=['uint16_t']
            Decl: name='t', quals=[], storage=[]
              TypeDecl: declname='t', quals=[]
                IdentifierType: names=['Msp430TimerCapComP_2_cc_t']
        ExprList: 
          Assignment: op='='
            StructRef: type='.'
              ID: name='f'
            ID: name='x'
      Return: 
        StructRef: type='.'
          ID: name='c'
          ID: name='t'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_2_Control_getControl', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_2_Control_getControl', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_2_cc_t']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='Msp430TimerCapComP_2_int2CC'
          ExprList: 
            UnaryOp: op='*'
              Cast: 
                Typename: quals=['volatile']
                  PtrDecl: quals=[]
                    TypeDecl: declname=None, quals=['volatile']
                      IdentifierType: names=['uint16_t']
                Constant: type='int', value='358U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_2_Capture_default_captured', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='n', quals=[], storage=[]
            TypeDecl: declname='n', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_2_Capture_default_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_2_Capture_captured', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='time', quals=[], storage=[]
            TypeDecl: declname='time', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_2_Capture_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_2_Capture_default_captured'
        ExprList: 
          ID: name='time'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_2_Capture_getEvent', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_2_Capture_getEvent', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Return: 
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='374U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_2_Compare_default_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_2_Compare_default_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_2_Compare_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_2_Compare_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_2_Compare_default_fired'
  FuncDef: 
    Decl: name='Msp430TimerP_0_VectorTimerX1_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerP_0_VectorTimerX1_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='n', quals=[], storage=[]
        TypeDecl: declname='n', quals=[]
          IdentifierType: names=['uint8_t']
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='302U'
      FuncCall: 
        ID: name='Msp430TimerP_0_Event_fired'
        ExprList: 
          BinaryOp: op='>>'
            ID: name='n'
            Constant: type='int', value='1'
  FuncDef: 
    Decl: name='Msp430TimerCommonP_VectorTimerA1_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCommonP_VectorTimerA1_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerP_0_VectorTimerX1_fired'
  FuncDef: 
    Decl: name='Msp430TimerP_1_VectorTimerX0_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerP_1_VectorTimerX0_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerP_1_Event_fired'
        ExprList: 
          Constant: type='int', value='0'
  FuncDef: 
    Decl: name='Msp430TimerCommonP_VectorTimerB0_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCommonP_VectorTimerB0_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerP_1_VectorTimerX0_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_9_Timer_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_9_Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_8_Timer_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_8_Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_7_Timer_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_7_Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_6_Timer_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_6_Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_5_Timer_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_5_Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_4_Timer_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_4_Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Timer_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_3_Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Msp430Timer_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430AlarmC_0_Msp430Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='CounterToLocalTimeC_0_Counter_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='CounterToLocalTimeC_0_Counter_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='TransformAlarmC_0_Counter_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformAlarmC_0_Counter_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='TransformCounterC_0_Counter_overflow', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformCounterC_0_Counter_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='TransformAlarmC_0_Counter_overflow'
      FuncCall: 
        ID: name='CounterToLocalTimeC_0_Counter_overflow'
  FuncDef: 
    Decl: name='TransformCounterC_0_CounterFrom_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformCounterC_0_CounterFrom_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Compound: 
        UnaryOp: op='p++'
          ID: name='TransformCounterC_0_m_upper'
        If: 
          BinaryOp: op='=='
            BinaryOp: op='&'
              ID: name='TransformCounterC_0_m_upper'
              ID: name='TransformCounterC_0_OVERFLOW_MASK'
            Constant: type='int', value='0'
          Compound: 
            FuncCall: 
              ID: name='TransformCounterC_0_Counter_overflow'
  FuncDef: 
    Decl: name='Msp430CounterC_0_Counter_overflow', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430CounterC_0_Counter_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='TransformCounterC_0_CounterFrom_overflow'
  FuncDef: 
    Decl: name='Msp430CounterC_0_Msp430Timer_overflow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430CounterC_0_Msp430Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430CounterC_0_Counter_overflow'
  FuncDef: 
    Decl: name='Msp430TimerP_1_Timer_overflow', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerP_1_Timer_overflow', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430CounterC_0_Msp430Timer_overflow'
      FuncCall: 
        ID: name='Msp430AlarmC_0_Msp430Timer_overflow'
      FuncCall: 
        ID: name='Msp430TimerCapComP_3_Timer_overflow'
      FuncCall: 
        ID: name='Msp430TimerCapComP_4_Timer_overflow'
      FuncCall: 
        ID: name='Msp430TimerCapComP_5_Timer_overflow'
      FuncCall: 
        ID: name='Msp430TimerCapComP_6_Timer_overflow'
      FuncCall: 
        ID: name='Msp430TimerCapComP_7_Timer_overflow'
      FuncCall: 
        ID: name='Msp430TimerCapComP_8_Timer_overflow'
      FuncCall: 
        ID: name='Msp430TimerCapComP_9_Timer_overflow'
  FuncDef: 
    Decl: name='Msp430TimerP_1_Overflow_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerP_1_Overflow_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerP_1_Timer_overflow'
  FuncDef: 
    Decl: name='AlarmToTimerC_0_fired_postTask', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='AlarmToTimerC_0_fired_postTask', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['char', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='SchedulerBasicP_TaskBasic_postTask'
          ExprList: 
            ID: name='AlarmToTimerC_0_fired'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='AlarmToTimerC_0_Alarm_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='AlarmToTimerC_0_Alarm_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='AlarmToTimerC_0_fired_postTask'
  FuncDef: 
    Decl: name='TransformAlarmC_0_Alarm_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformAlarmC_0_Alarm_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='AlarmToTimerC_0_Alarm_fired'
  FuncDef: 
    Decl: name='TransformAlarmC_0_AlarmFrom_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformAlarmC_0_AlarmFrom_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Compound: 
        If: 
          BinaryOp: op='=='
            ID: name='TransformAlarmC_0_m_dt'
            Constant: type='int', value='0'
          Compound: 
            FuncCall: 
              ID: name='TransformAlarmC_0_Alarm_fired'
          Compound: 
            FuncCall: 
              ID: name='TransformAlarmC_0_set_alarm'
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Alarm_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430AlarmC_0_Alarm_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='TransformAlarmC_0_AlarmFrom_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Control_disableEvents', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_3_Control_disableEvents', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='&='
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='386U'
        UnaryOp: op='~'
          Constant: type='int', value='0x0010'
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Msp430TimerControl_disableEvents', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430AlarmC_0_Msp430TimerControl_disableEvents', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_3_Control_disableEvents'
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Msp430Compare_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430AlarmC_0_Msp430Compare_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430AlarmC_0_Msp430TimerControl_disableEvents'
      FuncCall: 
        ID: name='Msp430AlarmC_0_Alarm_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Compare_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_3_Compare_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430AlarmC_0_Msp430Compare_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Capture_getEvent', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_3_Capture_getEvent', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Return: 
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='402U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Capture_default_captured', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='n', quals=[], storage=[]
            TypeDecl: declname='n', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_3_Capture_default_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Capture_captured', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='time', quals=[], storage=[]
            TypeDecl: declname='time', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_3_Capture_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_3_Capture_default_captured'
        ExprList: 
          ID: name='time'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_int2CC', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_3_int2CC', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_3_cc_t']
    Compound: 
      Decl: name='c', quals=[], storage=[]
        TypeDecl: declname='c', quals=[]
          Union: name='Msp430TimerCapComP_3___nesc_unnamed4279', packed=False
            Decl: name='f', quals=[], storage=[]
              TypeDecl: declname='f', quals=[]
                IdentifierType: names=['uint16_t']
            Decl: name='t', quals=[], storage=[]
              TypeDecl: declname='t', quals=[]
                IdentifierType: names=['Msp430TimerCapComP_3_cc_t']
        ExprList: 
          Assignment: op='='
            StructRef: type='.'
              ID: name='f'
            ID: name='x'
      Return: 
        StructRef: type='.'
          ID: name='c'
          ID: name='t'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Control_getControl', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_3_Control_getControl', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_3_cc_t']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='Msp430TimerCapComP_3_int2CC'
          ExprList: 
            UnaryOp: op='*'
              Cast: 
                Typename: quals=['volatile']
                  PtrDecl: quals=[]
                    TypeDecl: declname=None, quals=['volatile']
                      IdentifierType: names=['uint16_t']
                Constant: type='int', value='386U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Event_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_3_Event_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        StructRef: type='.'
          FuncCall: 
            ID: name='Msp430TimerCapComP_3_Control_getControl'
          ID: name='cap'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_3_Capture_captured'
            ExprList: 
              FuncCall: 
                ID: name='Msp430TimerCapComP_3_Capture_getEvent'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_3_Compare_fired'
  FuncDef: 
    Decl: name='SchedulerBasicP_isWaiting', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='id', quals=[], storage=[]
            TypeDecl: declname='id', quals=[]
              IdentifierType: names=['uint8_t']
        TypeDecl: declname='SchedulerBasicP_isWaiting', quals=[]
          IdentifierType: names=['bool']
    Compound: 
      Return: 
        BinaryOp: op='||'
          BinaryOp: op='!='
            ArrayRef: 
              ID: name='SchedulerBasicP_m_next'
              ID: name='id'
            ID: name='SchedulerBasicP_NO_TASK'
          BinaryOp: op='=='
            ID: name='SchedulerBasicP_m_tail'
            ID: name='id'
  FuncDef: 
    Decl: name='SchedulerBasicP_pushTask', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='id', quals=[], storage=[]
            TypeDecl: declname='id', quals=[]
              IdentifierType: names=['uint8_t']
        TypeDecl: declname='SchedulerBasicP_pushTask', quals=[]
          IdentifierType: names=['bool']
    Compound: 
      If: 
        UnaryOp: op='!'
          FuncCall: 
            ID: name='SchedulerBasicP_isWaiting'
            ExprList: 
              ID: name='id'
        Compound: 
          If: 
            BinaryOp: op='=='
              ID: name='SchedulerBasicP_m_head'
              ID: name='SchedulerBasicP_NO_TASK'
            Compound: 
              Assignment: op='='
                ID: name='SchedulerBasicP_m_head'
                ID: name='id'
              Assignment: op='='
                ID: name='SchedulerBasicP_m_tail'
                ID: name='id'
            Compound: 
              Assignment: op='='
                ArrayRef: 
                  ID: name='SchedulerBasicP_m_next'
                  ID: name='SchedulerBasicP_m_tail'
                ID: name='id'
              Assignment: op='='
                ID: name='SchedulerBasicP_m_tail'
                ID: name='id'
          Return: 
            ID: name='TRUE'
        Compound: 
          Return: 
            ID: name='FALSE'
  FuncDef: 
    Decl: name='Msp430CounterC_0_Msp430Timer_get', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430CounterC_0_Msp430Timer_get', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['int', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='Msp430TimerP_1_Timer_get'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='Msp430CounterC_0_Counter_get', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430CounterC_0_Counter_get', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='Msp430CounterC_0_Msp430Timer_get'
  FuncDef: 
    Decl: name='TransformCounterC_0_CounterFrom_get', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformCounterC_0_CounterFrom_get', quals=[]
          IdentifierType: names=['TransformCounterC_0_CounterFrom_size_type']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['int', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='Msp430CounterC_0_Counter_get'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='Msp430TimerP_1_Timer_isOverflowPending', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerP_1_Timer_isOverflowPending', quals=[]
          IdentifierType: names=['bool']
    Compound: 
      Return: 
        BinaryOp: op='&'
          UnaryOp: op='*'
            Cast: 
              Typename: quals=['volatile']
                PtrDecl: quals=[]
                  TypeDecl: declname=None, quals=['volatile']
                    IdentifierType: names=['uint16_t']
              Constant: type='int', value='384U'
          Constant: type='int', value='1U'
  FuncDef: 
    Decl: name='Msp430CounterC_0_Msp430Timer_isOverflowPending', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430CounterC_0_Msp430Timer_isOverflowPending', quals=[]
          IdentifierType: names=['bool']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['char', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='Msp430TimerP_1_Timer_isOverflowPending'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='Msp430CounterC_0_Counter_isOverflowPending', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430CounterC_0_Counter_isOverflowPending', quals=[]
          IdentifierType: names=['bool']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='Msp430CounterC_0_Msp430Timer_isOverflowPending'
  FuncDef: 
    Decl: name='TransformCounterC_0_CounterFrom_isOverflowPending', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformCounterC_0_CounterFrom_isOverflowPending', quals=[]
          IdentifierType: names=['bool']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['char', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='Msp430CounterC_0_Counter_isOverflowPending'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Control_enableEvents', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_3_Control_enableEvents', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='|='
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='386U'
        Constant: type='int', value='0x0010'
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Msp430TimerControl_enableEvents', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430AlarmC_0_Msp430TimerControl_enableEvents', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_3_Control_enableEvents'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Control_clearPendingInterrupt', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_3_Control_clearPendingInterrupt', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='&='
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='386U'
        UnaryOp: op='~'
          Constant: type='int', value='0x0001'
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Msp430TimerControl_clearPendingInterrupt', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430AlarmC_0_Msp430TimerControl_clearPendingInterrupt', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_3_Control_clearPendingInterrupt'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Compare_setEvent', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_3_Compare_setEvent', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='='
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='402U'
        ID: name='x'
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Msp430Compare_setEvent', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='time', quals=[], storage=[]
            TypeDecl: declname='time', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430AlarmC_0_Msp430Compare_setEvent', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_3_Compare_setEvent'
        ExprList: 
          ID: name='time'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Timer_get', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_3_Timer_get', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['int', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='Msp430TimerP_1_Timer_get'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Compare_setEventFromNow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_3_Compare_setEventFromNow', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='='
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='402U'
        BinaryOp: op='+'
          FuncCall: 
            ID: name='Msp430TimerCapComP_3_Timer_get'
          ID: name='x'
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Msp430Compare_setEventFromNow', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='delta', quals=[], storage=[]
            TypeDecl: declname='delta', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430AlarmC_0_Msp430Compare_setEventFromNow', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_3_Compare_setEventFromNow'
        ExprList: 
          ID: name='delta'
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Msp430Timer_get', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430AlarmC_0_Msp430Timer_get', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['int', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='Msp430TimerP_1_Timer_get'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Alarm_startAt', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='t0', quals=[], storage=[]
            TypeDecl: declname='t0', quals=[]
              IdentifierType: names=['uint16_t']
          Decl: name='dt', quals=[], storage=[]
            TypeDecl: declname='dt', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430AlarmC_0_Alarm_startAt', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Compound: 
        Decl: name='now', quals=[], storage=[]
          TypeDecl: declname='now', quals=[]
            IdentifierType: names=['uint16_t']
          FuncCall: 
            ID: name='Msp430AlarmC_0_Msp430Timer_get'
        Decl: name='elapsed', quals=[], storage=[]
          TypeDecl: declname='elapsed', quals=[]
            IdentifierType: names=['uint16_t']
          BinaryOp: op='-'
            ID: name='now'
            ID: name='t0'
        If: 
          BinaryOp: op='>='
            ID: name='elapsed'
            ID: name='dt'
          Compound: 
            FuncCall: 
              ID: name='Msp430AlarmC_0_Msp430Compare_setEventFromNow'
              ExprList: 
                Constant: type='int', value='2'
          Compound: 
            Decl: name='remaining', quals=[], storage=[]
              TypeDecl: declname='remaining', quals=[]
                IdentifierType: names=['uint16_t']
              BinaryOp: op='-'
                ID: name='dt'
                ID: name='elapsed'
            If: 
              BinaryOp: op='<='
                ID: name='remaining'
                Constant: type='int', value='2'
              Compound: 
                FuncCall: 
                  ID: name='Msp430AlarmC_0_Msp430Compare_setEventFromNow'
                  ExprList: 
                    Constant: type='int', value='2'
              Compound: 
                FuncCall: 
                  ID: name='Msp430AlarmC_0_Msp430Compare_setEvent'
                  ExprList: 
                    BinaryOp: op='+'
                      ID: name='now'
                      ID: name='remaining'
        FuncCall: 
          ID: name='Msp430AlarmC_0_Msp430TimerControl_clearPendingInterrupt'
        FuncCall: 
          ID: name='Msp430AlarmC_0_Msp430TimerControl_enableEvents'
  FuncDef: 
    Decl: name='TransformAlarmC_0_AlarmFrom_startAt', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='t0', quals=[], storage=[]
            TypeDecl: declname='t0', quals=[]
              IdentifierType: names=['TransformAlarmC_0_AlarmFrom_size_type']
          Decl: name='dt', quals=[], storage=[]
            TypeDecl: declname='dt', quals=[]
              IdentifierType: names=['TransformAlarmC_0_AlarmFrom_size_type']
        TypeDecl: declname='TransformAlarmC_0_AlarmFrom_startAt', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430AlarmC_0_Alarm_startAt'
        ExprList: 
          ID: name='t0'
          ID: name='dt'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_4_Compare_default_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_4_Compare_default_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_4_Compare_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_4_Compare_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_4_Compare_default_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_4_Capture_getEvent', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_4_Capture_getEvent', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Return: 
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='404U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_4_Capture_default_captured', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='n', quals=[], storage=[]
            TypeDecl: declname='n', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_4_Capture_default_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_4_Capture_captured', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='time', quals=[], storage=[]
            TypeDecl: declname='time', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_4_Capture_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_4_Capture_default_captured'
        ExprList: 
          ID: name='time'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_4_int2CC', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_4_int2CC', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_4_cc_t']
    Compound: 
      Decl: name='c', quals=[], storage=[]
        TypeDecl: declname='c', quals=[]
          Union: name='Msp430TimerCapComP_4___nesc_unnamed4280', packed=False
            Decl: name='f', quals=[], storage=[]
              TypeDecl: declname='f', quals=[]
                IdentifierType: names=['uint16_t']
            Decl: name='t', quals=[], storage=[]
              TypeDecl: declname='t', quals=[]
                IdentifierType: names=['Msp430TimerCapComP_4_cc_t']
        ExprList: 
          Assignment: op='='
            StructRef: type='.'
              ID: name='f'
            ID: name='x'
      Return: 
        StructRef: type='.'
          ID: name='c'
          ID: name='t'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_4_Control_getControl', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_4_Control_getControl', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_4_cc_t']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='Msp430TimerCapComP_4_int2CC'
          ExprList: 
            UnaryOp: op='*'
              Cast: 
                Typename: quals=['volatile']
                  PtrDecl: quals=[]
                    TypeDecl: declname=None, quals=['volatile']
                      IdentifierType: names=['uint16_t']
                Constant: type='int', value='388U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_4_Event_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_4_Event_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        StructRef: type='.'
          FuncCall: 
            ID: name='Msp430TimerCapComP_4_Control_getControl'
          ID: name='cap'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_4_Capture_captured'
            ExprList: 
              FuncCall: 
                ID: name='Msp430TimerCapComP_4_Capture_getEvent'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_4_Compare_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_5_Compare_default_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_5_Compare_default_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_5_Compare_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_5_Compare_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_5_Compare_default_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_5_Capture_getEvent', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_5_Capture_getEvent', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Return: 
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='406U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_5_Capture_default_captured', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='n', quals=[], storage=[]
            TypeDecl: declname='n', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_5_Capture_default_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_5_Capture_captured', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='time', quals=[], storage=[]
            TypeDecl: declname='time', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_5_Capture_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_5_Capture_default_captured'
        ExprList: 
          ID: name='time'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_5_int2CC', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_5_int2CC', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_5_cc_t']
    Compound: 
      Decl: name='c', quals=[], storage=[]
        TypeDecl: declname='c', quals=[]
          Union: name='Msp430TimerCapComP_5___nesc_unnamed4281', packed=False
            Decl: name='f', quals=[], storage=[]
              TypeDecl: declname='f', quals=[]
                IdentifierType: names=['uint16_t']
            Decl: name='t', quals=[], storage=[]
              TypeDecl: declname='t', quals=[]
                IdentifierType: names=['Msp430TimerCapComP_5_cc_t']
        ExprList: 
          Assignment: op='='
            StructRef: type='.'
              ID: name='f'
            ID: name='x'
      Return: 
        StructRef: type='.'
          ID: name='c'
          ID: name='t'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_5_Control_getControl', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_5_Control_getControl', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_5_cc_t']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='Msp430TimerCapComP_5_int2CC'
          ExprList: 
            UnaryOp: op='*'
              Cast: 
                Typename: quals=['volatile']
                  PtrDecl: quals=[]
                    TypeDecl: declname=None, quals=['volatile']
                      IdentifierType: names=['uint16_t']
                Constant: type='int', value='390U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_5_Event_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_5_Event_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        StructRef: type='.'
          FuncCall: 
            ID: name='Msp430TimerCapComP_5_Control_getControl'
          ID: name='cap'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_5_Capture_captured'
            ExprList: 
              FuncCall: 
                ID: name='Msp430TimerCapComP_5_Capture_getEvent'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_5_Compare_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_6_Compare_default_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_6_Compare_default_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_6_Compare_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_6_Compare_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_6_Compare_default_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_6_Capture_getEvent', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_6_Capture_getEvent', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Return: 
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='408U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_6_Capture_default_captured', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='n', quals=[], storage=[]
            TypeDecl: declname='n', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_6_Capture_default_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_6_Capture_captured', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='time', quals=[], storage=[]
            TypeDecl: declname='time', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_6_Capture_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_6_Capture_default_captured'
        ExprList: 
          ID: name='time'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_6_int2CC', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_6_int2CC', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_6_cc_t']
    Compound: 
      Decl: name='c', quals=[], storage=[]
        TypeDecl: declname='c', quals=[]
          Union: name='Msp430TimerCapComP_6___nesc_unnamed4282', packed=False
            Decl: name='f', quals=[], storage=[]
              TypeDecl: declname='f', quals=[]
                IdentifierType: names=['uint16_t']
            Decl: name='t', quals=[], storage=[]
              TypeDecl: declname='t', quals=[]
                IdentifierType: names=['Msp430TimerCapComP_6_cc_t']
        ExprList: 
          Assignment: op='='
            StructRef: type='.'
              ID: name='f'
            ID: name='x'
      Return: 
        StructRef: type='.'
          ID: name='c'
          ID: name='t'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_6_Control_getControl', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_6_Control_getControl', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_6_cc_t']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='Msp430TimerCapComP_6_int2CC'
          ExprList: 
            UnaryOp: op='*'
              Cast: 
                Typename: quals=['volatile']
                  PtrDecl: quals=[]
                    TypeDecl: declname=None, quals=['volatile']
                      IdentifierType: names=['uint16_t']
                Constant: type='int', value='392U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_6_Event_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_6_Event_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        StructRef: type='.'
          FuncCall: 
            ID: name='Msp430TimerCapComP_6_Control_getControl'
          ID: name='cap'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_6_Capture_captured'
            ExprList: 
              FuncCall: 
                ID: name='Msp430TimerCapComP_6_Capture_getEvent'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_6_Compare_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_7_Compare_default_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_7_Compare_default_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_7_Compare_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_7_Compare_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_7_Compare_default_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_7_Capture_getEvent', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_7_Capture_getEvent', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Return: 
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='410U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_7_Capture_default_captured', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='n', quals=[], storage=[]
            TypeDecl: declname='n', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_7_Capture_default_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_7_Capture_captured', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='time', quals=[], storage=[]
            TypeDecl: declname='time', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_7_Capture_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_7_Capture_default_captured'
        ExprList: 
          ID: name='time'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_7_int2CC', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_7_int2CC', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_7_cc_t']
    Compound: 
      Decl: name='c', quals=[], storage=[]
        TypeDecl: declname='c', quals=[]
          Union: name='Msp430TimerCapComP_7___nesc_unnamed4283', packed=False
            Decl: name='f', quals=[], storage=[]
              TypeDecl: declname='f', quals=[]
                IdentifierType: names=['uint16_t']
            Decl: name='t', quals=[], storage=[]
              TypeDecl: declname='t', quals=[]
                IdentifierType: names=['Msp430TimerCapComP_7_cc_t']
        ExprList: 
          Assignment: op='='
            StructRef: type='.'
              ID: name='f'
            ID: name='x'
      Return: 
        StructRef: type='.'
          ID: name='c'
          ID: name='t'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_7_Control_getControl', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_7_Control_getControl', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_7_cc_t']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='Msp430TimerCapComP_7_int2CC'
          ExprList: 
            UnaryOp: op='*'
              Cast: 
                Typename: quals=['volatile']
                  PtrDecl: quals=[]
                    TypeDecl: declname=None, quals=['volatile']
                      IdentifierType: names=['uint16_t']
                Constant: type='int', value='394U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_7_Event_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_7_Event_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        StructRef: type='.'
          FuncCall: 
            ID: name='Msp430TimerCapComP_7_Control_getControl'
          ID: name='cap'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_7_Capture_captured'
            ExprList: 
              FuncCall: 
                ID: name='Msp430TimerCapComP_7_Capture_getEvent'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_7_Compare_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_8_Compare_default_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_8_Compare_default_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_8_Compare_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_8_Compare_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_8_Compare_default_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_8_Capture_getEvent', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_8_Capture_getEvent', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Return: 
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='412U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_8_Capture_default_captured', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='n', quals=[], storage=[]
            TypeDecl: declname='n', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_8_Capture_default_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_8_Capture_captured', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='time', quals=[], storage=[]
            TypeDecl: declname='time', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_8_Capture_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_8_Capture_default_captured'
        ExprList: 
          ID: name='time'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_8_int2CC', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_8_int2CC', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_8_cc_t']
    Compound: 
      Decl: name='c', quals=[], storage=[]
        TypeDecl: declname='c', quals=[]
          Union: name='Msp430TimerCapComP_8___nesc_unnamed4284', packed=False
            Decl: name='f', quals=[], storage=[]
              TypeDecl: declname='f', quals=[]
                IdentifierType: names=['uint16_t']
            Decl: name='t', quals=[], storage=[]
              TypeDecl: declname='t', quals=[]
                IdentifierType: names=['Msp430TimerCapComP_8_cc_t']
        ExprList: 
          Assignment: op='='
            StructRef: type='.'
              ID: name='f'
            ID: name='x'
      Return: 
        StructRef: type='.'
          ID: name='c'
          ID: name='t'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_8_Control_getControl', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_8_Control_getControl', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_8_cc_t']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='Msp430TimerCapComP_8_int2CC'
          ExprList: 
            UnaryOp: op='*'
              Cast: 
                Typename: quals=['volatile']
                  PtrDecl: quals=[]
                    TypeDecl: declname=None, quals=['volatile']
                      IdentifierType: names=['uint16_t']
                Constant: type='int', value='396U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_8_Event_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_8_Event_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        StructRef: type='.'
          FuncCall: 
            ID: name='Msp430TimerCapComP_8_Control_getControl'
          ID: name='cap'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_8_Capture_captured'
            ExprList: 
              FuncCall: 
                ID: name='Msp430TimerCapComP_8_Capture_getEvent'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_8_Compare_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_9_Compare_default_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_9_Compare_default_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_9_Compare_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_9_Compare_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_9_Compare_default_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_9_Capture_getEvent', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_9_Capture_getEvent', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Return: 
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='414U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_9_Capture_default_captured', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='n', quals=[], storage=[]
            TypeDecl: declname='n', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_9_Capture_default_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerCapComP_9_Capture_captured', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='time', quals=[], storage=[]
            TypeDecl: declname='time', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_9_Capture_captured', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_9_Capture_default_captured'
        ExprList: 
          ID: name='time'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_9_int2CC', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='Msp430TimerCapComP_9_int2CC', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_9_cc_t']
    Compound: 
      Decl: name='c', quals=[], storage=[]
        TypeDecl: declname='c', quals=[]
          Union: name='Msp430TimerCapComP_9___nesc_unnamed4285', packed=False
            Decl: name='f', quals=[], storage=[]
              TypeDecl: declname='f', quals=[]
                IdentifierType: names=['uint16_t']
            Decl: name='t', quals=[], storage=[]
              TypeDecl: declname='t', quals=[]
                IdentifierType: names=['Msp430TimerCapComP_9_cc_t']
        ExprList: 
          Assignment: op='='
            StructRef: type='.'
              ID: name='f'
            ID: name='x'
      Return: 
        StructRef: type='.'
          ID: name='c'
          ID: name='t'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_9_Control_getControl', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_9_Control_getControl', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_9_cc_t']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='Msp430TimerCapComP_9_int2CC'
          ExprList: 
            UnaryOp: op='*'
              Cast: 
                Typename: quals=['volatile']
                  PtrDecl: quals=[]
                    TypeDecl: declname=None, quals=['volatile']
                      IdentifierType: names=['uint16_t']
                Constant: type='int', value='398U'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_9_Event_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_9_Event_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        StructRef: type='.'
          FuncCall: 
            ID: name='Msp430TimerCapComP_9_Control_getControl'
          ID: name='cap'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_9_Capture_captured'
            ExprList: 
              FuncCall: 
                ID: name='Msp430TimerCapComP_9_Capture_getEvent'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_9_Compare_fired'
  FuncDef: 
    Decl: name='Msp430TimerP_1_VectorTimerX1_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerP_1_VectorTimerX1_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='n', quals=[], storage=[]
        TypeDecl: declname='n', quals=[]
          IdentifierType: names=['uint8_t']
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='286U'
      FuncCall: 
        ID: name='Msp430TimerP_1_Event_fired'
        ExprList: 
          BinaryOp: op='>>'
            ID: name='n'
            Constant: type='int', value='1'
  FuncDef: 
    Decl: name='Msp430TimerCommonP_VectorTimerB1_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCommonP_VectorTimerB1_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerP_1_VectorTimerX1_fired'
  FuncDef: 
    Decl: name='SchedulerBasicP_Scheduler_init', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='SchedulerBasicP_Scheduler_init', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Compound: 
        FuncCall: 
          ID: name='memset'
          ExprList: 
            Cast: 
              Typename: quals=[]
                PtrDecl: quals=[]
                  TypeDecl: declname=None, quals=[]
                    IdentifierType: names=['void']
              ID: name='SchedulerBasicP_m_next'
            ID: name='SchedulerBasicP_NO_TASK'
            UnaryOp: op='sizeof'
              ID: name='SchedulerBasicP_m_next'
        Assignment: op='='
          ID: name='SchedulerBasicP_m_head'
          ID: name='SchedulerBasicP_NO_TASK'
        Assignment: op='='
          ID: name='SchedulerBasicP_m_tail'
          ID: name='SchedulerBasicP_NO_TASK'
  FuncDef: 
    Decl: name='RealMainP_Scheduler_init', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='RealMainP_Scheduler_init', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='SchedulerBasicP_Scheduler_init'
  FuncDef: 
    Decl: name='HplMsp430GeneralIOP_38_IO_set', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='HplMsp430GeneralIOP_38_IO_set', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='|='
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint8_t']
            Constant: type='int', value='49U'
        BinaryOp: op='<<'
          Constant: type='int', value='0x01'
          Constant: type='int', value='6'
  FuncDef: 
    Decl: name='Msp430GpioC_2_HplGeneralIO_set', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_2_HplGeneralIO_set', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='HplMsp430GeneralIOP_38_IO_set'
  FuncDef: 
    Decl: name='Msp430GpioC_2_GeneralIO_set', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_2_GeneralIO_set', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_2_HplGeneralIO_set'
  FuncDef: 
    Decl: name='LedsP_Led2_set', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Led2_set', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_2_GeneralIO_set'
  FuncDef: 
    Decl: name='HplMsp430GeneralIOP_37_IO_set', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='HplMsp430GeneralIOP_37_IO_set', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='|='
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint8_t']
            Constant: type='int', value='49U'
        BinaryOp: op='<<'
          Constant: type='int', value='0x01'
          Constant: type='int', value='5'
  FuncDef: 
    Decl: name='Msp430GpioC_1_HplGeneralIO_set', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_1_HplGeneralIO_set', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='HplMsp430GeneralIOP_37_IO_set'
  FuncDef: 
    Decl: name='Msp430GpioC_1_GeneralIO_set', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_1_GeneralIO_set', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_1_HplGeneralIO_set'
  FuncDef: 
    Decl: name='LedsP_Led1_set', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Led1_set', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_1_GeneralIO_set'
  FuncDef: 
    Decl: name='HplMsp430GeneralIOP_36_IO_set', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='HplMsp430GeneralIOP_36_IO_set', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='|='
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint8_t']
            Constant: type='int', value='49U'
        BinaryOp: op='<<'
          Constant: type='int', value='0x01'
          Constant: type='int', value='4'
  FuncDef: 
    Decl: name='Msp430GpioC_0_HplGeneralIO_set', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_0_HplGeneralIO_set', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='HplMsp430GeneralIOP_36_IO_set'
  FuncDef: 
    Decl: name='Msp430GpioC_0_GeneralIO_set', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_0_GeneralIO_set', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_0_HplGeneralIO_set'
  FuncDef: 
    Decl: name='LedsP_Led0_set', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Led0_set', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_0_GeneralIO_set'
  FuncDef: 
    Decl: name='HplMsp430GeneralIOP_38_IO_makeOutput', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='HplMsp430GeneralIOP_38_IO_makeOutput', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='|='
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint8_t']
            Constant: type='int', value='50U'
        BinaryOp: op='<<'
          Constant: type='int', value='0x01'
          Constant: type='int', value='6'
  FuncDef: 
    Decl: name='Msp430GpioC_2_HplGeneralIO_makeOutput', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_2_HplGeneralIO_makeOutput', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='HplMsp430GeneralIOP_38_IO_makeOutput'
  FuncDef: 
    Decl: name='Msp430GpioC_2_GeneralIO_makeOutput', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_2_GeneralIO_makeOutput', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_2_HplGeneralIO_makeOutput'
  FuncDef: 
    Decl: name='LedsP_Led2_makeOutput', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Led2_makeOutput', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_2_GeneralIO_makeOutput'
  FuncDef: 
    Decl: name='HplMsp430GeneralIOP_37_IO_makeOutput', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='HplMsp430GeneralIOP_37_IO_makeOutput', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='|='
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint8_t']
            Constant: type='int', value='50U'
        BinaryOp: op='<<'
          Constant: type='int', value='0x01'
          Constant: type='int', value='5'
  FuncDef: 
    Decl: name='Msp430GpioC_1_HplGeneralIO_makeOutput', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_1_HplGeneralIO_makeOutput', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='HplMsp430GeneralIOP_37_IO_makeOutput'
  FuncDef: 
    Decl: name='Msp430GpioC_1_GeneralIO_makeOutput', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_1_GeneralIO_makeOutput', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_1_HplGeneralIO_makeOutput'
  FuncDef: 
    Decl: name='LedsP_Led1_makeOutput', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Led1_makeOutput', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_1_GeneralIO_makeOutput'
  FuncDef: 
    Decl: name='HplMsp430GeneralIOP_36_IO_makeOutput', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='HplMsp430GeneralIOP_36_IO_makeOutput', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='|='
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint8_t']
            Constant: type='int', value='50U'
        BinaryOp: op='<<'
          Constant: type='int', value='0x01'
          Constant: type='int', value='4'
  FuncDef: 
    Decl: name='Msp430GpioC_0_HplGeneralIO_makeOutput', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_0_HplGeneralIO_makeOutput', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='HplMsp430GeneralIOP_36_IO_makeOutput'
  FuncDef: 
    Decl: name='Msp430GpioC_0_GeneralIO_makeOutput', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_0_GeneralIO_makeOutput', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_0_HplGeneralIO_makeOutput'
  FuncDef: 
    Decl: name='LedsP_Led0_makeOutput', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Led0_makeOutput', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_0_GeneralIO_makeOutput'
  FuncDef: 
    Decl: name='LedsP_Init_init', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Init_init', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      Compound: 
        FuncCall: 
          ID: name='LedsP_Led0_makeOutput'
        FuncCall: 
          ID: name='LedsP_Led1_makeOutput'
        FuncCall: 
          ID: name='LedsP_Led2_makeOutput'
        FuncCall: 
          ID: name='LedsP_Led0_set'
        FuncCall: 
          ID: name='LedsP_Led1_set'
        FuncCall: 
          ID: name='LedsP_Led2_set'
      Return: 
        ID: name='SUCCESS'
  FuncDef: 
    Decl: name='PlatformP_LedsInit_init', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='PlatformP_LedsInit_init', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['char', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='LedsP_Init_init'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='TOSH_SET_SIMO0_PIN', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        TypeDecl: declname='TOSH_SET_SIMO0_PIN', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='r@"0x0019"', quals=['volatile'], storage=['static']
        TypeDecl: declname='r@"0x0019"', quals=['volatile']
          IdentifierType: names=['uint8_t']
      Assignment: op='|='
        ID: name='r'
        BinaryOp: op='<<'
          Constant: type='int', value='1'
          Constant: type='int', value='1'
  FuncDef: 
    Decl: name='TOSH_SET_UCLK0_PIN', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        TypeDecl: declname='TOSH_SET_UCLK0_PIN', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='r@"0x0019"', quals=['volatile'], storage=['static']
        TypeDecl: declname='r@"0x0019"', quals=['volatile']
          IdentifierType: names=['uint8_t']
      Assignment: op='|='
        ID: name='r'
        BinaryOp: op='<<'
          Constant: type='int', value='1'
          Constant: type='int', value='3'
  FuncDef: 
    Decl: name='TOSH_SET_FLASH_CS_PIN', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        TypeDecl: declname='TOSH_SET_FLASH_CS_PIN', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='r@"0x001D"', quals=['volatile'], storage=['static']
        TypeDecl: declname='r@"0x001D"', quals=['volatile']
          IdentifierType: names=['uint8_t']
      Assignment: op='|='
        ID: name='r'
        BinaryOp: op='<<'
          Constant: type='int', value='1'
          Constant: type='int', value='4'
  FuncDef: 
    Decl: name='TOSH_CLR_UCLK0_PIN', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        TypeDecl: declname='TOSH_CLR_UCLK0_PIN', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='r@"0x0019"', quals=['volatile'], storage=['static']
        TypeDecl: declname='r@"0x0019"', quals=['volatile']
          IdentifierType: names=['uint8_t']
      Assignment: op='&='
        ID: name='r'
        UnaryOp: op='~'
          BinaryOp: op='<<'
            Constant: type='int', value='1'
            Constant: type='int', value='3'
  FuncDef: 
    Decl: name='TOSH_CLR_FLASH_CS_PIN', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        TypeDecl: declname='TOSH_CLR_FLASH_CS_PIN', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='r@"0x001D"', quals=['volatile'], storage=['static']
        TypeDecl: declname='r@"0x001D"', quals=['volatile']
          IdentifierType: names=['uint8_t']
      Assignment: op='&='
        ID: name='r'
        UnaryOp: op='~'
          BinaryOp: op='<<'
            Constant: type='int', value='1'
            Constant: type='int', value='4'
  FuncDef: 
    Decl: name='MotePlatformC_TOSH_wait', quals=[], storage=['__inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='MotePlatformC_TOSH_wait', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='TOSH_SET_FLASH_HOLD_PIN', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        TypeDecl: declname='TOSH_SET_FLASH_HOLD_PIN', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='r@"0x001D"', quals=['volatile'], storage=['static']
        TypeDecl: declname='r@"0x001D"', quals=['volatile']
          IdentifierType: names=['uint8_t']
      Assignment: op='|='
        ID: name='r'
        BinaryOp: op='<<'
          Constant: type='int', value='1'
          Constant: type='int', value='7'
  FuncDef: 
    Decl: name='TOSH_MAKE_FLASH_CS_OUTPUT', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        TypeDecl: declname='TOSH_MAKE_FLASH_CS_OUTPUT', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='r@"0x001E"', quals=['volatile'], storage=['static']
        TypeDecl: declname='r@"0x001E"', quals=['volatile']
          IdentifierType: names=['uint8_t']
      Assignment: op='|='
        ID: name='r'
        BinaryOp: op='<<'
          Constant: type='int', value='1'
          Constant: type='int', value='4'
  FuncDef: 
    Decl: name='TOSH_MAKE_FLASH_HOLD_OUTPUT', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        TypeDecl: declname='TOSH_MAKE_FLASH_HOLD_OUTPUT', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='r@"0x001E"', quals=['volatile'], storage=['static']
        TypeDecl: declname='r@"0x001E"', quals=['volatile']
          IdentifierType: names=['uint8_t']
      Assignment: op='|='
        ID: name='r'
        BinaryOp: op='<<'
          Constant: type='int', value='1'
          Constant: type='int', value='7'
  FuncDef: 
    Decl: name='TOSH_MAKE_UCLK0_OUTPUT', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        TypeDecl: declname='TOSH_MAKE_UCLK0_OUTPUT', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='r@"0x001A"', quals=['volatile'], storage=['static']
        TypeDecl: declname='r@"0x001A"', quals=['volatile']
          IdentifierType: names=['uint8_t']
      Assignment: op='|='
        ID: name='r'
        BinaryOp: op='<<'
          Constant: type='int', value='1'
          Constant: type='int', value='3'
  FuncDef: 
    Decl: name='TOSH_MAKE_SIMO0_OUTPUT', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        TypeDecl: declname='TOSH_MAKE_SIMO0_OUTPUT', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='r@"0x001A"', quals=['volatile'], storage=['static']
        TypeDecl: declname='r@"0x001A"', quals=['volatile']
          IdentifierType: names=['uint8_t']
      Assignment: op='|='
        ID: name='r'
        BinaryOp: op='<<'
          Constant: type='int', value='1'
          Constant: type='int', value='1'
  FuncDef: 
    Decl: name='MotePlatformC_TOSH_FLASH_M25P_DP', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='MotePlatformC_TOSH_FLASH_M25P_DP', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='TOSH_MAKE_SIMO0_OUTPUT'
      FuncCall: 
        ID: name='TOSH_MAKE_UCLK0_OUTPUT'
      FuncCall: 
        ID: name='TOSH_MAKE_FLASH_HOLD_OUTPUT'
      FuncCall: 
        ID: name='TOSH_MAKE_FLASH_CS_OUTPUT'
      FuncCall: 
        ID: name='TOSH_SET_FLASH_HOLD_PIN'
      FuncCall: 
        ID: name='TOSH_SET_FLASH_CS_PIN'
      FuncCall: 
        ID: name='MotePlatformC_TOSH_wait'
      FuncCall: 
        ID: name='TOSH_CLR_FLASH_CS_PIN'
      FuncCall: 
        ID: name='TOSH_CLR_UCLK0_PIN'
      FuncCall: 
        ID: name='MotePlatformC_TOSH_FLASH_M25P_DP_bit'
        ExprList: 
          ID: name='TRUE'
      FuncCall: 
        ID: name='MotePlatformC_TOSH_FLASH_M25P_DP_bit'
        ExprList: 
          ID: name='FALSE'
      FuncCall: 
        ID: name='MotePlatformC_TOSH_FLASH_M25P_DP_bit'
        ExprList: 
          ID: name='TRUE'
      FuncCall: 
        ID: name='MotePlatformC_TOSH_FLASH_M25P_DP_bit'
        ExprList: 
          ID: name='TRUE'
      FuncCall: 
        ID: name='MotePlatformC_TOSH_FLASH_M25P_DP_bit'
        ExprList: 
          ID: name='TRUE'
      FuncCall: 
        ID: name='MotePlatformC_TOSH_FLASH_M25P_DP_bit'
        ExprList: 
          ID: name='FALSE'
      FuncCall: 
        ID: name='MotePlatformC_TOSH_FLASH_M25P_DP_bit'
        ExprList: 
          ID: name='FALSE'
      FuncCall: 
        ID: name='MotePlatformC_TOSH_FLASH_M25P_DP_bit'
        ExprList: 
          ID: name='TRUE'
      FuncCall: 
        ID: name='TOSH_SET_FLASH_CS_PIN'
      FuncCall: 
        ID: name='TOSH_SET_UCLK0_PIN'
      FuncCall: 
        ID: name='TOSH_SET_SIMO0_PIN'
  FuncDef: 
    Decl: name='MotePlatformC_uwait', quals=[], storage=['__inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='u', quals=[], storage=[]
            TypeDecl: declname='u', quals=[]
              IdentifierType: names=['uint16_t']
        TypeDecl: declname='MotePlatformC_uwait', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='t0', quals=[], storage=[]
        TypeDecl: declname='t0', quals=[]
          IdentifierType: names=['uint16_t']
        ID: name='TA0R'
      While: 
        BinaryOp: op='<='
          BinaryOp: op='-'
            ID: name='TA0R'
            ID: name='t0'
          ID: name='u'
  FuncDef: 
    Decl: name='MotePlatformC_Init_init', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='MotePlatformC_Init_init', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      Compound: 
        Assignment: op='='
          ID: name='P1SEL'
          Constant: type='int', value='0'
        Assignment: op='='
          ID: name='P2SEL'
          Constant: type='int', value='0'
        Assignment: op='='
          ID: name='P3SEL'
          Constant: type='int', value='0'
        Assignment: op='='
          ID: name='P4SEL'
          Constant: type='int', value='0'
        Assignment: op='='
          ID: name='P5SEL'
          Constant: type='int', value='0'
        Assignment: op='='
          ID: name='P6SEL'
          Constant: type='int', value='0'
        Assignment: op='='
          ID: name='P1OUT'
          Constant: type='int', value='0x00'
        Assignment: op='='
          ID: name='P1DIR'
          Constant: type='int', value='0xe0'
        Assignment: op='='
          ID: name='P2OUT'
          Constant: type='int', value='0x30'
        Assignment: op='='
          ID: name='P2DIR'
          Constant: type='int', value='0x7b'
        Assignment: op='='
          ID: name='P3OUT'
          Constant: type='int', value='0x00'
        Assignment: op='='
          ID: name='P3DIR'
          Constant: type='int', value='0xf1'
        Assignment: op='='
          ID: name='P4OUT'
          Constant: type='int', value='0xdd'
        Assignment: op='='
          ID: name='P4DIR'
          Constant: type='int', value='0xfd'
        Assignment: op='='
          ID: name='P5OUT'
          Constant: type='int', value='0xff'
        Assignment: op='='
          ID: name='P5DIR'
          Constant: type='int', value='0xff'
        Assignment: op='='
          ID: name='P6OUT'
          Constant: type='int', value='0x00'
        Assignment: op='='
          ID: name='P6DIR'
          Constant: type='int', value='0xff'
        Assignment: op='='
          ID: name='P1IE'
          Constant: type='int', value='0'
        Assignment: op='='
          ID: name='P2IE'
          Constant: type='int', value='0'
        FuncCall: 
          ID: name='MotePlatformC_TOSH_FLASH_M25P_DP'
      Return: 
        ID: name='SUCCESS'
  FuncDef: 
    Decl: name='PlatformP_MoteInit_init', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='PlatformP_MoteInit_init', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['char', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='MotePlatformC_Init_init'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='Msp430ClockP_startTimerB', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_startTimerB', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='='
        ID: name='Msp430ClockP_TBCTL'
        BinaryOp: op='|'
          Constant: type='int', value='0x0020'
          BinaryOp: op='&'
            ID: name='Msp430ClockP_TBCTL'
            UnaryOp: op='~'
              BinaryOp: op='|'
                Constant: type='int', value='0x0020'
                Constant: type='int', value='0x0010'
  FuncDef: 
    Decl: name='Msp430ClockP_startTimerA', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_startTimerA', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='='
        ID: name='Msp430ClockP_TA0CTL'
        BinaryOp: op='|'
          Constant: type='int', value='0x0020'
          BinaryOp: op='&'
            ID: name='Msp430ClockP_TA0CTL'
            UnaryOp: op='~'
              BinaryOp: op='|'
                Constant: type='int', value='0x0020'
                Constant: type='int', value='0x0010'
  FuncDef: 
    Decl: name='Msp430ClockP_Msp430ClockInit_defaultInitTimerB', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Msp430ClockInit_defaultInitTimerB', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='='
        ID: name='TBR'
        Constant: type='int', value='0'
      Assignment: op='='
        ID: name='Msp430ClockP_TBCTL'
        BinaryOp: op='|'
          Constant: type='int', value='0x0100'
          Constant: type='int', value='0x0002'
  FuncDef: 
    Decl: name='Msp430ClockP_Msp430ClockInit_default_initTimerB', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Msp430ClockInit_default_initTimerB', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430ClockP_Msp430ClockInit_defaultInitTimerB'
  FuncDef: 
    Decl: name='Msp430ClockP_Msp430ClockInit_initTimerB', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Msp430ClockInit_initTimerB', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430ClockP_Msp430ClockInit_default_initTimerB'
  FuncDef: 
    Decl: name='Msp430ClockP_Msp430ClockInit_defaultInitTimerA', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Msp430ClockInit_defaultInitTimerA', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='='
        ID: name='TA0R'
        Constant: type='int', value='0'
      Assignment: op='='
        ID: name='Msp430ClockP_TA0CTL'
        BinaryOp: op='|'
          Constant: type='int', value='0x0200'
          Constant: type='int', value='0x0002'
  FuncDef: 
    Decl: name='Msp430ClockP_Msp430ClockInit_default_initTimerA', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Msp430ClockInit_default_initTimerA', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430ClockP_Msp430ClockInit_defaultInitTimerA'
  FuncDef: 
    Decl: name='Msp430ClockP_Msp430ClockInit_initTimerA', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Msp430ClockInit_initTimerA', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430ClockP_Msp430ClockInit_default_initTimerA'
  FuncDef: 
    Decl: name='Msp430ClockP_Msp430ClockInit_defaultInitClocks', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Msp430ClockInit_defaultInitClocks', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='='
        ID: name='BCSCTL1'
        BinaryOp: op='|'
          Constant: type='int', value='0x80'
          BinaryOp: op='&'
            ID: name='BCSCTL1'
            BinaryOp: op='|'
              BinaryOp: op='|'
                Constant: type='int', value='0x04'
                Constant: type='int', value='0x02'
              Constant: type='int', value='0x01'
      Assignment: op='='
        ID: name='BCSCTL2'
        Constant: type='int', value='0x04'
      Assignment: op='&='
        ID: name='Msp430ClockP_IE1'
        UnaryOp: op='~'
          BinaryOp: op='<<'
            Constant: type='int', value='1'
            Constant: type='int', value='1'
  FuncDef: 
    Decl: name='Msp430ClockP_Msp430ClockInit_default_initClocks', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Msp430ClockInit_default_initClocks', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430ClockP_Msp430ClockInit_defaultInitClocks'
  FuncDef: 
    Decl: name='Msp430ClockP_Msp430ClockInit_initClocks', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Msp430ClockInit_initClocks', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430ClockP_Msp430ClockInit_default_initClocks'
  FuncDef: 
    Decl: name='Msp430ClockP_test_calib_busywait_delta', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='calib', quals=[], storage=[]
            TypeDecl: declname='calib', quals=[]
              IdentifierType: names=['int']
        TypeDecl: declname='Msp430ClockP_test_calib_busywait_delta', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Decl: name='aclk_count', quals=[], storage=[]
        TypeDecl: declname='aclk_count', quals=[]
          IdentifierType: names=['int8_t']
        Constant: type='int', value='2'
      Decl: name='dco_prev', quals=[], storage=[]
        TypeDecl: declname='dco_prev', quals=[]
          IdentifierType: names=['uint16_t']
        Constant: type='int', value='0'
      Decl: name='dco_curr', quals=[], storage=[]
        TypeDecl: declname='dco_curr', quals=[]
          IdentifierType: names=['uint16_t']
        Constant: type='int', value='0'
      FuncCall: 
        ID: name='Msp430ClockP_set_dco_calib'
        ExprList: 
          ID: name='calib'
      While: 
        BinaryOp: op='>'
          UnaryOp: op='p--'
            ID: name='aclk_count'
          Constant: type='int', value='0'
        Compound: 
          Assignment: op='='
            ID: name='TBCCR0'
            BinaryOp: op='+'
              ID: name='TBR'
              ID: name='Msp430ClockP_ACLK_CALIB_PERIOD'
          Assignment: op='&='
            ID: name='TBCCTL0'
            UnaryOp: op='~'
              Constant: type='int', value='0x0001'
          While: 
            BinaryOp: op='=='
              BinaryOp: op='&'
                ID: name='TBCCTL0'
                Constant: type='int', value='0x0001'
              Constant: type='int', value='0'
          Assignment: op='='
            ID: name='dco_prev'
            ID: name='dco_curr'
          Assignment: op='='
            ID: name='dco_curr'
            ID: name='TA0R'
      Return: 
        BinaryOp: op='-'
          ID: name='dco_curr'
          ID: name='dco_prev'
  FuncDef: 
    Decl: name='Msp430ClockP_busyCalibrateDco', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_busyCalibrateDco', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='calib', quals=[], storage=[]
        TypeDecl: declname='calib', quals=[]
          IdentifierType: names=['int']
      Decl: name='step', quals=[], storage=[]
        TypeDecl: declname='step', quals=[]
          IdentifierType: names=['int']
      For: 
        ExprList: 
          Assignment: op='='
            ID: name='calib'
            Constant: type='int', value='0'
          Assignment: op='='
            ID: name='step'
            Constant: type='int', value='0x800'
        BinaryOp: op='!='
          ID: name='step'
          Constant: type='int', value='0'
        Assignment: op='>>='
          ID: name='step'
          Constant: type='int', value='1'
        Compound: 
          If: 
            BinaryOp: op='<='
              FuncCall: 
                ID: name='Msp430ClockP_test_calib_busywait_delta'
                ExprList: 
                  BinaryOp: op='|'
                    ID: name='calib'
                    ID: name='step'
              ID: name='Msp430ClockP_TARGET_DCO_DELTA'
            Compound: 
              Assignment: op='|='
                ID: name='calib'
                ID: name='step'
      If: 
        BinaryOp: op='=='
          BinaryOp: op='&'
            ID: name='calib'
            Constant: type='int', value='0x0e0'
          Constant: type='int', value='0x0e0'
        Compound: 
          Assignment: op='&='
            ID: name='calib'
            UnaryOp: op='~'
              Constant: type='int', value='0x01f'
      FuncCall: 
        ID: name='Msp430ClockP_set_dco_calib'
        ExprList: 
          ID: name='calib'
  FuncDef: 
    Decl: name='Msp430ClockP_Msp430ClockInit_defaultSetupDcoCalibrate', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Msp430ClockInit_defaultSetupDcoCalibrate', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='='
        ID: name='Msp430ClockP_TA0CTL'
        BinaryOp: op='|'
          Constant: type='int', value='0x0200'
          Constant: type='int', value='0x0020'
      Assignment: op='='
        ID: name='Msp430ClockP_TBCTL'
        BinaryOp: op='|'
          Constant: type='int', value='0x0100'
          Constant: type='int', value='0x0020'
      Assignment: op='='
        ID: name='BCSCTL1'
        BinaryOp: op='|'
          Constant: type='int', value='0x80'
          Constant: type='int', value='0x04'
      Assignment: op='='
        ID: name='BCSCTL2'
        Constant: type='int', value='0'
      Assignment: op='='
        ID: name='TBCCTL0'
        Constant: type='int', value='0x4000'
  FuncDef: 
    Decl: name='Msp430ClockP_Msp430ClockInit_default_setupDcoCalibrate', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Msp430ClockInit_default_setupDcoCalibrate', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430ClockP_Msp430ClockInit_defaultSetupDcoCalibrate'
  FuncDef: 
    Decl: name='Msp430ClockP_Msp430ClockInit_setupDcoCalibrate', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Msp430ClockInit_setupDcoCalibrate', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430ClockP_Msp430ClockInit_default_setupDcoCalibrate'
  FuncDef: 
    Decl: name='Msp430ClockP_Init_init', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430ClockP_Init_init', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      Assignment: op='='
        ID: name='Msp430ClockP_TA0CTL'
        Constant: type='int', value='0x0004'
      Assignment: op='='
        ID: name='Msp430ClockP_TA0IV'
        Constant: type='int', value='0'
      Assignment: op='='
        ID: name='Msp430ClockP_TBCTL'
        Constant: type='int', value='0x0004'
      Assignment: op='='
        ID: name='Msp430ClockP_TBIV'
        Constant: type='int', value='0'
      Compound: 
        FuncCall: 
          ID: name='Msp430ClockP_Msp430ClockInit_initClocks'
        FuncCall: 
          ID: name='Msp430ClockP_Msp430ClockInit_initTimerA'
        FuncCall: 
          ID: name='Msp430ClockP_Msp430ClockInit_initTimerB'
        FuncCall: 
          ID: name='Msp430ClockP_startTimerA'
        FuncCall: 
          ID: name='Msp430ClockP_startTimerB'
      Return: 
        ID: name='SUCCESS'
  FuncDef: 
    Decl: name='PlatformP_MoteClockInit_init', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='PlatformP_MoteClockInit_init', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['char', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='Msp430ClockP_Init_init'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='PlatformP_Init_init', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='PlatformP_Init_init', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      FuncCall: 
        ID: name='PlatformP_MoteClockInit_init'
      FuncCall: 
        ID: name='PlatformP_MoteInit_init'
      FuncCall: 
        ID: name='PlatformP_LedsInit_init'
      Return: 
        ID: name='SUCCESS'
  FuncDef: 
    Decl: name='RealMainP_PlatformInit_init', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='RealMainP_PlatformInit_init', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['char', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='PlatformP_Init_init'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='TOSH_CLR_SIMO0_PIN', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        TypeDecl: declname='TOSH_CLR_SIMO0_PIN', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='r@"0x0019"', quals=['volatile'], storage=['static']
        TypeDecl: declname='r@"0x0019"', quals=['volatile']
          IdentifierType: names=['uint8_t']
      Assignment: op='&='
        ID: name='r'
        UnaryOp: op='~'
          BinaryOp: op='<<'
            Constant: type='int', value='1'
            Constant: type='int', value='1'
  FuncDef: 
    Decl: name='RealMainP_Scheduler_runNextTask', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='RealMainP_Scheduler_runNextTask', quals=[]
          IdentifierType: names=['bool']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['char', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='SchedulerBasicP_Scheduler_runNextTask'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Alarm_stop', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430AlarmC_0_Alarm_stop', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430AlarmC_0_Msp430TimerControl_disableEvents'
  FuncDef: 
    Decl: name='TransformAlarmC_0_AlarmFrom_stop', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformAlarmC_0_AlarmFrom_stop', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430AlarmC_0_Alarm_stop'
  FuncDef: 
    Decl: name='TransformAlarmC_0_Alarm_stop', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformAlarmC_0_Alarm_stop', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='TransformAlarmC_0_AlarmFrom_stop'
  FuncDef: 
    Decl: name='AlarmToTimerC_0_Alarm_stop', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='AlarmToTimerC_0_Alarm_stop', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='TransformAlarmC_0_Alarm_stop'
  FuncDef: 
    Decl: name='AlarmToTimerC_0_Timer_stop', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='AlarmToTimerC_0_Timer_stop', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='AlarmToTimerC_0_Alarm_stop'
  FuncDef: 
    Decl: name='VirtualizeTimerC_0_TimerFrom_stop', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='VirtualizeTimerC_0_TimerFrom_stop', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='AlarmToTimerC_0_Timer_stop'
  FuncDef: 
    Decl: name='HplMsp430GeneralIOP_36_IO_toggle', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='HplMsp430GeneralIOP_36_IO_toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Compound: 
        Decl: name='__nesc_atomic', quals=[], storage=[]
          TypeDecl: declname='__nesc_atomic', quals=[]
            IdentifierType: names=['__nesc_atomic_t']
          FuncCall: 
            ID: name='__nesc_atomic_start'
        Assignment: op='^='
          UnaryOp: op='*'
            Cast: 
              Typename: quals=['volatile']
                PtrDecl: quals=[]
                  TypeDecl: declname=None, quals=['volatile']
                    IdentifierType: names=['uint8_t']
              Constant: type='int', value='49U'
          BinaryOp: op='<<'
            Constant: type='int', value='0x01'
            Constant: type='int', value='4'
        FuncCall: 
          ID: name='__nesc_atomic_end'
          ExprList: 
            ID: name='__nesc_atomic'
  FuncDef: 
    Decl: name='Msp430GpioC_0_HplGeneralIO_toggle', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_0_HplGeneralIO_toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='HplMsp430GeneralIOP_36_IO_toggle'
  FuncDef: 
    Decl: name='Msp430GpioC_0_GeneralIO_toggle', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_0_GeneralIO_toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_0_HplGeneralIO_toggle'
  FuncDef: 
    Decl: name='LedsP_Led0_toggle', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Led0_toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_0_GeneralIO_toggle'
  FuncDef: 
    Decl: name='LedsP_Leds_led0Toggle', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Leds_led0Toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='LedsP_Led0_toggle'
  FuncDef: 
    Decl: name='BlinkC_Leds_led0Toggle', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='BlinkC_Leds_led0Toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='LedsP_Leds_led0Toggle'
  FuncDef: 
    Decl: name='BlinkC_Timer0_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='BlinkC_Timer0_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='BlinkC_Leds_led0Toggle'
  FuncDef: 
    Decl: name='HplMsp430GeneralIOP_37_IO_toggle', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='HplMsp430GeneralIOP_37_IO_toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Compound: 
        Decl: name='__nesc_atomic', quals=[], storage=[]
          TypeDecl: declname='__nesc_atomic', quals=[]
            IdentifierType: names=['__nesc_atomic_t']
          FuncCall: 
            ID: name='__nesc_atomic_start'
        Assignment: op='^='
          UnaryOp: op='*'
            Cast: 
              Typename: quals=['volatile']
                PtrDecl: quals=[]
                  TypeDecl: declname=None, quals=['volatile']
                    IdentifierType: names=['uint8_t']
              Constant: type='int', value='49U'
          BinaryOp: op='<<'
            Constant: type='int', value='0x01'
            Constant: type='int', value='5'
        FuncCall: 
          ID: name='__nesc_atomic_end'
          ExprList: 
            ID: name='__nesc_atomic'
  FuncDef: 
    Decl: name='Msp430GpioC_1_HplGeneralIO_toggle', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_1_HplGeneralIO_toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='HplMsp430GeneralIOP_37_IO_toggle'
  FuncDef: 
    Decl: name='Msp430GpioC_1_GeneralIO_toggle', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_1_GeneralIO_toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_1_HplGeneralIO_toggle'
  FuncDef: 
    Decl: name='LedsP_Led1_toggle', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Led1_toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_1_GeneralIO_toggle'
  FuncDef: 
    Decl: name='LedsP_Leds_led1Toggle', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Leds_led1Toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='LedsP_Led1_toggle'
  FuncDef: 
    Decl: name='BlinkC_Leds_led1Toggle', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='BlinkC_Leds_led1Toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='LedsP_Leds_led1Toggle'
  FuncDef: 
    Decl: name='BlinkC_Timer1_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='BlinkC_Timer1_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='BlinkC_Leds_led1Toggle'
  FuncDef: 
    Decl: name='HplMsp430GeneralIOP_38_IO_toggle', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='HplMsp430GeneralIOP_38_IO_toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Compound: 
        Decl: name='__nesc_atomic', quals=[], storage=[]
          TypeDecl: declname='__nesc_atomic', quals=[]
            IdentifierType: names=['__nesc_atomic_t']
          FuncCall: 
            ID: name='__nesc_atomic_start'
        Assignment: op='^='
          UnaryOp: op='*'
            Cast: 
              Typename: quals=['volatile']
                PtrDecl: quals=[]
                  TypeDecl: declname=None, quals=['volatile']
                    IdentifierType: names=['uint8_t']
              Constant: type='int', value='49U'
          BinaryOp: op='<<'
            Constant: type='int', value='0x01'
            Constant: type='int', value='6'
        FuncCall: 
          ID: name='__nesc_atomic_end'
          ExprList: 
            ID: name='__nesc_atomic'
  FuncDef: 
    Decl: name='Msp430GpioC_2_HplGeneralIO_toggle', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_2_HplGeneralIO_toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='HplMsp430GeneralIOP_38_IO_toggle'
  FuncDef: 
    Decl: name='Msp430GpioC_2_GeneralIO_toggle', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430GpioC_2_GeneralIO_toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_2_HplGeneralIO_toggle'
  FuncDef: 
    Decl: name='LedsP_Led2_toggle', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Led2_toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430GpioC_2_GeneralIO_toggle'
  FuncDef: 
    Decl: name='LedsP_Leds_led2Toggle', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='LedsP_Leds_led2Toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='LedsP_Led2_toggle'
  FuncDef: 
    Decl: name='BlinkC_Leds_led2Toggle', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='BlinkC_Leds_led2Toggle', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='LedsP_Leds_led2Toggle'
  FuncDef: 
    Decl: name='BlinkC_Timer2_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='BlinkC_Timer2_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='BlinkC_Leds_led2Toggle'
  FuncDef: 
    Decl: name='VirtualizeTimerC_0_Timer_default_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='num', quals=[], storage=[]
            TypeDecl: declname='num', quals=[]
              IdentifierType: names=['uint8_t']
        TypeDecl: declname='VirtualizeTimerC_0_Timer_default_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='VirtualizeTimerC_0_Timer_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='arg_0x18a3ea0', quals=[], storage=[]
            TypeDecl: declname='arg_0x18a3ea0', quals=[]
              IdentifierType: names=['uint8_t']
        TypeDecl: declname='VirtualizeTimerC_0_Timer_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Switch: 
        ID: name='arg_0x18a3ea0'
        Compound: 
          Case: 
            Constant: type='int', value='0U'
            FuncCall: 
              ID: name='BlinkC_Timer0_fired'
          Break: 
          Case: 
            Constant: type='int', value='1U'
            FuncCall: 
              ID: name='BlinkC_Timer1_fired'
          Break: 
          Case: 
            Constant: type='int', value='2U'
            FuncCall: 
              ID: name='BlinkC_Timer2_fired'
          Break: 
          Default: 
            FuncCall: 
              ID: name='VirtualizeTimerC_0_Timer_default_fired'
              ExprList: 
                ID: name='arg_0x18a3ea0'
          Break: 
  FuncDef: 
    Decl: name='AlarmToTimerC_0_Alarm_startAt', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='t0', quals=[], storage=[]
            TypeDecl: declname='t0', quals=[]
              IdentifierType: names=['AlarmToTimerC_0_Alarm_size_type']
          Decl: name='dt', quals=[], storage=[]
            TypeDecl: declname='dt', quals=[]
              IdentifierType: names=['AlarmToTimerC_0_Alarm_size_type']
        TypeDecl: declname='AlarmToTimerC_0_Alarm_startAt', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='TransformAlarmC_0_Alarm_startAt'
        ExprList: 
          ID: name='t0'
          ID: name='dt'
  FuncDef: 
    Decl: name='AlarmToTimerC_0_start', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='t0', quals=[], storage=[]
            TypeDecl: declname='t0', quals=[]
              IdentifierType: names=['uint32_t']
          Decl: name='dt', quals=[], storage=[]
            TypeDecl: declname='dt', quals=[]
              IdentifierType: names=['uint32_t']
          Decl: name='oneshot', quals=[], storage=[]
            TypeDecl: declname='oneshot', quals=[]
              IdentifierType: names=['bool']
        TypeDecl: declname='AlarmToTimerC_0_start', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='='
        ID: name='AlarmToTimerC_0_m_dt'
        ID: name='dt'
      Assignment: op='='
        ID: name='AlarmToTimerC_0_m_oneshot'
        ID: name='oneshot'
      FuncCall: 
        ID: name='AlarmToTimerC_0_Alarm_startAt'
        ExprList: 
          ID: name='t0'
          ID: name='dt'
  FuncDef: 
    Decl: name='AlarmToTimerC_0_Timer_startOneShotAt', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='t0', quals=[], storage=[]
            TypeDecl: declname='t0', quals=[]
              IdentifierType: names=['uint32_t']
          Decl: name='dt', quals=[], storage=[]
            TypeDecl: declname='dt', quals=[]
              IdentifierType: names=['uint32_t']
        TypeDecl: declname='AlarmToTimerC_0_Timer_startOneShotAt', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='AlarmToTimerC_0_start'
        ExprList: 
          ID: name='t0'
          ID: name='dt'
          ID: name='TRUE'
  FuncDef: 
    Decl: name='VirtualizeTimerC_0_TimerFrom_startOneShotAt', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='t0', quals=[], storage=[]
            TypeDecl: declname='t0', quals=[]
              IdentifierType: names=['uint32_t']
          Decl: name='dt', quals=[], storage=[]
            TypeDecl: declname='dt', quals=[]
              IdentifierType: names=['uint32_t']
        TypeDecl: declname='VirtualizeTimerC_0_TimerFrom_startOneShotAt', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='AlarmToTimerC_0_Timer_startOneShotAt'
        ExprList: 
          ID: name='t0'
          ID: name='dt'
  FuncDef: 
    Decl: name='TransformAlarmC_0_Alarm_getAlarm', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformAlarmC_0_Alarm_getAlarm', quals=[]
          IdentifierType: names=['TransformAlarmC_0_to_size_type']
    Compound: 
      Compound: 
        Decl: name='__nesc_atomic', quals=[], storage=[]
          TypeDecl: declname='__nesc_atomic', quals=[]
            IdentifierType: names=['__nesc_atomic_t']
          FuncCall: 
            ID: name='__nesc_atomic_start'
        Compound: 
          Decl: name='__nesc_temp', quals=[], storage=[]
            TypeDecl: declname='__nesc_temp', quals=[]
              IdentifierType: names=['TransformAlarmC_0_to_size_type']
            BinaryOp: op='+'
              ID: name='TransformAlarmC_0_m_t0'
              ID: name='TransformAlarmC_0_m_dt'
          Compound: 
            FuncCall: 
              ID: name='__nesc_atomic_end'
              ExprList: 
                ID: name='__nesc_atomic'
            Return: 
              ID: name='__nesc_temp'
        FuncCall: 
          ID: name='__nesc_atomic_end'
          ExprList: 
            ID: name='__nesc_atomic'
  FuncDef: 
    Decl: name='AlarmToTimerC_0_Alarm_getAlarm', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='AlarmToTimerC_0_Alarm_getAlarm', quals=[]
          IdentifierType: names=['AlarmToTimerC_0_Alarm_size_type']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['long', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='TransformAlarmC_0_Alarm_getAlarm'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='TransformAlarmC_0_Counter_get', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformAlarmC_0_Counter_get', quals=[]
          IdentifierType: names=['TransformAlarmC_0_Counter_size_type']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['long', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='TransformCounterC_0_Counter_get'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='TransformAlarmC_0_Alarm_getNow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformAlarmC_0_Alarm_getNow', quals=[]
          IdentifierType: names=['TransformAlarmC_0_to_size_type']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='TransformAlarmC_0_Counter_get'
  FuncDef: 
    Decl: name='AlarmToTimerC_0_Alarm_getNow', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='AlarmToTimerC_0_Alarm_getNow', quals=[]
          IdentifierType: names=['AlarmToTimerC_0_Alarm_size_type']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['long', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='TransformAlarmC_0_Alarm_getNow'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='AlarmToTimerC_0_Timer_getNow', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='AlarmToTimerC_0_Timer_getNow', quals=[]
          IdentifierType: names=['uint32_t']
    Compound: 
      Return: 
        FuncCall: 
          ID: name='AlarmToTimerC_0_Alarm_getNow'
  FuncDef: 
    Decl: name='VirtualizeTimerC_0_TimerFrom_getNow', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='VirtualizeTimerC_0_TimerFrom_getNow', quals=[]
          IdentifierType: names=['uint32_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['long', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='AlarmToTimerC_0_Timer_getNow'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='VirtualizeTimerC_0_TimerFrom_fired', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='VirtualizeTimerC_0_TimerFrom_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='VirtualizeTimerC_0_fireTimers'
        ExprList: 
          FuncCall: 
            ID: name='VirtualizeTimerC_0_TimerFrom_getNow'
  FuncDef: 
    Decl: name='AlarmToTimerC_0_Timer_fired', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='AlarmToTimerC_0_Timer_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='VirtualizeTimerC_0_TimerFrom_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_CC2int', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='x', quals=[], storage=[]
            TypeDecl: declname='x', quals=[]
              IdentifierType: names=['Msp430TimerCapComP_3_cc_t']
        TypeDecl: declname='Msp430TimerCapComP_3_CC2int', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Decl: name='c', quals=[], storage=[]
        TypeDecl: declname='c', quals=[]
          Union: name='Msp430TimerCapComP_3___nesc_unnamed4286', packed=False
            Decl: name='f', quals=[], storage=[]
              TypeDecl: declname='f', quals=[]
                IdentifierType: names=['Msp430TimerCapComP_3_cc_t']
            Decl: name='t', quals=[], storage=[]
              TypeDecl: declname='t', quals=[]
                IdentifierType: names=['uint16_t']
        ExprList: 
          Assignment: op='='
            StructRef: type='.'
              ID: name='f'
            ID: name='x'
      Return: 
        StructRef: type='.'
          ID: name='c'
          ID: name='t'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_compareControl', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_3_compareControl', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Decl: name='x', quals=[], storage=[]
        TypeDecl: declname='x', quals=[]
          IdentifierType: names=['Msp430TimerCapComP_3_cc_t']
        ExprList: 
          Assignment: op='='
            StructRef: type='.'
              ID: name='cm'
            Constant: type='int', value='1'
          Assignment: op='='
            StructRef: type='.'
              ID: name='ccis'
            Constant: type='int', value='0'
          Assignment: op='='
            StructRef: type='.'
              ID: name='clld'
            Constant: type='int', value='0'
          Assignment: op='='
            StructRef: type='.'
              ID: name='cap'
            Constant: type='int', value='0'
          Assignment: op='='
            StructRef: type='.'
              ID: name='ccie'
            Constant: type='int', value='0'
      Return: 
        FuncCall: 
          ID: name='Msp430TimerCapComP_3_CC2int'
          ExprList: 
            ID: name='x'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_3_Control_setControlAsCompare', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_3_Control_setControlAsCompare', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='='
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='386U'
        FuncCall: 
          ID: name='Msp430TimerCapComP_3_compareControl'
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Msp430TimerControl_setControlAsCompare', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430AlarmC_0_Msp430TimerControl_setControlAsCompare', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCapComP_3_Control_setControlAsCompare'
  FuncDef: 
    Decl: name='Msp430AlarmC_0_Init_init', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430AlarmC_0_Init_init', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      FuncCall: 
        ID: name='Msp430AlarmC_0_Msp430TimerControl_disableEvents'
      FuncCall: 
        ID: name='Msp430AlarmC_0_Msp430TimerControl_setControlAsCompare'
      Return: 
        ID: name='SUCCESS'
  FuncDef: 
    Decl: name='RealMainP_SoftwareInit_init', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='RealMainP_SoftwareInit_init', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['char', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='Msp430AlarmC_0_Init_init'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='BlinkC_Timer2_startPeriodic', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='dt', quals=[], storage=[]
            TypeDecl: declname='dt', quals=[]
              IdentifierType: names=['uint32_t']
        TypeDecl: declname='BlinkC_Timer2_startPeriodic', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='VirtualizeTimerC_0_Timer_startPeriodic'
        ExprList: 
          Constant: type='int', value='2U'
          ID: name='dt'
  FuncDef: 
    Decl: name='BlinkC_Timer1_startPeriodic', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='dt', quals=[], storage=[]
            TypeDecl: declname='dt', quals=[]
              IdentifierType: names=['uint32_t']
        TypeDecl: declname='BlinkC_Timer1_startPeriodic', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='VirtualizeTimerC_0_Timer_startPeriodic'
        ExprList: 
          Constant: type='int', value='1U'
          ID: name='dt'
  FuncDef: 
    Decl: name='BlinkC_Timer0_startPeriodic', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='dt', quals=[], storage=[]
            TypeDecl: declname='dt', quals=[]
              IdentifierType: names=['uint32_t']
        TypeDecl: declname='BlinkC_Timer0_startPeriodic', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='VirtualizeTimerC_0_Timer_startPeriodic'
        ExprList: 
          Constant: type='int', value='0U'
          ID: name='dt'
  FuncDef: 
    Decl: name='BlinkC_Boot_booted', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='BlinkC_Boot_booted', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='BlinkC_Timer0_startPeriodic'
        ExprList: 
          Constant: type='int', value='250'
      FuncCall: 
        ID: name='BlinkC_Timer1_startPeriodic'
        ExprList: 
          Constant: type='int', value='500'
      FuncCall: 
        ID: name='BlinkC_Timer2_startPeriodic'
        ExprList: 
          Constant: type='int', value='1000'
  FuncDef: 
    Decl: name='RealMainP_Boot_booted', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='RealMainP_Boot_booted', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='BlinkC_Boot_booted'
  FuncDef: 
    Decl: name='VirtualizeTimerC_0_updateFromTimer_postTask', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='VirtualizeTimerC_0_updateFromTimer_postTask', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['char', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='SchedulerBasicP_TaskBasic_postTask'
          ExprList: 
            ID: name='VirtualizeTimerC_0_updateFromTimer'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='VirtualizeTimerC_0_startTimer', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='num', quals=[], storage=[]
            TypeDecl: declname='num', quals=[]
              IdentifierType: names=['uint8_t']
          Decl: name='t0', quals=[], storage=[]
            TypeDecl: declname='t0', quals=[]
              IdentifierType: names=['uint32_t']
          Decl: name='dt', quals=[], storage=[]
            TypeDecl: declname='dt', quals=[]
              IdentifierType: names=['uint32_t']
          Decl: name='isoneshot', quals=[], storage=[]
            TypeDecl: declname='isoneshot', quals=[]
              IdentifierType: names=['bool']
        TypeDecl: declname='VirtualizeTimerC_0_startTimer', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='timer', quals=[], storage=[]
        PtrDecl: quals=[]
          TypeDecl: declname='timer', quals=[]
            IdentifierType: names=['VirtualizeTimerC_0_Timer_t']
        UnaryOp: op='&'
          ArrayRef: 
            ID: name='VirtualizeTimerC_0_m_timers'
            ID: name='num'
      Assignment: op='='
        StructRef: type='->'
          ID: name='timer'
          ID: name='t0'
        ID: name='t0'
      Assignment: op='='
        StructRef: type='->'
          ID: name='timer'
          ID: name='dt'
        ID: name='dt'
      Assignment: op='='
        StructRef: type='->'
          ID: name='timer'
          ID: name='isoneshot'
        ID: name='isoneshot'
      Assignment: op='='
        StructRef: type='->'
          ID: name='timer'
          ID: name='isrunning'
        ID: name='TRUE'
      FuncCall: 
        ID: name='VirtualizeTimerC_0_updateFromTimer_postTask'
  FuncDef: 
    Decl: name='SchedulerBasicP_TaskBasic_default_runTask', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='id', quals=[], storage=[]
            TypeDecl: declname='id', quals=[]
              IdentifierType: names=['uint8_t']
        TypeDecl: declname='SchedulerBasicP_TaskBasic_default_runTask', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='SchedulerBasicP_TaskBasic_runTask', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='arg_0x147bb38', quals=[], storage=[]
            TypeDecl: declname='arg_0x147bb38', quals=[]
              IdentifierType: names=['uint8_t']
        TypeDecl: declname='SchedulerBasicP_TaskBasic_runTask', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Switch: 
        ID: name='arg_0x147bb38'
        Compound: 
          Case: 
            ID: name='AlarmToTimerC_0_fired'
            FuncCall: 
              ID: name='AlarmToTimerC_0_fired_runTask'
          Break: 
          Case: 
            ID: name='VirtualizeTimerC_0_updateFromTimer'
            FuncCall: 
              ID: name='VirtualizeTimerC_0_updateFromTimer_runTask'
          Break: 
          Default: 
            FuncCall: 
              ID: name='SchedulerBasicP_TaskBasic_default_runTask'
              ExprList: 
                ID: name='arg_0x147bb38'
          Break: 
  FuncDef: 
    Decl: name='__nesc_disable_interrupt', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='__nesc_disable_interrupt', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='&='
        ID: name='_R2'
        Constant: type='int', value='0xfff7'
  FuncDef: 
    Decl: name='McuSleepC_McuPowerOverride_default_lowestState', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='McuSleepC_McuPowerOverride_default_lowestState', quals=[]
          IdentifierType: names=['mcu_power_t']
    Compound: 
      Return: 
        ID: name='MSP430_POWER_LPM4'
  FuncDef: 
    Decl: name='McuSleepC_McuPowerOverride_lowestState', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='McuSleepC_McuPowerOverride_lowestState', quals=[]
          IdentifierType: names=['mcu_power_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['char', 'unsigned']
      Assignment: op='='
        ID: name='result'
        FuncCall: 
          ID: name='McuSleepC_McuPowerOverride_default_lowestState'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='McuSleepC_getPowerState', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='McuSleepC_getPowerState', quals=[]
          IdentifierType: names=['mcu_power_t']
    Compound: 
      Decl: name='pState', quals=[], storage=[]
        TypeDecl: declname='pState', quals=[]
          IdentifierType: names=['mcu_power_t']
        ID: name='MSP430_POWER_LPM3'
      If: 
        BinaryOp: op='||'
          BinaryOp: op='||'
            BinaryOp: op='||'
              BinaryOp: op='&&'
                BinaryOp: op='||'
                  BinaryOp: op='||'
                    BinaryOp: op='&'
                      ID: name='TA0CCTL0'
                      Constant: type='int', value='0x0010'
                    BinaryOp: op='&'
                      ID: name='TA0CCTL1'
                      Constant: type='int', value='0x0010'
                  BinaryOp: op='&'
                    ID: name='TA0CCTL2'
                    Constant: type='int', value='0x0010'
                BinaryOp: op='=='
                  BinaryOp: op='&'
                    ID: name='TA0CTL'
                    BinaryOp: op='<<'
                      Constant: type='int', value='3'
                      Constant: type='int', value='8'
                  BinaryOp: op='<<'
                    Constant: type='int', value='2'
                    Constant: type='int', value='8'
              BinaryOp: op='&&'
                BinaryOp: op='&'
                  ID: name='ME1'
                  BinaryOp: op='|'
                    BinaryOp: op='<<'
                      Constant: type='int', value='1'
                      Constant: type='int', value='7'
                    BinaryOp: op='<<'
                      Constant: type='int', value='1'
                      Constant: type='int', value='6'
                BinaryOp: op='&'
                  ID: name='U0TCTL'
                  Constant: type='int', value='0x20'
            BinaryOp: op='&&'
              BinaryOp: op='&'
                ID: name='ME2'
                BinaryOp: op='|'
                  BinaryOp: op='<<'
                    Constant: type='int', value='1'
                    Constant: type='int', value='5'
                  BinaryOp: op='<<'
                    Constant: type='int', value='1'
                    Constant: type='int', value='4'
              BinaryOp: op='&'
                ID: name='U1TCTL'
                Constant: type='int', value='0x20'
          BinaryOp: op='&&'
            BinaryOp: op='&&'
              BinaryOp: op='&&'
                BinaryOp: op='&&'
                  BinaryOp: op='&'
                    ID: name='U0CTLnr'
                    Constant: type='int', value='0x01'
                  BinaryOp: op='&'
                    ID: name='I2CTCTLnr'
                    Constant: type='int', value='0x20'
                BinaryOp: op='&'
                  ID: name='I2CDCTLnr'
                  Constant: type='int', value='0x20'
              BinaryOp: op='&'
                ID: name='U0CTLnr'
                Constant: type='int', value='0x04'
            BinaryOp: op='&'
              ID: name='U0CTLnr'
              Constant: type='int', value='0x20'
        Compound: 
          Assignment: op='='
            ID: name='pState'
            ID: name='MSP430_POWER_LPM1'
      If: 
        BinaryOp: op='&'
          ID: name='ADC12CTL0'
          Constant: type='int', value='0x0010'
        Compound: 
          If: 
            BinaryOp: op='&'
              ID: name='ADC12CTL1'
              BinaryOp: op='<<'
                Constant: type='int', value='2'
                Constant: type='int', value='3'
            Compound: 
              If: 
                BinaryOp: op='&'
                  ID: name='ADC12CTL1'
                  BinaryOp: op='<<'
                    Constant: type='int', value='1'
                    Constant: type='int', value='3'
                Compound: 
                  Assignment: op='='
                    ID: name='pState'
                    ID: name='MSP430_POWER_LPM1'
                Compound: 
                  Assignment: op='='
                    ID: name='pState'
                    ID: name='MSP430_POWER_ACTIVE'
            Compound: 
              If: 
                BinaryOp: op='&&'
                  BinaryOp: op='&'
                    ID: name='ADC12CTL1'
                    Constant: type='int', value='0x0400'
                  BinaryOp: op='=='
                    BinaryOp: op='&'
                      ID: name='TA0CTL'
                      BinaryOp: op='<<'
                        Constant: type='int', value='3'
                        Constant: type='int', value='8'
                    BinaryOp: op='<<'
                      Constant: type='int', value='2'
                      Constant: type='int', value='8'
                Compound: 
                  Assignment: op='='
                    ID: name='pState'
                    ID: name='MSP430_POWER_LPM1'
      Return: 
        ID: name='pState'
  FuncDef: 
    Decl: name='mcombine', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='m1', quals=[], storage=[]
            TypeDecl: declname='m1', quals=[]
              IdentifierType: names=['mcu_power_t']
          Decl: name='m2', quals=[], storage=[]
            TypeDecl: declname='m2', quals=[]
              IdentifierType: names=['mcu_power_t']
        TypeDecl: declname='mcombine', quals=[]
          IdentifierType: names=['mcu_power_t']
    Compound: 
      Return: 
        TernaryOp: 
          BinaryOp: op='<'
            ID: name='m1'
            ID: name='m2'
          ID: name='m1'
          ID: name='m2'
  FuncDef: 
    Decl: name='McuSleepC_computePowerState', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='McuSleepC_computePowerState', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='='
        ID: name='McuSleepC_powerState'
        FuncCall: 
          ID: name='mcombine'
          ExprList: 
            FuncCall: 
              ID: name='McuSleepC_getPowerState'
            FuncCall: 
              ID: name='McuSleepC_McuPowerOverride_lowestState'
  FuncDef: 
    Decl: name='McuSleepC_McuSleep_sleep', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='McuSleepC_McuSleep_sleep', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='temp', quals=[], storage=[]
        TypeDecl: declname='temp', quals=[]
          IdentifierType: names=['uint16_t']
      If: 
        ID: name='McuSleepC_dirty'
        Compound: 
          FuncCall: 
            ID: name='McuSleepC_computePowerState'
      Assignment: op='='
        ID: name='temp'
        BinaryOp: op='|'
          ArrayRef: 
            ID: name='McuSleepC_msp430PowerBits'
            ID: name='McuSleepC_powerState'
          Constant: type='int', value='0x0008'
      Assignment: op='|='
        ID: name='_R2'
        ID: name='temp'
      FuncCall: 
        ID: name='__nesc_disable_interrupt'
  FuncDef: 
    Decl: name='SchedulerBasicP_McuSleep_sleep', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='SchedulerBasicP_McuSleep_sleep', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='McuSleepC_McuSleep_sleep'
  FuncDef: 
    Decl: name='SchedulerBasicP_popTask', quals=[], storage=['__inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='SchedulerBasicP_popTask', quals=[]
          IdentifierType: names=['uint8_t']
    Compound: 
      If: 
        BinaryOp: op='!='
          ID: name='SchedulerBasicP_m_head'
          ID: name='SchedulerBasicP_NO_TASK'
        Compound: 
          Decl: name='id', quals=[], storage=[]
            TypeDecl: declname='id', quals=[]
              IdentifierType: names=['uint8_t']
            ID: name='SchedulerBasicP_m_head'
          Assignment: op='='
            ID: name='SchedulerBasicP_m_head'
            ArrayRef: 
              ID: name='SchedulerBasicP_m_next'
              ID: name='SchedulerBasicP_m_head'
          If: 
            BinaryOp: op='=='
              ID: name='SchedulerBasicP_m_head'
              ID: name='SchedulerBasicP_NO_TASK'
            Compound: 
              Assignment: op='='
                ID: name='SchedulerBasicP_m_tail'
                ID: name='SchedulerBasicP_NO_TASK'
          Assignment: op='='
            ArrayRef: 
              ID: name='SchedulerBasicP_m_next'
              ID: name='id'
            ID: name='SchedulerBasicP_NO_TASK'
          Return: 
            ID: name='id'
        Compound: 
          Return: 
            ID: name='SchedulerBasicP_NO_TASK'
  FuncDef: 
    Decl: name='SchedulerBasicP_Scheduler_taskLoop', quals=[], storage=['inline', 'static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='SchedulerBasicP_Scheduler_taskLoop', quals=[]
          IdentifierType: names=['void']
    Compound: 
      For: 
        Compound: 
          Decl: name='nextTask', quals=[], storage=[]
            TypeDecl: declname='nextTask', quals=[]
              IdentifierType: names=['uint8_t']
          Compound: 
            Decl: name='__nesc_atomic', quals=[], storage=[]
              TypeDecl: declname='__nesc_atomic', quals=[]
                IdentifierType: names=['__nesc_atomic_t']
              FuncCall: 
                ID: name='__nesc_atomic_start'
            Compound: 
              While: 
                BinaryOp: op='=='
                  Assignment: op='='
                    ID: name='nextTask'
                    FuncCall: 
                      ID: name='SchedulerBasicP_popTask'
                  ID: name='SchedulerBasicP_NO_TASK'
                Compound: 
                  FuncCall: 
                    ID: name='SchedulerBasicP_McuSleep_sleep'
            FuncCall: 
              ID: name='__nesc_atomic_end'
              ExprList: 
                ID: name='__nesc_atomic'
          FuncCall: 
            ID: name='SchedulerBasicP_TaskBasic_runTask'
            ExprList: 
              ID: name='nextTask'
  FuncDef: 
    Decl: name='RealMainP_Scheduler_taskLoop', quals=[], storage=['static', 'inline']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='RealMainP_Scheduler_taskLoop', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='SchedulerBasicP_Scheduler_taskLoop'
  FuncDef: 
    Decl: name='__nesc_atomic_start', quals=[], storage=[]
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='__nesc_atomic_start', quals=[]
          IdentifierType: names=['__nesc_atomic_t']
    Compound: 
      Decl: name='result', quals=[], storage=[]
        TypeDecl: declname='result', quals=[]
          IdentifierType: names=['__nesc_atomic_t']
        BinaryOp: op='!='
          BinaryOp: op='&'
            Compound: 
              Decl: name='__x', quals=[], storage=[]
                TypeDecl: declname='__x', quals=[]
                  IdentifierType: names=['uint16_t']
              Assignment: op='='
                Cast: 
                  Typename: quals=[]
                    TypeDecl: declname=None, quals=[]
                      IdentifierType: names=['uint16_t']
                  ID: name='__x'
                ID: name='_R2'
              ID: name='__x'
            Constant: type='int', value='0x0008'
          Constant: type='int', value='0'
      FuncCall: 
        ID: name='__nesc_disable_interrupt'
      Return: 
        ID: name='result'
  FuncDef: 
    Decl: name='__nesc_atomic_end', quals=[], storage=[]
      FuncDecl: quals=None
        ParamList: 
          Decl: name='reenable_interrupts', quals=[], storage=[]
            TypeDecl: declname='reenable_interrupts', quals=[]
              IdentifierType: names=['__nesc_atomic_t']
        TypeDecl: declname='__nesc_atomic_end', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        ID: name='reenable_interrupts'
        Compound: 
          FuncCall: 
            ID: name='__nesc_enable_interrupt'
  FuncDef: 
    Decl: name='sig_TIMERA0_VECTOR', quals=[], storage=[]
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='sig_TIMERA0_VECTOR', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCommonP_VectorTimerA0_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_0_Event_fired', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_0_Event_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        StructRef: type='.'
          FuncCall: 
            ID: name='Msp430TimerCapComP_0_Control_getControl'
          ID: name='cap'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_0_Capture_captured'
            ExprList: 
              FuncCall: 
                ID: name='Msp430TimerCapComP_0_Capture_getEvent'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_0_Compare_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_1_Event_fired', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_1_Event_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        StructRef: type='.'
          FuncCall: 
            ID: name='Msp430TimerCapComP_1_Control_getControl'
          ID: name='cap'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_1_Capture_captured'
            ExprList: 
              FuncCall: 
                ID: name='Msp430TimerCapComP_1_Capture_getEvent'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_1_Compare_fired'
  FuncDef: 
    Decl: name='Msp430TimerCapComP_2_Event_fired', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerCapComP_2_Event_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        StructRef: type='.'
          FuncCall: 
            ID: name='Msp430TimerCapComP_2_Control_getControl'
          ID: name='cap'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_2_Capture_captured'
            ExprList: 
              FuncCall: 
                ID: name='Msp430TimerCapComP_2_Capture_getEvent'
        Compound: 
          FuncCall: 
            ID: name='Msp430TimerCapComP_2_Compare_fired'
  FuncDef: 
    Decl: name='sig_TIMERA1_VECTOR', quals=[], storage=[]
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='sig_TIMERA1_VECTOR', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCommonP_VectorTimerA1_fired'
  FuncDef: 
    Decl: name='sig_TIMERB0_VECTOR', quals=[], storage=[]
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='sig_TIMERB0_VECTOR', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCommonP_VectorTimerB0_fired'
  FuncDef: 
    Decl: name='Msp430TimerP_1_Event_default_fired', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='n', quals=[], storage=[]
            TypeDecl: declname='n', quals=[]
              IdentifierType: names=['uint8_t']
        TypeDecl: declname='Msp430TimerP_1_Event_default_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
  FuncDef: 
    Decl: name='Msp430TimerP_1_Event_fired', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='arg_0x1561800', quals=[], storage=[]
            TypeDecl: declname='arg_0x1561800', quals=[]
              IdentifierType: names=['uint8_t']
        TypeDecl: declname='Msp430TimerP_1_Event_fired', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Switch: 
        ID: name='arg_0x1561800'
        Compound: 
          Case: 
            Constant: type='int', value='0'
            FuncCall: 
              ID: name='Msp430TimerCapComP_3_Event_fired'
          Break: 
          Case: 
            Constant: type='int', value='1'
            FuncCall: 
              ID: name='Msp430TimerCapComP_4_Event_fired'
          Break: 
          Case: 
            Constant: type='int', value='2'
            FuncCall: 
              ID: name='Msp430TimerCapComP_5_Event_fired'
          Break: 
          Case: 
            Constant: type='int', value='3'
            FuncCall: 
              ID: name='Msp430TimerCapComP_6_Event_fired'
          Break: 
          Case: 
            Constant: type='int', value='4'
            FuncCall: 
              ID: name='Msp430TimerCapComP_7_Event_fired'
          Break: 
          Case: 
            Constant: type='int', value='5'
            FuncCall: 
              ID: name='Msp430TimerCapComP_8_Event_fired'
          Break: 
          Case: 
            Constant: type='int', value='6'
            FuncCall: 
              ID: name='Msp430TimerCapComP_9_Event_fired'
          Break: 
          Case: 
            Constant: type='int', value='7'
            FuncCall: 
              ID: name='Msp430TimerP_1_Overflow_fired'
          Break: 
          Default: 
            FuncCall: 
              ID: name='Msp430TimerP_1_Event_default_fired'
              ExprList: 
                ID: name='arg_0x1561800'
          Break: 
  FuncDef: 
    Decl: name='SchedulerBasicP_TaskBasic_postTask', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='id', quals=[], storage=[]
            TypeDecl: declname='id', quals=[]
              IdentifierType: names=['uint8_t']
        TypeDecl: declname='SchedulerBasicP_TaskBasic_postTask', quals=[]
          IdentifierType: names=['error_t']
    Compound: 
      Compound: 
        Decl: name='__nesc_atomic', quals=[], storage=[]
          TypeDecl: declname='__nesc_atomic', quals=[]
            IdentifierType: names=['__nesc_atomic_t']
          FuncCall: 
            ID: name='__nesc_atomic_start'
        Compound: 
          Compound: 
            Decl: name='__nesc_temp', quals=[], storage=[]
              TypeDecl: declname='__nesc_temp', quals=[]
                IdentifierType: names=['char', 'unsigned']
              TernaryOp: 
                FuncCall: 
                  ID: name='SchedulerBasicP_pushTask'
                  ExprList: 
                    ID: name='id'
                ID: name='SUCCESS'
                ID: name='EBUSY'
            Compound: 
              FuncCall: 
                ID: name='__nesc_atomic_end'
                ExprList: 
                  ID: name='__nesc_atomic'
              Return: 
                ID: name='__nesc_temp'
        FuncCall: 
          ID: name='__nesc_atomic_end'
          ExprList: 
            ID: name='__nesc_atomic'
  FuncDef: 
    Decl: name='TransformAlarmC_0_set_alarm', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformAlarmC_0_set_alarm', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='now', quals=[], storage=[]
        TypeDecl: declname='now', quals=[]
          IdentifierType: names=['TransformAlarmC_0_to_size_type']
        FuncCall: 
          ID: name='TransformAlarmC_0_Counter_get'
      Decl: name='expires', quals=[], storage=[]
        TypeDecl: declname='expires', quals=[]
          IdentifierType: names=['TransformAlarmC_0_to_size_type']
      Decl: name='remaining', quals=[], storage=[]
        TypeDecl: declname='remaining', quals=[]
          IdentifierType: names=['TransformAlarmC_0_to_size_type']
      Assignment: op='='
        ID: name='expires'
        BinaryOp: op='+'
          ID: name='TransformAlarmC_0_m_t0'
          ID: name='TransformAlarmC_0_m_dt'
      Assignment: op='='
        ID: name='remaining'
        Cast: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['TransformAlarmC_0_to_size_type']
          BinaryOp: op='-'
            ID: name='expires'
            ID: name='now'
      If: 
        BinaryOp: op='<='
          ID: name='TransformAlarmC_0_m_t0'
          ID: name='now'
        Compound: 
          If: 
            BinaryOp: op='&&'
              BinaryOp: op='>='
                ID: name='expires'
                ID: name='TransformAlarmC_0_m_t0'
              BinaryOp: op='<='
                ID: name='expires'
                ID: name='now'
            Compound: 
              Assignment: op='='
                ID: name='remaining'
                Constant: type='int', value='0'
        Compound: 
          If: 
            BinaryOp: op='||'
              BinaryOp: op='>='
                ID: name='expires'
                ID: name='TransformAlarmC_0_m_t0'
              BinaryOp: op='<='
                ID: name='expires'
                ID: name='now'
            Compound: 
              Assignment: op='='
                ID: name='remaining'
                Constant: type='int', value='0'
      If: 
        BinaryOp: op='>'
          ID: name='remaining'
          ID: name='TransformAlarmC_0_MAX_DELAY'
        Compound: 
          Assignment: op='='
            ID: name='TransformAlarmC_0_m_t0'
            BinaryOp: op='+'
              ID: name='now'
              ID: name='TransformAlarmC_0_MAX_DELAY'
          Assignment: op='='
            ID: name='TransformAlarmC_0_m_dt'
            BinaryOp: op='-'
              ID: name='remaining'
              ID: name='TransformAlarmC_0_MAX_DELAY'
          Assignment: op='='
            ID: name='remaining'
            ID: name='TransformAlarmC_0_MAX_DELAY'
        Compound: 
          Assignment: op='+='
            ID: name='TransformAlarmC_0_m_t0'
            ID: name='TransformAlarmC_0_m_dt'
          Assignment: op='='
            ID: name='TransformAlarmC_0_m_dt'
            Constant: type='int', value='0'
      FuncCall: 
        ID: name='TransformAlarmC_0_AlarmFrom_startAt'
        ExprList: 
          BinaryOp: op='<<'
            Cast: 
              Typename: quals=[]
                TypeDecl: declname=None, quals=[]
                  IdentifierType: names=['TransformAlarmC_0_from_size_type']
              ID: name='now'
            Constant: type='int', value='5'
          BinaryOp: op='<<'
            Cast: 
              Typename: quals=[]
                TypeDecl: declname=None, quals=[]
                  IdentifierType: names=['TransformAlarmC_0_from_size_type']
              ID: name='remaining'
            Constant: type='int', value='5'
  FuncDef: 
    Decl: name='TransformCounterC_0_Counter_get', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='TransformCounterC_0_Counter_get', quals=[]
          IdentifierType: names=['TransformCounterC_0_to_size_type']
    Compound: 
      Decl: name='rv', quals=[], storage=[]
        TypeDecl: declname='rv', quals=[]
          IdentifierType: names=['TransformCounterC_0_to_size_type']
        Constant: type='int', value='0'
      Compound: 
        Decl: name='__nesc_atomic', quals=[], storage=[]
          TypeDecl: declname='__nesc_atomic', quals=[]
            IdentifierType: names=['__nesc_atomic_t']
          FuncCall: 
            ID: name='__nesc_atomic_start'
        Compound: 
          Decl: name='high', quals=[], storage=[]
            TypeDecl: declname='high', quals=[]
              IdentifierType: names=['TransformCounterC_0_upper_count_type']
            ID: name='TransformCounterC_0_m_upper'
          Decl: name='low', quals=[], storage=[]
            TypeDecl: declname='low', quals=[]
              IdentifierType: names=['TransformCounterC_0_from_size_type']
            FuncCall: 
              ID: name='TransformCounterC_0_CounterFrom_get'
          If: 
            FuncCall: 
              ID: name='TransformCounterC_0_CounterFrom_isOverflowPending'
            Compound: 
              UnaryOp: op='p++'
                ID: name='high'
              Assignment: op='='
                ID: name='low'
                FuncCall: 
                  ID: name='TransformCounterC_0_CounterFrom_get'
          Compound: 
            Decl: name='high_to', quals=[], storage=[]
              TypeDecl: declname='high_to', quals=[]
                IdentifierType: names=['TransformCounterC_0_to_size_type']
              ID: name='high'
            Decl: name='low_to', quals=[], storage=[]
              TypeDecl: declname='low_to', quals=[]
                IdentifierType: names=['TransformCounterC_0_to_size_type']
              BinaryOp: op='>>'
                ID: name='low'
                ID: name='TransformCounterC_0_LOW_SHIFT_RIGHT'
            Assignment: op='='
              ID: name='rv'
              BinaryOp: op='|'
                BinaryOp: op='<<'
                  ID: name='high_to'
                  ID: name='TransformCounterC_0_HIGH_SHIFT_LEFT'
                ID: name='low_to'
        FuncCall: 
          ID: name='__nesc_atomic_end'
          ExprList: 
            ID: name='__nesc_atomic'
      Return: 
        ID: name='rv'
  FuncDef: 
    Decl: name='Msp430TimerP_1_Timer_get', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='Msp430TimerP_1_Timer_get', quals=[]
          IdentifierType: names=['uint16_t']
    Compound: 
      Return: 
        UnaryOp: op='*'
          Cast: 
            Typename: quals=['volatile']
              PtrDecl: quals=[]
                TypeDecl: declname=None, quals=['volatile']
                  IdentifierType: names=['uint16_t']
            Constant: type='int', value='400U'
  FuncDef: 
    Decl: name='sig_TIMERB1_VECTOR', quals=[], storage=[]
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='sig_TIMERB1_VECTOR', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='Msp430TimerCommonP_VectorTimerB1_fired'
  FuncDef: 
    Decl: name='main', quals=[], storage=[]
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='main', quals=[]
          IdentifierType: names=['int']
    Compound: 
      Compound: 
        Decl: name='__nesc_atomic', quals=[], storage=[]
          TypeDecl: declname='__nesc_atomic', quals=[]
            IdentifierType: names=['__nesc_atomic_t']
          FuncCall: 
            ID: name='__nesc_atomic_start'
        Compound: 
          Compound: 
          FuncCall: 
            ID: name='RealMainP_Scheduler_init'
          FuncCall: 
            ID: name='RealMainP_PlatformInit_init'
          While: 
            FuncCall: 
              ID: name='RealMainP_Scheduler_runNextTask'
          FuncCall: 
            ID: name='RealMainP_SoftwareInit_init'
          While: 
            FuncCall: 
              ID: name='RealMainP_Scheduler_runNextTask'
        FuncCall: 
          ID: name='__nesc_atomic_end'
          ExprList: 
            ID: name='__nesc_atomic'
      FuncCall: 
        ID: name='__nesc_enable_interrupt'
      FuncCall: 
        ID: name='RealMainP_Boot_booted'
      FuncCall: 
        ID: name='RealMainP_Scheduler_taskLoop'
      Return: 
        UnaryOp: op='-'
          Constant: type='int', value='1'
  FuncDef: 
    Decl: name='Msp430ClockP_set_dco_calib', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='calib', quals=[], storage=[]
            TypeDecl: declname='calib', quals=[]
              IdentifierType: names=['int']
        TypeDecl: declname='Msp430ClockP_set_dco_calib', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Assignment: op='='
        ID: name='BCSCTL1'
        BinaryOp: op='|'
          BinaryOp: op='&'
            ID: name='BCSCTL1'
            UnaryOp: op='~'
              Constant: type='int', value='0x07'
          BinaryOp: op='&'
            BinaryOp: op='>>'
              ID: name='calib'
              Constant: type='int', value='8'
            Constant: type='int', value='0x07'
      Assignment: op='='
        ID: name='DCOCTL'
        BinaryOp: op='&'
          ID: name='calib'
          Constant: type='int', value='0xff'
  FuncDef: 
    Decl: name='MotePlatformC_TOSH_FLASH_M25P_DP_bit', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='set', quals=[], storage=[]
            TypeDecl: declname='set', quals=[]
              IdentifierType: names=['bool']
        TypeDecl: declname='MotePlatformC_TOSH_FLASH_M25P_DP_bit', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        ID: name='set'
        Compound: 
          FuncCall: 
            ID: name='TOSH_SET_SIMO0_PIN'
        Compound: 
          FuncCall: 
            ID: name='TOSH_CLR_SIMO0_PIN'
      FuncCall: 
        ID: name='TOSH_SET_UCLK0_PIN'
      FuncCall: 
        ID: name='TOSH_CLR_UCLK0_PIN'
  FuncDef: 
    Decl: name='SchedulerBasicP_Scheduler_runNextTask', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='SchedulerBasicP_Scheduler_runNextTask', quals=[]
          IdentifierType: names=['bool']
    Compound: 
      Decl: name='nextTask', quals=[], storage=[]
        TypeDecl: declname='nextTask', quals=[]
          IdentifierType: names=['uint8_t']
      Compound: 
        Assignment: op='='
          ID: name='nextTask'
          FuncCall: 
            ID: name='SchedulerBasicP_popTask'
        If: 
          BinaryOp: op='=='
            ID: name='nextTask'
            ID: name='SchedulerBasicP_NO_TASK'
          Compound: 
            Compound: 
              Decl: name='__nesc_temp', quals=[], storage=[]
                TypeDecl: declname='__nesc_temp', quals=[]
                  IdentifierType: names=['char', 'unsigned']
                ID: name='FALSE'
              Return: 
                ID: name='__nesc_temp'
      FuncCall: 
        ID: name='SchedulerBasicP_TaskBasic_runTask'
        ExprList: 
          ID: name='nextTask'
      Return: 
        ID: name='TRUE'
  FuncDef: 
    Decl: name='VirtualizeTimerC_0_updateFromTimer_runTask', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='VirtualizeTimerC_0_updateFromTimer_runTask', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='now', quals=[], storage=[]
        TypeDecl: declname='now', quals=[]
          IdentifierType: names=['uint32_t']
        FuncCall: 
          ID: name='VirtualizeTimerC_0_TimerFrom_getNow'
      Decl: name='min_remaining', quals=[], storage=[]
        TypeDecl: declname='min_remaining', quals=[]
          IdentifierType: names=['int32_t']
        BinaryOp: op='-'
          BinaryOp: op='<<'
            Constant: type='int', value='1UL'
            Constant: type='int', value='31'
          Constant: type='int', value='1'
      Decl: name='min_remaining_isset', quals=[], storage=[]
        TypeDecl: declname='min_remaining_isset', quals=[]
          IdentifierType: names=['bool']
        ID: name='FALSE'
      Decl: name='num', quals=[], storage=[]
        TypeDecl: declname='num', quals=[]
          IdentifierType: names=['uint8_t']
      FuncCall: 
        ID: name='VirtualizeTimerC_0_TimerFrom_stop'
      For: 
        Assignment: op='='
          ID: name='num'
          Constant: type='int', value='0'
        BinaryOp: op='<'
          ID: name='num'
          ID: name='VirtualizeTimerC_0_NUM_TIMERS'
        UnaryOp: op='p++'
          ID: name='num'
        Compound: 
          Decl: name='timer', quals=[], storage=[]
            PtrDecl: quals=[]
              TypeDecl: declname='timer', quals=[]
                IdentifierType: names=['VirtualizeTimerC_0_Timer_t']
            UnaryOp: op='&'
              ArrayRef: 
                ID: name='VirtualizeTimerC_0_m_timers'
                ID: name='num'
          If: 
            StructRef: type='->'
              ID: name='timer'
              ID: name='isrunning'
            Compound: 
              Decl: name='elapsed', quals=[], storage=[]
                TypeDecl: declname='elapsed', quals=[]
                  IdentifierType: names=['uint32_t']
                BinaryOp: op='-'
                  ID: name='now'
                  StructRef: type='->'
                    ID: name='timer'
                    ID: name='t0'
              Decl: name='remaining', quals=[], storage=[]
                TypeDecl: declname='remaining', quals=[]
                  IdentifierType: names=['int32_t']
                BinaryOp: op='-'
                  StructRef: type='->'
                    ID: name='timer'
                    ID: name='dt'
                  ID: name='elapsed'
              If: 
                BinaryOp: op='<'
                  ID: name='remaining'
                  ID: name='min_remaining'
                Compound: 
                  Assignment: op='='
                    ID: name='min_remaining'
                    ID: name='remaining'
                  Assignment: op='='
                    ID: name='min_remaining_isset'
                    ID: name='TRUE'
      If: 
        ID: name='min_remaining_isset'
        Compound: 
          If: 
            BinaryOp: op='<='
              ID: name='min_remaining'
              Constant: type='int', value='0'
            Compound: 
              FuncCall: 
                ID: name='VirtualizeTimerC_0_fireTimers'
                ExprList: 
                  ID: name='now'
            Compound: 
              FuncCall: 
                ID: name='VirtualizeTimerC_0_TimerFrom_startOneShotAt'
                ExprList: 
                  ID: name='now'
                  ID: name='min_remaining'
  FuncDef: 
    Decl: name='VirtualizeTimerC_0_fireTimers', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='now', quals=[], storage=[]
            TypeDecl: declname='now', quals=[]
              IdentifierType: names=['uint32_t']
        TypeDecl: declname='VirtualizeTimerC_0_fireTimers', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Decl: name='num', quals=[], storage=[]
        TypeDecl: declname='num', quals=[]
          IdentifierType: names=['uint8_t']
      For: 
        Assignment: op='='
          ID: name='num'
          Constant: type='int', value='0'
        BinaryOp: op='<'
          ID: name='num'
          ID: name='VirtualizeTimerC_0_NUM_TIMERS'
        UnaryOp: op='p++'
          ID: name='num'
        Compound: 
          Decl: name='timer', quals=[], storage=[]
            PtrDecl: quals=[]
              TypeDecl: declname='timer', quals=[]
                IdentifierType: names=['VirtualizeTimerC_0_Timer_t']
            UnaryOp: op='&'
              ArrayRef: 
                ID: name='VirtualizeTimerC_0_m_timers'
                ID: name='num'
          If: 
            StructRef: type='->'
              ID: name='timer'
              ID: name='isrunning'
            Compound: 
              Decl: name='elapsed', quals=[], storage=[]
                TypeDecl: declname='elapsed', quals=[]
                  IdentifierType: names=['uint32_t']
                BinaryOp: op='-'
                  ID: name='now'
                  StructRef: type='->'
                    ID: name='timer'
                    ID: name='t0'
              If: 
                BinaryOp: op='>='
                  ID: name='elapsed'
                  StructRef: type='->'
                    ID: name='timer'
                    ID: name='dt'
                Compound: 
                  If: 
                    StructRef: type='->'
                      ID: name='timer'
                      ID: name='isoneshot'
                    Compound: 
                      Assignment: op='='
                        StructRef: type='->'
                          ID: name='timer'
                          ID: name='isrunning'
                        ID: name='FALSE'
                    Compound: 
                      Assignment: op='+='
                        StructRef: type='->'
                          ID: name='timer'
                          ID: name='t0'
                        StructRef: type='->'
                          ID: name='timer'
                          ID: name='dt'
                  FuncCall: 
                    ID: name='VirtualizeTimerC_0_Timer_fired'
                    ExprList: 
                      ID: name='num'
                  Break: 
      FuncCall: 
        ID: name='VirtualizeTimerC_0_updateFromTimer_postTask'
  FuncDef: 
    Decl: name='TransformAlarmC_0_Alarm_startAt', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='t0', quals=[], storage=[]
            TypeDecl: declname='t0', quals=[]
              IdentifierType: names=['TransformAlarmC_0_to_size_type']
          Decl: name='dt', quals=[], storage=[]
            TypeDecl: declname='dt', quals=[]
              IdentifierType: names=['TransformAlarmC_0_to_size_type']
        TypeDecl: declname='TransformAlarmC_0_Alarm_startAt', quals=[]
          IdentifierType: names=['void']
    Compound: 
      Compound: 
        Decl: name='__nesc_atomic', quals=[], storage=[]
          TypeDecl: declname='__nesc_atomic', quals=[]
            IdentifierType: names=['__nesc_atomic_t']
          FuncCall: 
            ID: name='__nesc_atomic_start'
        Compound: 
          Assignment: op='='
            ID: name='TransformAlarmC_0_m_t0'
            ID: name='t0'
          Assignment: op='='
            ID: name='TransformAlarmC_0_m_dt'
            ID: name='dt'
          FuncCall: 
            ID: name='TransformAlarmC_0_set_alarm'
        FuncCall: 
          ID: name='__nesc_atomic_end'
          ExprList: 
            ID: name='__nesc_atomic'
  FuncDef: 
    Decl: name='AlarmToTimerC_0_fired_runTask', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Typename: quals=[]
            TypeDecl: declname=None, quals=[]
              IdentifierType: names=['void']
        TypeDecl: declname='AlarmToTimerC_0_fired_runTask', quals=[]
          IdentifierType: names=['void']
    Compound: 
      If: 
        BinaryOp: op='=='
          ID: name='AlarmToTimerC_0_m_oneshot'
          ID: name='FALSE'
        Compound: 
          FuncCall: 
            ID: name='AlarmToTimerC_0_start'
            ExprList: 
              FuncCall: 
                ID: name='AlarmToTimerC_0_Alarm_getAlarm'
              ID: name='AlarmToTimerC_0_m_dt'
              ID: name='FALSE'
      FuncCall: 
        ID: name='AlarmToTimerC_0_Timer_fired'
  FuncDef: 
    Decl: name='VirtualizeTimerC_0_Timer_startPeriodic', quals=[], storage=['static']
      FuncDecl: quals=None
        ParamList: 
          Decl: name='num', quals=[], storage=[]
            TypeDecl: declname='num', quals=[]
              IdentifierType: names=['uint8_t']
          Decl: name='dt', quals=[], storage=[]
            TypeDecl: declname='dt', quals=[]
              IdentifierType: names=['uint32_t']
        TypeDecl: declname='VirtualizeTimerC_0_Timer_startPeriodic', quals=[]
          IdentifierType: names=['void']
    Compound: 
      FuncCall: 
        ID: name='VirtualizeTimerC_0_startTimer'
        ExprList: 
          ID: name='num'
          FuncCall: 
            ID: name='VirtualizeTimerC_0_TimerFrom_getNow'
          ID: name='dt'
          ID: name='FALSE'
--------------------------------------------------------------------------------
Reach (248):
set(['LedsP_Led1_set', 'TransformAlarmC_0_set_alarm', 'TransformCounterC_0_Counter_overflow', 'CounterToLocalTimeC_0_Counter_overflow', 'AlarmToTimerC_0_Alarm_startAt', 'Msp430TimerCapComP_3_Event_fired', 'Msp430ClockP_Msp430ClockInit_initTimerA', 'Msp430ClockP_Msp430ClockInit_initTimerB', 'Msp430GpioC_0_GeneralIO_makeOutput', 'BlinkC_Leds_led0Toggle', 'LedsP_Leds_led2Toggle', 'Msp430TimerP_1_Overflow_fired', 'Msp430TimerP_1_Event_fired', 'Msp430AlarmC_0_Msp430Timer_overflow', 'TOSH_MAKE_SIMO0_OUTPUT', 'SchedulerBasicP_isWaiting', 'Msp430TimerP_1_Timer_get', 'Msp430TimerCapComP_3_Capture_captured', 'Msp430GpioC_1_GeneralIO_set', 'MotePlatformC_TOSH_FLASH_M25P_DP', 'Msp430TimerCapComP_6_Capture_default_captured', 'LedsP_Led1_toggle', 'BlinkC_Timer0_startPeriodic', 'HplMsp430GeneralIOP_38_IO_toggle', 'Msp430GpioC_1_GeneralIO_makeOutput', 'AlarmToTimerC_0_start', 'AlarmToTimerC_0_Timer_getNow', 'HplMsp430GeneralIOP_37_IO_makeOutput', 'VirtualizeTimerC_0_fireTimers', 'main', 'Msp430TimerCapComP_6_Timer_overflow', 'AlarmToTimerC_0_Alarm_fired', 'Msp430TimerCapComP_4_Timer_overflow', 'RealMainP_Scheduler_runNextTask', 'Msp430TimerCapComP_5_int2CC', 'HplMsp430GeneralIOP_36_IO_makeOutput', 'SchedulerBasicP_McuSleep_sleep', 'LedsP_Led2_makeOutput', 'RealMainP_PlatformInit_init', 'TransformAlarmC_0_Alarm_fired', 'Msp430TimerP_1_Timer_overflow', 'mcombine', 'TransformCounterC_0_Counter_get', 'AlarmToTimerC_0_Alarm_getNow', 'BlinkC_Timer1_startPeriodic', 'Msp430TimerCapComP_7_Capture_default_captured', 'VirtualizeTimerC_0_TimerFrom_fired', 'Msp430TimerCapComP_3_int2CC', 'Msp430TimerCapComP_5_Compare_default_fired', 'Msp430TimerCapComP_3_compareControl', 'BlinkC_Timer0_fired', 'VirtualizeTimerC_0_TimerFrom_startOneShotAt', 'Msp430GpioC_0_GeneralIO_toggle', 'BlinkC_Timer1_fired', 'Msp430TimerCapComP_7_Event_fired', 'TransformAlarmC_0_Counter_overflow', 'PlatformP_MoteClockInit_init', 'McuSleepC_McuPowerOverride_lowestState', 'TOSH_CLR_FLASH_CS_PIN', 'TOSH_SET_FLASH_CS_PIN', 'Msp430TimerCapComP_6_Capture_captured', 'Msp430TimerCapComP_9_Capture_default_captured', 'TransformAlarmC_0_AlarmFrom_fired', 'Msp430TimerP_1_Event_default_fired', 'AlarmToTimerC_0_Alarm_getAlarm', 'Msp430TimerCapComP_3_Capture_getEvent', 'memset', 'Msp430CounterC_0_Counter_overflow', 'TOSH_MAKE_FLASH_CS_OUTPUT', 'Msp430TimerCapComP_9_Event_fired', 'Msp430TimerP_1_Timer_isOverflowPending', 'Msp430TimerCapComP_4_Capture_default_captured', 'Msp430TimerCapComP_4_Event_fired', 'Msp430TimerCapComP_6_int2CC', 'AlarmToTimerC_0_fired_runTask', 'Msp430TimerCapComP_7_Capture_captured', 'Msp430TimerCapComP_3_Control_enableEvents', 'TOSH_CLR_UCLK0_PIN', 'Msp430CounterC_0_Counter_isOverflowPending', 'TOSH_CLR_SIMO0_PIN', 'LedsP_Leds_led1Toggle', 'Msp430GpioC_0_HplGeneralIO_set', 'SchedulerBasicP_Scheduler_runNextTask', 'TOSH_SET_UCLK0_PIN', 'Msp430TimerCapComP_8_Capture_captured', 'HplMsp430GeneralIOP_37_IO_toggle', 'SchedulerBasicP_pushTask', 'VirtualizeTimerC_0_updateFromTimer_postTask', 'Msp430GpioC_1_HplGeneralIO_set', 'Msp430TimerCapComP_3_Compare_setEventFromNow', 'Msp430ClockP_Msp430ClockInit_defaultInitTimerB', 'TransformCounterC_0_CounterFrom_get', 'Msp430AlarmC_0_Alarm_stop', 'Msp430ClockP_Msp430ClockInit_defaultInitTimerA', 'HplMsp430GeneralIOP_38_IO_makeOutput', 'Msp430TimerCapComP_5_Event_fired', 'Msp430AlarmC_0_Msp430TimerControl_setControlAsCompare', 'SchedulerBasicP_TaskBasic_runTask', 'VirtualizeTimerC_0_TimerFrom_stop', 'VirtualizeTimerC_0_TimerFrom_getNow', 'Msp430TimerCapComP_8_Timer_overflow', 'Msp430TimerCapComP_4_Compare_fired', 'SchedulerBasicP_Scheduler_taskLoop', 'Msp430TimerCapComP_3_Control_getControl', 'sig_TIMERB0_VECTOR', '__nesc_disable_interrupt', 'Msp430TimerCapComP_9_Capture_getEvent', 'Msp430TimerCapComP_3_Capture_default_captured', 'Msp430ClockP_Init_init', 'BlinkC_Leds_led2Toggle', 'SchedulerBasicP_popTask', 'BlinkC_Boot_booted', 'Msp430AlarmC_0_Alarm_fired', 'TransformAlarmC_0_AlarmFrom_stop', 'Msp430TimerCommonP_VectorTimerB0_fired', 'Msp430TimerCapComP_6_Compare_default_fired', 'Msp430TimerCapComP_3_Control_disableEvents', 'Msp430TimerCapComP_3_CC2int', 'Msp430GpioC_1_GeneralIO_toggle', 'LedsP_Led2_set', 'LedsP_Led0_toggle', '__nesc_enable_interrupt', 'Msp430ClockP_startTimerB', 'Msp430ClockP_startTimerA', 'Msp430GpioC_2_GeneralIO_makeOutput', 'Msp430TimerCapComP_5_Capture_default_captured', 'Msp430TimerCapComP_3_Timer_get', 'TOSH_MAKE_FLASH_HOLD_OUTPUT', 'Msp430CounterC_0_Msp430Timer_overflow', 'TransformAlarmC_0_Alarm_getNow', 'Msp430TimerCapComP_8_Compare_default_fired', 'Msp430AlarmC_0_Msp430Compare_setEventFromNow', 'Msp430TimerCapComP_8_Compare_fired', 'VirtualizeTimerC_0_Timer_default_fired', 'Msp430AlarmC_0_Msp430Compare_fired', 'Msp430AlarmC_0_Msp430TimerControl_disableEvents', 'Msp430TimerCapComP_8_Event_fired', 'Msp430TimerP_1_VectorTimerX0_fired', 'Msp430TimerCapComP_8_Capture_default_captured', '__nesc_atomic_end', 'Msp430TimerCapComP_3_Control_clearPendingInterrupt', 'Msp430GpioC_0_HplGeneralIO_toggle', 'MotePlatformC_Init_init', 'AlarmToTimerC_0_Alarm_stop', 'Msp430TimerCapComP_6_Control_getControl', 'Msp430AlarmC_0_Msp430TimerControl_enableEvents', 'TransformAlarmC_0_AlarmFrom_startAt', 'VirtualizeTimerC_0_updateFromTimer_runTask', 'Msp430GpioC_1_HplGeneralIO_toggle', 'BlinkC_Timer2_fired', 'LedsP_Leds_led0Toggle', 'MotePlatformC_TOSH_wait', 'Msp430TimerCapComP_9_Compare_default_fired', 'Msp430TimerCapComP_4_Compare_default_fired', 'AlarmToTimerC_0_Timer_startOneShotAt', 'Msp430TimerCapComP_7_Capture_getEvent', 'Msp430CounterC_0_Msp430Timer_get', 'TOSH_SET_FLASH_HOLD_PIN', 'SchedulerBasicP_TaskBasic_default_runTask', 'Msp430TimerCapComP_5_Control_getControl', 'Msp430TimerCapComP_7_int2CC', 'Msp430GpioC_0_HplGeneralIO_makeOutput', 'Msp430TimerCapComP_7_Compare_default_fired', 'Msp430ClockP_Msp430ClockInit_default_initTimerB', 'PlatformP_Init_init', 'Msp430ClockP_Msp430ClockInit_default_initTimerA', 'RealMainP_Boot_booted', 'Msp430TimerCapComP_5_Capture_captured', 'Msp430TimerCapComP_3_Compare_setEvent', 'VirtualizeTimerC_0_Timer_startPeriodic', 'PlatformP_MoteInit_init', 'Msp430CounterC_0_Msp430Timer_isOverflowPending', 'VirtualizeTimerC_0_Timer_fired', 'TransformCounterC_0_CounterFrom_overflow', 'Msp430TimerCapComP_3_Timer_overflow', 'Msp430AlarmC_0_Msp430Timer_get', 'Msp430GpioC_0_GeneralIO_set', 'Msp430TimerCapComP_9_Capture_captured', 'TransformAlarmC_0_Counter_get', 'LedsP_Led0_set', 'LedsP_Led1_makeOutput', 'McuSleepC_computePowerState', 'HplMsp430GeneralIOP_37_IO_set', 'Msp430AlarmC_0_Alarm_startAt', 'Msp430GpioC_2_GeneralIO_set', 'Msp430TimerCapComP_4_Capture_captured', 'Msp430TimerCapComP_3_Compare_fired', 'Msp430GpioC_2_HplGeneralIO_set', 'Msp430TimerCapComP_8_Control_getControl', 'Msp430TimerCapComP_7_Timer_overflow', 'HplMsp430GeneralIOP_38_IO_set', 'Msp430AlarmC_0_Msp430TimerControl_clearPendingInterrupt', 'Msp430ClockP_Msp430ClockInit_defaultInitClocks', 'PlatformP_LedsInit_init', 'HplMsp430GeneralIOP_36_IO_set', 'Msp430AlarmC_0_Msp430Compare_setEvent', 'Msp430TimerCapComP_7_Compare_fired', 'Msp430TimerCapComP_9_Control_getControl', 'BlinkC_Timer2_startPeriodic', '__nesc_atomic_start', 'TOSH_SET_SIMO0_PIN', 'Msp430AlarmC_0_Init_init', 'SchedulerBasicP_TaskBasic_postTask', 'Msp430ClockP_Msp430ClockInit_default_initClocks', 'LedsP_Led2_toggle', 'TOSH_MAKE_UCLK0_OUTPUT', 'Msp430TimerCapComP_4_Capture_getEvent', 'TransformAlarmC_0_Alarm_stop', 'AlarmToTimerC_0_Timer_stop', 'RealMainP_Scheduler_taskLoop', 'Msp430TimerCapComP_3_Control_setControlAsCompare', 'McuSleepC_McuPowerOverride_default_lowestState', 'MotePlatformC_TOSH_FLASH_M25P_DP_bit', 'HplMsp430GeneralIOP_36_IO_toggle', 'McuSleepC_getPowerState', 'BlinkC_Leds_led1Toggle', 'Msp430GpioC_2_HplGeneralIO_makeOutput', 'Msp430TimerCapComP_7_Control_getControl', 'McuSleepC_McuSleep_sleep', 'AlarmToTimerC_0_Timer_fired', 'TransformAlarmC_0_Alarm_startAt', 'RealMainP_SoftwareInit_init', 'Msp430TimerCapComP_6_Event_fired', 'Msp430GpioC_1_HplGeneralIO_makeOutput', 'SchedulerBasicP_Scheduler_init', 'Msp430CounterC_0_Counter_get', 'Msp430TimerCapComP_5_Compare_fired', 'Msp430TimerCapComP_9_Timer_overflow', 'Msp430GpioC_2_HplGeneralIO_toggle', 'TransformAlarmC_0_Alarm_getAlarm', 'Msp430TimerCapComP_4_int2CC', 'TransformCounterC_0_CounterFrom_isOverflowPending', 'Msp430TimerCapComP_4_Control_getControl', 'Msp430GpioC_2_GeneralIO_toggle', 'Msp430ClockP_Msp430ClockInit_initClocks', 'Msp430TimerCapComP_6_Compare_fired', 'LedsP_Init_init', 'Msp430TimerCapComP_9_Compare_fired', 'VirtualizeTimerC_0_startTimer', 'Msp430TimerCapComP_9_int2CC', 'Msp430TimerCapComP_8_int2CC', 'RealMainP_Scheduler_init', 'Msp430TimerCapComP_8_Capture_getEvent', 'Msp430TimerCapComP_5_Timer_overflow', 'AlarmToTimerC_0_fired_postTask', 'LedsP_Led0_makeOutput', 'Msp430TimerCapComP_6_Capture_getEvent', 'Msp430TimerCapComP_5_Capture_getEvent'])

Thread reach: (166):
set(['LedsP_Led1_set', 'TransformAlarmC_0_set_alarm', 'AlarmToTimerC_0_Alarm_startAt', 'Msp430ClockP_Msp430ClockInit_initTimerA', 'Msp430ClockP_Msp430ClockInit_initTimerB', 'Msp430GpioC_0_GeneralIO_makeOutput', 'BlinkC_Leds_led0Toggle', 'LedsP_Leds_led2Toggle', 'HplMsp430GeneralIOP_38_IO_makeOutput', 'Msp430TimerCapComP_3_Control_enableEvents', 'TOSH_MAKE_SIMO0_OUTPUT', 'SchedulerBasicP_isWaiting', 'Msp430TimerP_1_Timer_get', 'MotePlatformC_TOSH_FLASH_M25P_DP', 'LedsP_Led1_toggle', 'BlinkC_Timer0_startPeriodic', 'HplMsp430GeneralIOP_38_IO_toggle', 'HplMsp430GeneralIOP_37_IO_toggle', 'AlarmToTimerC_0_start', 'AlarmToTimerC_0_Timer_getNow', 'HplMsp430GeneralIOP_37_IO_makeOutput', 'VirtualizeTimerC_0_fireTimers', 'main', 'RealMainP_Scheduler_runNextTask', 'HplMsp430GeneralIOP_36_IO_makeOutput', 'SchedulerBasicP_McuSleep_sleep', 'LedsP_Led2_makeOutput', 'RealMainP_PlatformInit_init', 'mcombine', 'TransformCounterC_0_Counter_get', 'AlarmToTimerC_0_Alarm_getNow', 'BlinkC_Timer1_startPeriodic', 'VirtualizeTimerC_0_TimerFrom_fired', 'Msp430TimerCapComP_3_compareControl', 'BlinkC_Timer0_fired', 'VirtualizeTimerC_0_TimerFrom_startOneShotAt', 'Msp430GpioC_0_GeneralIO_toggle', 'BlinkC_Timer1_fired', 'PlatformP_MoteClockInit_init', 'McuSleepC_McuPowerOverride_lowestState', 'TOSH_CLR_FLASH_CS_PIN', 'AlarmToTimerC_0_Alarm_getAlarm', 'memset', 'TOSH_MAKE_FLASH_CS_OUTPUT', 'Msp430TimerP_1_Timer_isOverflowPending', '__nesc_disable_interrupt', 'TOSH_CLR_UCLK0_PIN', 'Msp430CounterC_0_Counter_isOverflowPending', 'Msp430GpioC_0_HplGeneralIO_set', 'SchedulerBasicP_Scheduler_runNextTask', 'TOSH_SET_UCLK0_PIN', 'LedsP_Led1_makeOutput', 'LedsP_Leds_led1Toggle', 'VirtualizeTimerC_0_updateFromTimer_postTask', 'Msp430GpioC_1_HplGeneralIO_set', 'Msp430TimerCapComP_3_Compare_setEventFromNow', 'Msp430ClockP_Msp430ClockInit_defaultInitTimerB', 'TransformCounterC_0_CounterFrom_get', 'Msp430AlarmC_0_Alarm_stop', 'Msp430ClockP_Msp430ClockInit_defaultInitTimerA', 'McuSleepC_getPowerState', 'Msp430AlarmC_0_Msp430TimerControl_setControlAsCompare', 'SchedulerBasicP_TaskBasic_runTask', 'VirtualizeTimerC_0_TimerFrom_stop', 'VirtualizeTimerC_0_TimerFrom_getNow', 'SchedulerBasicP_Scheduler_taskLoop', 'Msp430CounterC_0_Msp430Timer_isOverflowPending', 'Msp430ClockP_Init_init', 'BlinkC_Leds_led2Toggle', 'SchedulerBasicP_popTask', 'BlinkC_Boot_booted', 'TransformAlarmC_0_AlarmFrom_stop', 'Msp430TimerCapComP_3_Control_disableEvents', 'Msp430TimerCapComP_3_CC2int', 'Msp430GpioC_1_GeneralIO_toggle', 'LedsP_Led2_set', 'LedsP_Led0_toggle', '__nesc_enable_interrupt', 'Msp430ClockP_startTimerB', 'Msp430ClockP_startTimerA', 'Msp430GpioC_2_GeneralIO_makeOutput', 'TOSH_MAKE_FLASH_HOLD_OUTPUT', 'TransformAlarmC_0_Alarm_getNow', 'Msp430AlarmC_0_Msp430Compare_setEventFromNow', 'VirtualizeTimerC_0_Timer_default_fired', 'Msp430AlarmC_0_Msp430TimerControl_disableEvents', 'SchedulerBasicP_pushTask', '__nesc_atomic_end', 'Msp430TimerCapComP_3_Control_clearPendingInterrupt', 'Msp430GpioC_0_HplGeneralIO_toggle', 'MotePlatformC_Init_init', 'AlarmToTimerC_0_Alarm_stop', 'Msp430AlarmC_0_Msp430TimerControl_enableEvents', 'TransformAlarmC_0_AlarmFrom_startAt', 'VirtualizeTimerC_0_updateFromTimer_runTask', 'Msp430GpioC_1_HplGeneralIO_toggle', 'BlinkC_Timer2_fired', 'LedsP_Leds_led0Toggle', 'Msp430GpioC_2_GeneralIO_set', 'Msp430GpioC_0_HplGeneralIO_makeOutput', 'AlarmToTimerC_0_Timer_startOneShotAt', 'Msp430CounterC_0_Msp430Timer_get', 'TOSH_SET_FLASH_HOLD_PIN', 'SchedulerBasicP_TaskBasic_default_runTask', 'Msp430GpioC_2_GeneralIO_toggle', 'Msp430ClockP_Msp430ClockInit_default_initTimerB', 'PlatformP_Init_init', 'Msp430ClockP_Msp430ClockInit_default_initTimerA', 'RealMainP_Boot_booted', 'Msp430GpioC_1_GeneralIO_makeOutput', 'Msp430TimerCapComP_3_Compare_setEvent', 'VirtualizeTimerC_0_Timer_startPeriodic', 'PlatformP_MoteInit_init', 'VirtualizeTimerC_0_Timer_fired', 'Msp430AlarmC_0_Msp430Timer_get', 'Msp430GpioC_0_GeneralIO_set', 'TransformAlarmC_0_Counter_get', 'LedsP_Led0_set', 'Msp430GpioC_1_GeneralIO_set', 'McuSleepC_computePowerState', 'HplMsp430GeneralIOP_37_IO_set', 'Msp430AlarmC_0_Alarm_startAt', 'MotePlatformC_TOSH_wait', 'Msp430GpioC_2_HplGeneralIO_set', 'HplMsp430GeneralIOP_38_IO_set', 'Msp430AlarmC_0_Msp430TimerControl_clearPendingInterrupt', 'Msp430ClockP_Msp430ClockInit_defaultInitClocks', 'PlatformP_LedsInit_init', 'HplMsp430GeneralIOP_36_IO_set', 'Msp430AlarmC_0_Msp430Compare_setEvent', 'Msp430TimerCapComP_3_Timer_get', 'BlinkC_Timer2_startPeriodic', '__nesc_atomic_start', 'TOSH_SET_SIMO0_PIN', 'Msp430AlarmC_0_Init_init', 'SchedulerBasicP_TaskBasic_postTask', 'Msp430ClockP_Msp430ClockInit_default_initClocks', 'LedsP_Led2_toggle', 'TransformAlarmC_0_Alarm_getAlarm', 'TransformAlarmC_0_Alarm_stop', 'AlarmToTimerC_0_Timer_stop', 'RealMainP_Scheduler_taskLoop', 'Msp430TimerCapComP_3_Control_setControlAsCompare', 'McuSleepC_McuPowerOverride_default_lowestState', 'MotePlatformC_TOSH_FLASH_M25P_DP_bit', 'HplMsp430GeneralIOP_36_IO_toggle', 'BlinkC_Leds_led1Toggle', 'Msp430GpioC_2_HplGeneralIO_makeOutput', 'TOSH_SET_FLASH_CS_PIN', 'McuSleepC_McuSleep_sleep', 'AlarmToTimerC_0_Timer_fired', 'TransformAlarmC_0_Alarm_startAt', 'RealMainP_SoftwareInit_init', 'Msp430GpioC_1_HplGeneralIO_makeOutput', 'SchedulerBasicP_Scheduler_init', 'Msp430CounterC_0_Counter_get', 'AlarmToTimerC_0_fired_runTask', 'Msp430GpioC_2_HplGeneralIO_toggle', 'TOSH_MAKE_UCLK0_OUTPUT', 'TransformCounterC_0_CounterFrom_isOverflowPending', 'Msp430ClockP_Msp430ClockInit_initClocks', 'LedsP_Init_init', 'VirtualizeTimerC_0_startTimer', 'TOSH_CLR_SIMO0_PIN', 'RealMainP_Scheduler_init', 'LedsP_Led0_makeOutput'])

Thread reach: (114):
set(['TransformAlarmC_0_set_alarm', 'TransformCounterC_0_Counter_overflow', 'CounterToLocalTimeC_0_Counter_overflow', 'Msp430TimerCapComP_3_Event_fired', 'Msp430TimerP_1_Overflow_fired', 'Msp430TimerP_1_Event_fired', 'Msp430AlarmC_0_Msp430Timer_overflow', 'SchedulerBasicP_isWaiting', 'Msp430TimerP_1_Timer_get', 'Msp430TimerCapComP_3_Capture_captured', 'Msp430TimerCapComP_6_Capture_default_captured', 'Msp430CounterC_0_Msp430Timer_get', 'Msp430TimerCapComP_6_Timer_overflow', 'AlarmToTimerC_0_Alarm_fired', 'Msp430TimerCapComP_7_Timer_overflow', 'Msp430TimerCapComP_5_int2CC', 'Msp430TimerCapComP_8_Capture_getEvent', 'TransformAlarmC_0_Alarm_fired', 'Msp430TimerP_1_Timer_overflow', 'TransformCounterC_0_Counter_get', 'Msp430TimerCapComP_7_Capture_default_captured', 'Msp430TimerCapComP_3_int2CC', 'Msp430TimerCapComP_5_Compare_default_fired', 'Msp430TimerCapComP_4_Capture_default_captured', 'TransformAlarmC_0_Counter_overflow', 'Msp430TimerCapComP_6_Capture_captured', 'Msp430TimerCapComP_9_Capture_default_captured', 'TransformAlarmC_0_AlarmFrom_fired', 'Msp430TimerP_1_Event_default_fired', 'Msp430TimerCapComP_3_Capture_getEvent', 'Msp430TimerCapComP_9_Event_fired', 'Msp430TimerP_1_Timer_isOverflowPending', 'Msp430TimerCapComP_7_Event_fired', 'Msp430TimerCapComP_4_Event_fired', 'Msp430TimerCapComP_6_int2CC', 'Msp430TimerCapComP_5_Compare_fired', 'Msp430TimerCapComP_7_Capture_captured', 'Msp430CounterC_0_Counter_isOverflowPending', 'TransformAlarmC_0_AlarmFrom_startAt', 'Msp430TimerCapComP_8_Capture_captured', 'Msp430TimerCapComP_3_Control_enableEvents', 'Msp430TimerCapComP_3_Compare_setEventFromNow', 'TransformCounterC_0_CounterFrom_get', 'SchedulerBasicP_pushTask', 'Msp430TimerCapComP_8_Timer_overflow', 'Msp430TimerCapComP_4_Compare_fired', 'Msp430TimerCapComP_3_Control_getControl', 'sig_TIMERB0_VECTOR', '__nesc_disable_interrupt', 'Msp430TimerCapComP_9_Capture_getEvent', 'Msp430TimerCapComP_3_Capture_default_captured', 'Msp430TimerCapComP_9_Control_getControl', 'Msp430AlarmC_0_Alarm_fired', 'Msp430TimerCommonP_VectorTimerB0_fired', 'Msp430TimerCapComP_3_Control_disableEvents', 'Msp430TimerCapComP_4_int2CC', '__nesc_enable_interrupt', 'Msp430TimerCapComP_8_int2CC', 'AlarmToTimerC_0_fired_postTask', 'Msp430TimerCapComP_5_Capture_default_captured', 'Msp430CounterC_0_Msp430Timer_overflow', 'Msp430TimerCapComP_8_Compare_default_fired', 'Msp430AlarmC_0_Msp430Compare_setEventFromNow', 'Msp430TimerCapComP_8_Compare_fired', 'Msp430AlarmC_0_Msp430Compare_fired', 'Msp430AlarmC_0_Msp430TimerControl_disableEvents', 'Msp430TimerCapComP_8_Event_fired', 'Msp430TimerP_1_VectorTimerX0_fired', 'Msp430TimerCapComP_8_Capture_default_captured', '__nesc_atomic_end', 'Msp430TimerCapComP_3_Control_clearPendingInterrupt', 'Msp430TimerCapComP_6_Control_getControl', 'Msp430AlarmC_0_Msp430TimerControl_enableEvents', 'Msp430TimerCapComP_7_Capture_getEvent', 'Msp430TimerCapComP_9_Compare_default_fired', 'Msp430TimerCapComP_4_Compare_default_fired', 'Msp430TimerCapComP_5_Control_getControl', 'Msp430TimerCapComP_7_int2CC', 'Msp430TimerCapComP_7_Compare_default_fired', 'Msp430TimerCapComP_5_Capture_captured', 'Msp430TimerCapComP_3_Compare_setEvent', 'Msp430CounterC_0_Msp430Timer_isOverflowPending', 'TransformCounterC_0_CounterFrom_overflow', 'Msp430TimerCapComP_3_Timer_overflow', 'Msp430AlarmC_0_Msp430Timer_get', 'Msp430TimerCapComP_4_Timer_overflow', 'Msp430TimerCapComP_9_Capture_captured', 'TransformAlarmC_0_Counter_get', 'Msp430AlarmC_0_Alarm_startAt', 'Msp430TimerCapComP_4_Capture_captured', 'Msp430TimerCapComP_3_Compare_fired', 'Msp430TimerCapComP_8_Control_getControl', 'Msp430AlarmC_0_Msp430TimerControl_clearPendingInterrupt', 'Msp430AlarmC_0_Msp430Compare_setEvent', 'Msp430TimerCapComP_7_Compare_fired', 'Msp430TimerCapComP_3_Timer_get', '__nesc_atomic_start', 'SchedulerBasicP_TaskBasic_postTask', 'Msp430TimerCapComP_4_Capture_getEvent', 'Msp430TimerCapComP_7_Control_getControl', 'Msp430CounterC_0_Counter_overflow', 'Msp430TimerCapComP_6_Event_fired', 'Msp430CounterC_0_Counter_get', 'Msp430TimerCapComP_5_Event_fired', 'Msp430TimerCapComP_9_Timer_overflow', 'Msp430TimerCapComP_6_Compare_default_fired', 'TransformCounterC_0_CounterFrom_isOverflowPending', 'Msp430TimerCapComP_4_Control_getControl', 'Msp430TimerCapComP_6_Compare_fired', 'Msp430TimerCapComP_9_Compare_fired', 'Msp430TimerCapComP_9_int2CC', 'Msp430TimerCapComP_5_Timer_overflow', 'Msp430TimerCapComP_6_Capture_getEvent', 'Msp430TimerCapComP_5_Capture_getEvent'])

Dead functions (47):
set(['Msp430TimerP_0_VectorTimerX0_fired', 'Msp430TimerP_0_Overflow_fired', 'Msp430ClockP_Msp430ClockInit_default_setupDcoCalibrate', 'Msp430TimerCapComP_2_Capture_captured', 'Msp430TimerCapComP_2_Compare_fired', 'Msp430TimerCapComP_2_Capture_getEvent', 'Msp430TimerCapComP_2_Event_fired', 'Msp430TimerCapComP_2_Control_getControl', 'Msp430TimerCommonP_VectorTimerA1_fired', 'Msp430TimerCapComP_2_Compare_default_fired', 'sig_TIMERA1_VECTOR', 'Msp430ClockP_Msp430ClockInit_defaultSetupDcoCalibrate', 'Msp430TimerCapComP_2_int2CC', 'Msp430ClockP_test_calib_busywait_delta', 'sig_TIMERB1_VECTOR', 'Msp430ClockP_Msp430ClockInit_setupDcoCalibrate', 'Msp430TimerP_0_Event_default_fired', 'Msp430TimerCommonP_VectorTimerA0_fired', 'Msp430TimerCapComP_1_Event_fired', 'Msp430TimerCapComP_0_Capture_getEvent', 'Msp430TimerCapComP_0_Control_getControl', 'Msp430TimerP_0_Event_fired', 'Msp430TimerCapComP_1_Capture_captured', 'Msp430TimerCapComP_0_Timer_overflow', 'Msp430TimerP_0_Timer_overflow', 'Msp430TimerCapComP_1_Control_getControl', 'MotePlatformC_uwait', 'Msp430TimerCapComP_1_Capture_getEvent', 'Msp430TimerCapComP_0_int2CC', 'Msp430ClockP_busyCalibrateDco', 'Msp430TimerCapComP_1_Capture_default_captured', 'Msp430TimerCapComP_0_Compare_fired', 'Msp430TimerCommonP_VectorTimerB1_fired', 'Msp430TimerCapComP_2_Timer_overflow', 'Msp430TimerCapComP_1_Compare_default_fired', 'sig_TIMERA0_VECTOR', 'Msp430TimerP_1_VectorTimerX1_fired', 'Msp430TimerCapComP_0_Compare_default_fired', 'Msp430TimerCapComP_1_Timer_overflow', 'Msp430TimerP_0_VectorTimerX1_fired', 'Msp430TimerCapComP_1_Compare_fired', 'Msp430ClockP_set_dco_calib', 'Msp430TimerCapComP_1_int2CC', 'Msp430TimerCapComP_2_Capture_default_captured', 'Msp430TimerCapComP_0_Event_fired', 'Msp430TimerCapComP_0_Capture_captured', 'Msp430TimerCapComP_0_Capture_default_captured'])
--------------------------------------------------------------------------------
Global variables (57):
set(['P1OUT', 'P3OUT', 'P4OUT', 'Msp430ClockP_TA0IV', 'TBCCR0', 'VirtualizeTimerC_0_m_timers', 'BCSCTL1', 'TA0R', 'ME1', 'P1SEL', 'P6OUT', 'AlarmToTimerC_0_m_dt', 'P3DIR', 'P1IE', 'I2CTCTLnr', 'Msp430ClockP_TBCTL', 'U0CTLnr', 'P2IE', 'P5OUT', 'TBCCTL0', 'BCSCTL2', 'P6DIR', 'U1TCTL', 'TransformCounterC_0_m_upper', 'P4SEL', 'P1DIR', 'McuSleepC_dirty', 'TA0CTL', 'U0TCTL', 'SchedulerBasicP_m_tail', 'McuSleepC_powerState', 'SchedulerBasicP_m_next', 'ADC12CTL1', 'ADC12CTL0', 'Msp430ClockP_TBIV', 'P6SEL', 'P2DIR', 'Msp430ClockP_TA0CTL', 'TA0CCTL2', 'TA0CCTL1', 'TA0CCTL0', 'P4DIR', 'P2SEL', 'P3SEL', 'TBR', 'McuSleepC_msp430PowerBits', 'P5DIR', 'ME2', 'TransformAlarmC_0_m_t0', 'I2CDCTLnr', 'AlarmToTimerC_0_m_oneshot', 'SchedulerBasicP_m_head', 'Msp430ClockP_IE1', 'P5SEL', 'P2OUT', 'TransformAlarmC_0_m_dt', 'DCOCTL'])

Data accesses (read) (15):
{'McuSleepC_McuSleep_sleep': set(['McuSleepC_powerState', 'McuSleepC_msp430PowerBits']), 'TransformAlarmC_0_Alarm_getAlarm': set(['TransformAlarmC_0_m_t0', 'TransformAlarmC_0_m_dt']), 'SchedulerBasicP_isWaiting': set(['SchedulerBasicP_m_tail', 'SchedulerBasicP_m_next']), 'VirtualizeTimerC_0_startTimer': set(['VirtualizeTimerC_0_m_timers']), 'Msp430ClockP_Msp430ClockInit_defaultInitClocks': set(['BCSCTL1']), 'TransformAlarmC_0_set_alarm': set(['TransformAlarmC_0_m_t0', 'TransformCounterC_0_m_upper', 'TransformAlarmC_0_m_dt', 'SchedulerBasicP_m_tail', 'SchedulerBasicP_m_next']), 'SchedulerBasicP_popTask': set(['TransformCounterC_0_m_upper', 'BCSCTL1', 'Msp430ClockP_TBCTL', 'TransformAlarmC_0_m_t0', 'McuSleepC_msp430PowerBits', 'VirtualizeTimerC_0_m_timers', 'SchedulerBasicP_m_tail', 'McuSleepC_powerState', 'SchedulerBasicP_m_next', 'SchedulerBasicP_m_head', 'TransformAlarmC_0_m_dt', 'Msp430ClockP_TA0CTL']), 'Msp430ClockP_set_dco_calib': set(['BCSCTL1']), 'VirtualizeTimerC_0_updateFromTimer_runTask': set(['VirtualizeTimerC_0_m_timers']), 'TransformCounterC_0_Counter_get': set(['TransformCounterC_0_m_upper']), 'VirtualizeTimerC_0_fireTimers': set(['VirtualizeTimerC_0_m_timers']), 'Msp430ClockP_test_calib_busywait_delta': set(['TBR', 'TA0R', 'TBCCTL0']), 'Msp430ClockP_startTimerB': set(['Msp430ClockP_TBCTL']), 'Msp430ClockP_startTimerA': set(['Msp430ClockP_TA0CTL']), 'MotePlatformC_uwait': set(['TA0R'])}

Data accesses (write) (17):
{'SchedulerBasicP_pushTask': set(['SchedulerBasicP_m_head', 'SchedulerBasicP_m_tail', 'SchedulerBasicP_m_next']), 'Msp430ClockP_Msp430ClockInit_defaultInitTimerB': set(['TBR', 'Msp430ClockP_TBCTL']), 'Msp430ClockP_Msp430ClockInit_defaultInitTimerA': set(['TA0R', 'Msp430ClockP_TA0CTL']), 'TransformAlarmC_0_set_alarm': set(['TransformAlarmC_0_m_t0', 'SchedulerBasicP_m_head', 'TransformAlarmC_0_m_dt', 'SchedulerBasicP_m_tail', 'SchedulerBasicP_m_next']), 'SchedulerBasicP_Scheduler_init': set(['P4SEL', 'P1OUT', 'P1DIR', 'P3OUT', 'P4OUT', 'Msp430ClockP_TA0IV', 'BCSCTL2', 'P2DIR', 'BCSCTL1', 'AlarmToTimerC_0_m_dt', 'SchedulerBasicP_m_head', 'McuSleepC_powerState', 'TA0R', 'SchedulerBasicP_m_next', 'P1SEL', 'P6OUT', 'Msp430ClockP_TBIV', 'P6SEL', 'P3DIR', 'Msp430ClockP_TA0CTL', 'P2OUT', 'P4DIR', 'Msp430ClockP_TBCTL', 'P2SEL', 'P3SEL', 'TBR', 'P2IE', 'P5OUT', 'P5DIR', 'TransformAlarmC_0_m_t0', 'P6DIR', 'AlarmToTimerC_0_m_oneshot', 'SchedulerBasicP_m_tail', 'Msp430ClockP_IE1', 'P5SEL', 'P1IE', 'TransformAlarmC_0_m_dt']), 'Msp430ClockP_Init_init': set(['Msp430ClockP_TBIV', 'Msp430ClockP_TBCTL', 'Msp430ClockP_TA0IV', 'Msp430ClockP_TA0CTL']), 'SchedulerBasicP_popTask': set(['SchedulerBasicP_m_head', 'SchedulerBasicP_m_tail', 'SchedulerBasicP_m_next']), 'Msp430ClockP_Msp430ClockInit_defaultInitClocks': set(['BCSCTL2', 'Msp430ClockP_IE1', 'BCSCTL1']), 'Msp430ClockP_startTimerB': set(['Msp430ClockP_TBCTL']), 'McuSleepC_computePowerState': set(['McuSleepC_powerState']), 'AlarmToTimerC_0_start': set(['AlarmToTimerC_0_m_dt', 'AlarmToTimerC_0_m_oneshot']), 'TransformAlarmC_0_Alarm_startAt': set(['TransformAlarmC_0_m_t0', 'TransformAlarmC_0_m_dt']), 'Msp430ClockP_Msp430ClockInit_defaultSetupDcoCalibrate': set(['BCSCTL2', 'TBCCTL0', 'BCSCTL1', 'Msp430ClockP_TBCTL', 'Msp430ClockP_TA0CTL']), 'Msp430ClockP_set_dco_calib': set(['BCSCTL1', 'DCOCTL']), 'Msp430ClockP_test_calib_busywait_delta': set(['TBCCR0', 'TBCCTL0']), 'MotePlatformC_Init_init': set(['P4SEL', 'P1OUT', 'P1DIR', 'P3OUT', 'P4OUT', 'P2SEL', 'P3SEL', 'P2IE', 'P1IE', 'P5OUT', 'P3DIR', 'P5DIR', 'P1SEL', 'P6OUT', 'P4DIR', 'P5SEL', 'P6SEL', 'P2DIR', 'P2OUT', 'P6DIR']), 'Msp430ClockP_startTimerA': set(['Msp430ClockP_TA0CTL'])}

Function calls (198):
{'RealMainP_Scheduler_taskLoop': ['SchedulerBasicP_Scheduler_taskLoop'], 'LedsP_Led1_set': ['Msp430GpioC_1_GeneralIO_set'], 'TransformAlarmC_0_set_alarm': ['TransformAlarmC_0_Counter_get', 'TransformAlarmC_0_AlarmFrom_startAt'], 'TransformCounterC_0_Counter_overflow': ['TransformAlarmC_0_Counter_overflow', 'CounterToLocalTimeC_0_Counter_overflow'], 'Msp430CounterC_0_Msp430Timer_isOverflowPending': ['Msp430TimerP_1_Timer_isOverflowPending'], 'AlarmToTimerC_0_Alarm_startAt': ['TransformAlarmC_0_Alarm_startAt'], 'Msp430TimerCapComP_3_Event_fired': ['Msp430TimerCapComP_3_Capture_captured', 'Msp430TimerCapComP_3_Capture_getEvent', 'Msp430TimerCapComP_3_Control_getControl', 'Msp430TimerCapComP_3_Compare_fired'], 'Msp430ClockP_Msp430ClockInit_initTimerA': ['Msp430ClockP_Msp430ClockInit_default_initTimerA'], 'Msp430ClockP_Msp430ClockInit_initTimerB': ['Msp430ClockP_Msp430ClockInit_default_initTimerB'], 'Msp430GpioC_0_GeneralIO_makeOutput': ['Msp430GpioC_0_HplGeneralIO_makeOutput'], 'BlinkC_Leds_led0Toggle': ['LedsP_Leds_led0Toggle'], 'Msp430TimerCapComP_2_Control_getControl': ['Msp430TimerCapComP_2_int2CC'], 'LedsP_Leds_led2Toggle': ['LedsP_Led2_toggle'], 'Msp430TimerP_1_Overflow_fired': ['Msp430TimerP_1_Timer_overflow'], 'Msp430TimerP_1_Event_fired': ['Msp430TimerCapComP_3_Event_fired', 'Msp430TimerCapComP_4_Event_fired', 'Msp430TimerCapComP_5_Event_fired', 'Msp430TimerCapComP_6_Event_fired', 'Msp430TimerCapComP_7_Event_fired', 'Msp430TimerCapComP_8_Event_fired', 'Msp430TimerCapComP_9_Event_fired', 'Msp430TimerP_1_Overflow_fired', 'Msp430TimerP_1_Event_default_fired'], 'Msp430ClockP_Msp430ClockInit_setupDcoCalibrate': ['Msp430ClockP_Msp430ClockInit_default_setupDcoCalibrate'], 'Msp430TimerP_0_Overflow_fired': ['Msp430TimerP_0_Timer_overflow'], 'Msp430TimerCapComP_3_Capture_captured': ['Msp430TimerCapComP_3_Capture_default_captured'], 'MotePlatformC_TOSH_FLASH_M25P_DP': ['TOSH_MAKE_SIMO0_OUTPUT', 'TOSH_MAKE_UCLK0_OUTPUT', 'TOSH_MAKE_FLASH_HOLD_OUTPUT', 'TOSH_MAKE_FLASH_CS_OUTPUT', 'TOSH_SET_FLASH_HOLD_PIN', 'TOSH_SET_FLASH_CS_PIN', 'MotePlatformC_TOSH_wait', 'TOSH_CLR_FLASH_CS_PIN', 'TOSH_CLR_UCLK0_PIN', 'MotePlatformC_TOSH_FLASH_M25P_DP_bit', 'MotePlatformC_TOSH_FLASH_M25P_DP_bit', 'MotePlatformC_TOSH_FLASH_M25P_DP_bit', 'MotePlatformC_TOSH_FLASH_M25P_DP_bit', 'MotePlatformC_TOSH_FLASH_M25P_DP_bit', 'MotePlatformC_TOSH_FLASH_M25P_DP_bit', 'MotePlatformC_TOSH_FLASH_M25P_DP_bit', 'MotePlatformC_TOSH_FLASH_M25P_DP_bit', 'TOSH_SET_FLASH_CS_PIN', 'TOSH_SET_UCLK0_PIN', 'TOSH_SET_SIMO0_PIN'], 'RealMainP_Boot_booted': ['BlinkC_Boot_booted'], 'BlinkC_Timer0_startPeriodic': ['VirtualizeTimerC_0_Timer_startPeriodic'], 'MotePlatformC_TOSH_FLASH_M25P_DP_bit': ['TOSH_SET_SIMO0_PIN', 'TOSH_CLR_SIMO0_PIN', 'TOSH_SET_UCLK0_PIN', 'TOSH_CLR_UCLK0_PIN'], 'Msp430GpioC_1_GeneralIO_makeOutput': ['Msp430GpioC_1_HplGeneralIO_makeOutput'], 'Msp430TimerP_0_Timer_overflow': ['Msp430TimerCapComP_0_Timer_overflow', 'Msp430TimerCapComP_1_Timer_overflow', 'Msp430TimerCapComP_2_Timer_overflow'], 'Msp430CounterC_0_Msp430Timer_get': ['Msp430TimerP_1_Timer_get'], 'AlarmToTimerC_0_Timer_getNow': ['AlarmToTimerC_0_Alarm_getNow'], 'SchedulerBasicP_Scheduler_runNextTask': ['SchedulerBasicP_popTask', 'SchedulerBasicP_TaskBasic_runTask'], 'VirtualizeTimerC_0_fireTimers': ['VirtualizeTimerC_0_Timer_fired', 'VirtualizeTimerC_0_updateFromTimer_postTask'], 'main': ['__nesc_atomic_start', 'RealMainP_Scheduler_init', 'RealMainP_PlatformInit_init', 'RealMainP_Scheduler_runNextTask', 'RealMainP_SoftwareInit_init', 'RealMainP_Scheduler_runNextTask', '__nesc_atomic_end', '__nesc_enable_interrupt', 'RealMainP_Boot_booted', 'RealMainP_Scheduler_taskLoop'], 'AlarmToTimerC_0_Alarm_fired': ['AlarmToTimerC_0_fired_postTask'], 'RealMainP_Scheduler_runNextTask': ['SchedulerBasicP_Scheduler_runNextTask'], 'Msp430ClockP_busyCalibrateDco': ['Msp430ClockP_test_calib_busywait_delta', 'Msp430ClockP_set_dco_calib'], 'VirtualizeTimerC_0_Timer_fired': ['BlinkC_Timer0_fired', 'BlinkC_Timer1_fired', 'BlinkC_Timer2_fired', 'VirtualizeTimerC_0_Timer_default_fired'], 'TransformAlarmC_0_AlarmFrom_stop': ['Msp430AlarmC_0_Alarm_stop'], 'Msp430TimerCommonP_VectorTimerB1_fired': ['Msp430TimerP_1_VectorTimerX1_fired'], 'LedsP_Led2_makeOutput': ['Msp430GpioC_2_GeneralIO_makeOutput'], 'RealMainP_PlatformInit_init': ['PlatformP_Init_init'], 'TransformAlarmC_0_Alarm_fired': ['AlarmToTimerC_0_Alarm_fired'], 'Msp430TimerP_1_Timer_overflow': ['Msp430CounterC_0_Msp430Timer_overflow', 'Msp430AlarmC_0_Msp430Timer_overflow', 'Msp430TimerCapComP_3_Timer_overflow', 'Msp430TimerCapComP_4_Timer_overflow', 'Msp430TimerCapComP_5_Timer_overflow', 'Msp430TimerCapComP_6_Timer_overflow', 'Msp430TimerCapComP_7_Timer_overflow', 'Msp430TimerCapComP_8_Timer_overflow', 'Msp430TimerCapComP_9_Timer_overflow'], 'TransformCounterC_0_Counter_get': ['__nesc_atomic_start', 'TransformCounterC_0_CounterFrom_get', 'TransformCounterC_0_CounterFrom_get', 'TransformCounterC_0_CounterFrom_isOverflowPending', '__nesc_atomic_end'], 'AlarmToTimerC_0_Alarm_getNow': ['TransformAlarmC_0_Alarm_getNow'], 'BlinkC_Timer1_startPeriodic': ['VirtualizeTimerC_0_Timer_startPeriodic'], 'VirtualizeTimerC_0_TimerFrom_fired': ['VirtualizeTimerC_0_fireTimers', 'VirtualizeTimerC_0_TimerFrom_getNow'], 'Msp430TimerCapComP_3_compareControl': ['Msp430TimerCapComP_3_CC2int'], 'BlinkC_Timer0_fired': ['BlinkC_Leds_led0Toggle'], 'VirtualizeTimerC_0_TimerFrom_startOneShotAt': ['AlarmToTimerC_0_Timer_startOneShotAt'], 'Msp430GpioC_0_GeneralIO_toggle': ['Msp430GpioC_0_HplGeneralIO_toggle'], 'Msp430TimerCapComP_1_Compare_fired': ['Msp430TimerCapComP_1_Compare_default_fired'], 'Msp430TimerCapComP_7_Event_fired': ['Msp430TimerCapComP_7_Capture_captured', 'Msp430TimerCapComP_7_Capture_getEvent', 'Msp430TimerCapComP_7_Control_getControl', 'Msp430TimerCapComP_7_Compare_fired'], 'Msp430TimerCapComP_0_Event_fired': ['Msp430TimerCapComP_0_Capture_captured', 'Msp430TimerCapComP_0_Capture_getEvent', 'Msp430TimerCapComP_0_Control_getControl', 'Msp430TimerCapComP_0_Compare_fired'], 'PlatformP_MoteClockInit_init': ['Msp430ClockP_Init_init'], 'McuSleepC_McuPowerOverride_lowestState': ['McuSleepC_McuPowerOverride_default_lowestState'], 'Msp430TimerCapComP_6_Capture_captured': ['Msp430TimerCapComP_6_Capture_default_captured'], 'TransformAlarmC_0_AlarmFrom_fired': ['TransformAlarmC_0_Alarm_fired', 'TransformAlarmC_0_set_alarm'], 'AlarmToTimerC_0_Alarm_getAlarm': ['TransformAlarmC_0_Alarm_getAlarm'], 'AlarmToTimerC_0_Timer_startOneShotAt': ['AlarmToTimerC_0_start'], 'McuSleepC_McuSleep_sleep': ['McuSleepC_computePowerState', '__nesc_disable_interrupt'], 'Msp430GpioC_2_GeneralIO_toggle': ['Msp430GpioC_2_HplGeneralIO_toggle'], 'Msp430TimerCapComP_9_Event_fired': ['Msp430TimerCapComP_9_Capture_captured', 'Msp430TimerCapComP_9_Capture_getEvent', 'Msp430TimerCapComP_9_Control_getControl', 'Msp430TimerCapComP_9_Compare_fired'], 'Msp430TimerCommonP_VectorTimerA1_fired': ['Msp430TimerP_0_VectorTimerX1_fired'], 'Msp430TimerCapComP_4_Event_fired': ['Msp430TimerCapComP_4_Capture_captured', 'Msp430TimerCapComP_4_Capture_getEvent', 'Msp430TimerCapComP_4_Control_getControl', 'Msp430TimerCapComP_4_Compare_fired'], 'Msp430TimerCapComP_0_Capture_captured': ['Msp430TimerCapComP_0_Capture_default_captured'], 'Msp430TimerCapComP_5_Compare_fired': ['Msp430TimerCapComP_5_Compare_default_fired'], 'AlarmToTimerC_0_fired_runTask': ['AlarmToTimerC_0_start', 'AlarmToTimerC_0_Alarm_getAlarm', 'AlarmToTimerC_0_Timer_fired'], 'Msp430TimerCommonP_VectorTimerA0_fired': ['Msp430TimerP_0_VectorTimerX0_fired'], 'Msp430TimerCapComP_0_Control_getControl': ['Msp430TimerCapComP_0_int2CC'], 'Msp430CounterC_0_Counter_isOverflowPending': ['Msp430CounterC_0_Msp430Timer_isOverflowPending'], 'Msp430TimerP_0_Event_fired': ['Msp430TimerCapComP_0_Event_fired', 'Msp430TimerCapComP_1_Event_fired', 'Msp430TimerCapComP_2_Event_fired', 'Msp430TimerP_0_Overflow_fired', 'Msp430TimerP_0_Event_default_fired'], 'Msp430GpioC_0_HplGeneralIO_set': ['HplMsp430GeneralIOP_36_IO_set'], 'TransformAlarmC_0_AlarmFrom_startAt': ['Msp430AlarmC_0_Alarm_startAt'], 'Msp430TimerCapComP_8_Capture_captured': ['Msp430TimerCapComP_8_Capture_default_captured'], 'VirtualizeTimerC_0_updateFromTimer_postTask': ['SchedulerBasicP_TaskBasic_postTask'], 'Msp430GpioC_1_HplGeneralIO_set': ['HplMsp430GeneralIOP_37_IO_set'], 'Msp430TimerCapComP_3_Compare_setEventFromNow': ['Msp430TimerCapComP_3_Timer_get'], 'TransformCounterC_0_CounterFrom_get': ['Msp430CounterC_0_Counter_get'], 'Msp430AlarmC_0_Alarm_stop': ['Msp430AlarmC_0_Msp430TimerControl_disableEvents'], 'Msp430AlarmC_0_Msp430TimerControl_setControlAsCompare': ['Msp430TimerCapComP_3_Control_setControlAsCompare'], 'SchedulerBasicP_TaskBasic_runTask': ['AlarmToTimerC_0_fired_runTask', 'VirtualizeTimerC_0_updateFromTimer_runTask', 'SchedulerBasicP_TaskBasic_default_runTask'], 'VirtualizeTimerC_0_TimerFrom_stop': ['AlarmToTimerC_0_Timer_stop'], 'VirtualizeTimerC_0_TimerFrom_getNow': ['AlarmToTimerC_0_Timer_getNow'], 'Msp430TimerCapComP_1_Event_fired': ['Msp430TimerCapComP_1_Capture_captured', 'Msp430TimerCapComP_1_Capture_getEvent', 'Msp430TimerCapComP_1_Control_getControl', 'Msp430TimerCapComP_1_Compare_fired'], 'Msp430TimerCapComP_4_Compare_fired': ['Msp430TimerCapComP_4_Compare_default_fired'], 'SchedulerBasicP_Scheduler_taskLoop': ['__nesc_atomic_start', 'SchedulerBasicP_popTask', 'SchedulerBasicP_McuSleep_sleep', '__nesc_atomic_end', 'SchedulerBasicP_TaskBasic_runTask'], 'sig_TIMERA0_VECTOR': ['Msp430TimerCommonP_VectorTimerA0_fired'], 'Msp430TimerCapComP_3_Control_getControl': ['Msp430TimerCapComP_3_int2CC'], 'LedsP_Led2_toggle': ['Msp430GpioC_2_GeneralIO_toggle'], 'Msp430TimerP_0_VectorTimerX1_fired': ['Msp430TimerP_0_Event_fired'], 'Msp430ClockP_Init_init': ['Msp430ClockP_Msp430ClockInit_initClocks', 'Msp430ClockP_Msp430ClockInit_initTimerA', 'Msp430ClockP_Msp430ClockInit_initTimerB', 'Msp430ClockP_startTimerA', 'Msp430ClockP_startTimerB'], 'BlinkC_Leds_led2Toggle': ['LedsP_Leds_led2Toggle'], 'BlinkC_Timer1_fired': ['BlinkC_Leds_led1Toggle'], 'Msp430TimerCapComP_3_Timer_get': ['Msp430TimerP_1_Timer_get'], 'Msp430AlarmC_0_Alarm_fired': ['TransformAlarmC_0_AlarmFrom_fired'], 'Msp430TimerCommonP_VectorTimerB0_fired': ['Msp430TimerP_1_VectorTimerX0_fired'], 'AlarmToTimerC_0_Alarm_stop': ['TransformAlarmC_0_Alarm_stop'], 'Msp430GpioC_1_GeneralIO_toggle': ['Msp430GpioC_1_HplGeneralIO_toggle'], 'LedsP_Led2_set': ['Msp430GpioC_2_GeneralIO_set'], 'LedsP_Led0_toggle': ['Msp430GpioC_0_GeneralIO_toggle'], 'Msp430TimerP_1_VectorTimerX1_fired': ['Msp430TimerP_1_Event_fired'], 'AlarmToTimerC_0_fired_postTask': ['SchedulerBasicP_TaskBasic_postTask'], 'Msp430GpioC_2_GeneralIO_makeOutput': ['Msp430GpioC_2_HplGeneralIO_makeOutput'], 'SchedulerBasicP_McuSleep_sleep': ['McuSleepC_McuSleep_sleep'], 'Msp430GpioC_2_HplGeneralIO_toggle': ['HplMsp430GeneralIOP_38_IO_toggle'], 'Msp430CounterC_0_Msp430Timer_overflow': ['Msp430CounterC_0_Counter_overflow'], 'TransformAlarmC_0_Alarm_getNow': ['TransformAlarmC_0_Counter_get'], 'TransformCounterC_0_CounterFrom_isOverflowPending': ['Msp430CounterC_0_Counter_isOverflowPending'], 'Msp430TimerCapComP_8_Compare_fired': ['Msp430TimerCapComP_8_Compare_default_fired'], 'Msp430AlarmC_0_Msp430Compare_fired': ['Msp430AlarmC_0_Msp430TimerControl_disableEvents', 'Msp430AlarmC_0_Alarm_fired'], 'Msp430TimerCapComP_4_Control_getControl': ['Msp430TimerCapComP_4_int2CC'], 'Msp430AlarmC_0_Msp430TimerControl_disableEvents': ['Msp430TimerCapComP_3_Control_disableEvents'], 'Msp430ClockP_test_calib_busywait_delta': ['Msp430ClockP_set_dco_calib'], 'sig_TIMERB1_VECTOR': ['Msp430TimerCommonP_VectorTimerB1_fired'], 'Msp430TimerCapComP_8_Event_fired': ['Msp430TimerCapComP_8_Capture_captured', 'Msp430TimerCapComP_8_Capture_getEvent', 'Msp430TimerCapComP_8_Control_getControl', 'Msp430TimerCapComP_8_Compare_fired'], 'Msp430TimerP_1_VectorTimerX0_fired': ['Msp430TimerP_1_Event_fired'], 'SchedulerBasicP_pushTask': ['SchedulerBasicP_isWaiting'], '__nesc_atomic_end': ['__nesc_enable_interrupt'], 'Msp430GpioC_0_HplGeneralIO_toggle': ['HplMsp430GeneralIOP_36_IO_toggle'], 'MotePlatformC_Init_init': ['MotePlatformC_TOSH_FLASH_M25P_DP'], 'Msp430TimerCapComP_6_Control_getControl': ['Msp430TimerCapComP_6_int2CC'], 'Msp430AlarmC_0_Msp430TimerControl_enableEvents': ['Msp430TimerCapComP_3_Control_enableEvents'], 'Msp430TimerCapComP_1_Capture_captured': ['Msp430TimerCapComP_1_Capture_default_captured'], 'Msp430TimerCapComP_1_Control_getControl': ['Msp430TimerCapComP_1_int2CC'], 'Msp430GpioC_1_HplGeneralIO_toggle': ['HplMsp430GeneralIOP_37_IO_toggle'], 'BlinkC_Timer2_fired': ['BlinkC_Leds_led2Toggle'], 'LedsP_Leds_led0Toggle': ['LedsP_Led0_toggle'], 'Msp430GpioC_2_GeneralIO_set': ['Msp430GpioC_2_HplGeneralIO_set'], 'Msp430ClockP_Msp430ClockInit_initClocks': ['Msp430ClockP_Msp430ClockInit_default_initClocks'], 'VirtualizeTimerC_0_updateFromTimer_runTask': ['VirtualizeTimerC_0_TimerFrom_getNow', 'VirtualizeTimerC_0_TimerFrom_stop', 'VirtualizeTimerC_0_fireTimers', 'VirtualizeTimerC_0_TimerFrom_startOneShotAt'], 'AlarmToTimerC_0_start': ['AlarmToTimerC_0_Alarm_startAt'], 'Msp430TimerCapComP_5_Control_getControl': ['Msp430TimerCapComP_5_int2CC'], 'Msp430ClockP_Msp430ClockInit_default_initTimerB': ['Msp430ClockP_Msp430ClockInit_defaultInitTimerB'], 'PlatformP_Init_init': ['PlatformP_MoteClockInit_init', 'PlatformP_MoteInit_init', 'PlatformP_LedsInit_init'], 'Msp430ClockP_Msp430ClockInit_default_initTimerA': ['Msp430ClockP_Msp430ClockInit_defaultInitTimerA'], 'LedsP_Led1_toggle': ['Msp430GpioC_1_GeneralIO_toggle'], 'Msp430TimerCapComP_5_Capture_captured': ['Msp430TimerCapComP_5_Capture_default_captured'], 'sig_TIMERB0_VECTOR': ['Msp430TimerCommonP_VectorTimerB0_fired'], 'VirtualizeTimerC_0_Timer_startPeriodic': ['VirtualizeTimerC_0_startTimer', 'VirtualizeTimerC_0_TimerFrom_getNow'], 'PlatformP_MoteInit_init': ['MotePlatformC_Init_init'], 'LedsP_Leds_led1Toggle': ['LedsP_Led1_toggle'], 'TransformCounterC_0_CounterFrom_overflow': ['TransformCounterC_0_Counter_overflow'], 'Msp430AlarmC_0_Msp430Timer_get': ['Msp430TimerP_1_Timer_get'], 'Msp430GpioC_0_GeneralIO_set': ['Msp430GpioC_0_HplGeneralIO_set'], 'Msp430TimerCapComP_9_Capture_captured': ['Msp430TimerCapComP_9_Capture_default_captured'], 'TransformAlarmC_0_Counter_get': ['TransformCounterC_0_Counter_get'], 'BlinkC_Boot_booted': ['BlinkC_Timer0_startPeriodic', 'BlinkC_Timer1_startPeriodic', 'BlinkC_Timer2_startPeriodic'], 'LedsP_Led0_set': ['Msp430GpioC_0_GeneralIO_set'], 'Msp430GpioC_1_GeneralIO_set': ['Msp430GpioC_1_HplGeneralIO_set'], 'McuSleepC_computePowerState': ['mcombine', 'McuSleepC_getPowerState', 'McuSleepC_McuPowerOverride_lowestState'], 'Msp430AlarmC_0_Alarm_startAt': ['Msp430AlarmC_0_Msp430Timer_get', 'Msp430AlarmC_0_Msp430Compare_setEventFromNow', 'Msp430AlarmC_0_Msp430Compare_setEventFromNow', 'Msp430AlarmC_0_Msp430Compare_setEvent', 'Msp430AlarmC_0_Msp430TimerControl_clearPendingInterrupt', 'Msp430AlarmC_0_Msp430TimerControl_enableEvents'], 'Msp430TimerCapComP_4_Capture_captured': ['Msp430TimerCapComP_4_Capture_default_captured'], 'Msp430TimerCapComP_3_Compare_fired': ['Msp430AlarmC_0_Msp430Compare_fired'], 'Msp430TimerP_0_VectorTimerX0_fired': ['Msp430TimerP_0_Event_fired'], 'Msp430GpioC_2_HplGeneralIO_set': ['HplMsp430GeneralIOP_38_IO_set'], 'Msp430TimerCapComP_8_Control_getControl': ['Msp430TimerCapComP_8_int2CC'], 'Msp430AlarmC_0_Msp430TimerControl_clearPendingInterrupt': ['Msp430TimerCapComP_3_Control_clearPendingInterrupt'], 'Msp430ClockP_Msp430ClockInit_default_setupDcoCalibrate': ['Msp430ClockP_Msp430ClockInit_defaultSetupDcoCalibrate'], '__nesc_atomic_start': ['__nesc_disable_interrupt'], 'PlatformP_LedsInit_init': ['LedsP_Init_init'], 'Msp430TimerCapComP_2_Compare_fired': ['Msp430TimerCapComP_2_Compare_default_fired'], 'Msp430AlarmC_0_Msp430Compare_setEvent': ['Msp430TimerCapComP_3_Compare_setEvent'], 'Msp430TimerCapComP_2_Event_fired': ['Msp430TimerCapComP_2_Capture_captured', 'Msp430TimerCapComP_2_Capture_getEvent', 'Msp430TimerCapComP_2_Control_getControl', 'Msp430TimerCapComP_2_Compare_fired'], 'Msp430TimerCapComP_7_Compare_fired': ['Msp430TimerCapComP_7_Compare_default_fired'], 'Msp430TimerCapComP_9_Control_getControl': ['Msp430TimerCapComP_9_int2CC'], 'BlinkC_Timer2_startPeriodic': ['VirtualizeTimerC_0_Timer_startPeriodic'], 'Msp430TimerCapComP_2_Capture_captured': ['Msp430TimerCapComP_2_Capture_default_captured'], 'sig_TIMERA1_VECTOR': ['Msp430TimerCommonP_VectorTimerA1_fired'], 'TransformAlarmC_0_Alarm_stop': ['TransformAlarmC_0_AlarmFrom_stop'], 'SchedulerBasicP_TaskBasic_postTask': ['__nesc_atomic_start', 'SchedulerBasicP_pushTask', '__nesc_atomic_end', '__nesc_atomic_end'], 'Msp430ClockP_Msp430ClockInit_default_initClocks': ['Msp430ClockP_Msp430ClockInit_defaultInitClocks'], 'HplMsp430GeneralIOP_37_IO_toggle': ['__nesc_atomic_start', '__nesc_atomic_end'], 'TransformAlarmC_0_Alarm_getAlarm': ['__nesc_atomic_start', '__nesc_atomic_end', '__nesc_atomic_end'], 'Msp430AlarmC_0_Init_init': ['Msp430AlarmC_0_Msp430TimerControl_disableEvents', 'Msp430AlarmC_0_Msp430TimerControl_setControlAsCompare'], 'AlarmToTimerC_0_Timer_stop': ['AlarmToTimerC_0_Alarm_stop'], 'Msp430TimerCapComP_0_Compare_fired': ['Msp430TimerCapComP_0_Compare_default_fired'], 'Msp430TimerCapComP_3_Control_setControlAsCompare': ['Msp430TimerCapComP_3_compareControl'], 'HplMsp430GeneralIOP_38_IO_toggle': ['__nesc_atomic_start', '__nesc_atomic_end'], 'LedsP_Led1_makeOutput': ['Msp430GpioC_1_GeneralIO_makeOutput'], 'HplMsp430GeneralIOP_36_IO_toggle': ['__nesc_atomic_start', '__nesc_atomic_end'], 'BlinkC_Leds_led1Toggle': ['LedsP_Leds_led1Toggle'], 'Msp430GpioC_2_HplGeneralIO_makeOutput': ['HplMsp430GeneralIOP_38_IO_makeOutput'], 'Msp430TimerCapComP_7_Control_getControl': ['Msp430TimerCapComP_7_int2CC'], 'Msp430CounterC_0_Counter_overflow': ['TransformCounterC_0_CounterFrom_overflow'], 'AlarmToTimerC_0_Timer_fired': ['VirtualizeTimerC_0_TimerFrom_fired'], 'TransformAlarmC_0_Alarm_startAt': ['__nesc_atomic_start', 'TransformAlarmC_0_set_alarm', '__nesc_atomic_end'], 'RealMainP_SoftwareInit_init': ['Msp430AlarmC_0_Init_init'], 'Msp430TimerCapComP_6_Event_fired': ['Msp430TimerCapComP_6_Capture_captured', 'Msp430TimerCapComP_6_Capture_getEvent', 'Msp430TimerCapComP_6_Control_getControl', 'Msp430TimerCapComP_6_Compare_fired'], 'Msp430GpioC_1_HplGeneralIO_makeOutput': ['HplMsp430GeneralIOP_37_IO_makeOutput'], 'SchedulerBasicP_Scheduler_init': ['memset'], 'Msp430CounterC_0_Counter_get': ['Msp430CounterC_0_Msp430Timer_get'], 'Msp430TimerCapComP_5_Event_fired': ['Msp430TimerCapComP_5_Capture_captured', 'Msp430TimerCapComP_5_Capture_getEvent', 'Msp430TimerCapComP_5_Control_getControl', 'Msp430TimerCapComP_5_Compare_fired'], 'Msp430AlarmC_0_Msp430Compare_setEventFromNow': ['Msp430TimerCapComP_3_Compare_setEventFromNow'], 'Msp430TimerCapComP_7_Capture_captured': ['Msp430TimerCapComP_7_Capture_default_captured'], 'Msp430GpioC_0_HplGeneralIO_makeOutput': ['HplMsp430GeneralIOP_36_IO_makeOutput'], 'Msp430TimerCapComP_6_Compare_fired': ['Msp430TimerCapComP_6_Compare_default_fired'], 'LedsP_Init_init': ['LedsP_Led0_makeOutput', 'LedsP_Led1_makeOutput', 'LedsP_Led2_makeOutput', 'LedsP_Led0_set', 'LedsP_Led1_set', 'LedsP_Led2_set'], 'Msp430TimerCapComP_9_Compare_fired': ['Msp430TimerCapComP_9_Compare_default_fired'], 'VirtualizeTimerC_0_startTimer': ['VirtualizeTimerC_0_updateFromTimer_postTask'], 'RealMainP_Scheduler_init': ['SchedulerBasicP_Scheduler_init'], 'LedsP_Led0_makeOutput': ['Msp430GpioC_0_GeneralIO_makeOutput']}

IRQs (1):
set(['sig_TIMERB0_VECTOR'])

Thread data accesses (read) (2):
{'main': set(['TransformCounterC_0_m_upper', 'BCSCTL1', 'Msp430ClockP_TBCTL', 'TransformAlarmC_0_m_t0', 'McuSleepC_msp430PowerBits', 'VirtualizeTimerC_0_m_timers', 'SchedulerBasicP_m_tail', 'McuSleepC_powerState', 'SchedulerBasicP_m_next', 'SchedulerBasicP_m_head', 'TransformAlarmC_0_m_dt', 'Msp430ClockP_TA0CTL']), 'sig_TIMERB0_VECTOR': set(['TransformAlarmC_0_m_t0', 'TransformCounterC_0_m_upper', 'TransformAlarmC_0_m_dt', 'SchedulerBasicP_m_tail', 'SchedulerBasicP_m_next'])}

Thread data accesses (write) (2):
{'main': set(['P4SEL', 'P1OUT', 'P1DIR', 'P3OUT', 'P4OUT', 'Msp430ClockP_TA0IV', 'BCSCTL2', 'P2DIR', 'BCSCTL1', 'AlarmToTimerC_0_m_dt', 'SchedulerBasicP_m_head', 'McuSleepC_powerState', 'TA0R', 'SchedulerBasicP_m_next', 'P1SEL', 'P6OUT', 'Msp430ClockP_TBIV', 'P6SEL', 'P3DIR', 'Msp430ClockP_TA0CTL', 'P2OUT', 'P4DIR', 'Msp430ClockP_TBCTL', 'P2SEL', 'P3SEL', 'TBR', 'P2IE', 'P5OUT', 'P5DIR', 'TransformAlarmC_0_m_t0', 'P6DIR', 'AlarmToTimerC_0_m_oneshot', 'SchedulerBasicP_m_tail', 'Msp430ClockP_IE1', 'P5SEL', 'P1IE', 'TransformAlarmC_0_m_dt']), 'sig_TIMERB0_VECTOR': set(['TransformAlarmC_0_m_t0', 'SchedulerBasicP_m_head', 'TransformAlarmC_0_m_dt', 'SchedulerBasicP_m_tail', 'SchedulerBasicP_m_next'])}

Common data (1):

{'sig_TIMERB0_VECTOR': set(['TransformCounterC_0_m_upper',
'TransformAlarmC_0_m_t0', 'SchedulerBasicP_m_tail', 'SchedulerBasicP_m_next',
'SchedulerBasicP_m_head', 'TransformAlarmC_0_m_dt'])}

--------------------------------------------------------------------------------
DEREF at 354/0x162	 @ 16-bit Peripheral Module	 in line *_TACCTL0
DEREF at 354/0x162	 @ 16-bit Peripheral Module	 in line *_TACCTL0
DEREF at 370/0x172	 @ 16-bit Peripheral Module	 in line *_TACCR0
DEREF at 356/0x164	 @ 16-bit Peripheral Module	 in line *_TACCTL1
DEREF at 356/0x164	 @ 16-bit Peripheral Module	 in line *_TACCTL1
DEREF at 372/0x174	 @ 16-bit Peripheral Module	 in line *_TACCR1
DEREF at 358/0x166	 @ 16-bit Peripheral Module	 in line *_TACCTL2
DEREF at 358/0x166	 @ 16-bit Peripheral Module	 in line *_TACCTL2
DEREF at 374/0x176	 @ 16-bit Peripheral Module	 in line *_TACCR2
DEREF at 302/0x12e	 @ 16-bit Peripheral Module	 in line *_TAIV
DEREF at 386/0x182	 @ 16-bit Peripheral Module	 in line *_TBCCTL0
DEREF at 402/0x192	 @ 16-bit Peripheral Module	 in line *_TBCCR0
DEREF at 386/0x182	 @ 16-bit Peripheral Module	 in line *_TBCCTL0
DEREF at 386/0x182	 @ 16-bit Peripheral Module	 in line *_TBCCTL0
DEREF at 384/0x180	 @ 16-bit Peripheral Module	 in line *_TBCTL
DEREF at 386/0x182	 @ 16-bit Peripheral Module	 in line *_TBCCTL0
DEREF at 386/0x182	 @ 16-bit Peripheral Module	 in line *_TBCCTL0
DEREF at 402/0x192	 @ 16-bit Peripheral Module	 in line *_TBCCR0
DEREF at 402/0x192	 @ 16-bit Peripheral Module	 in line *_TBCCR0
DEREF at 404/0x194	 @ 16-bit Peripheral Module	 in line *_TBCCR1
DEREF at 388/0x184	 @ 16-bit Peripheral Module	 in line *_TBCCTL1
DEREF at 388/0x184	 @ 16-bit Peripheral Module	 in line *_TBCCTL1
DEREF at 406/0x196	 @ 16-bit Peripheral Module	 in line *_TBCCR2
DEREF at 390/0x186	 @ 16-bit Peripheral Module	 in line *_TBCCTL2
DEREF at 390/0x186	 @ 16-bit Peripheral Module	 in line *_TBCCTL2
DEREF at 408/0x198	 @ 16-bit Peripheral Module	 in line *_TBCCR3
DEREF at 392/0x188	 @ 16-bit Peripheral Module	 in line *_TBCCTL3
DEREF at 392/0x188	 @ 16-bit Peripheral Module	 in line *_TBCCTL3
DEREF at 410/0x19a	 @ 16-bit Peripheral Module	 in line *_TBCCR4
DEREF at 394/0x18a	 @ 16-bit Peripheral Module	 in line *_TBCCTL4
DEREF at 394/0x18a	 @ 16-bit Peripheral Module	 in line *_TBCCTL4
DEREF at 412/0x19c	 @ 16-bit Peripheral Module	 in line *_TBCCR5
DEREF at 396/0x18c	 @ 16-bit Peripheral Module	 in line *_TBCCTL5
DEREF at 396/0x18c	 @ 16-bit Peripheral Module	 in line *_TBCCTL5
DEREF at 414/0x19e	 @ 16-bit Peripheral Module	 in line *_TBCCR6
DEREF at 398/0x18e	 @ 16-bit Peripheral Module	 in line *_TBCCTL6
DEREF at 398/0x18e	 @ 16-bit Peripheral Module	 in line *_TBCCTL6
DEREF at 286/0x11e	 @ 16-bit Peripheral Module	 in line *_TBIV
DEREF at 49/0x31	 @ 8-bit Peripheral Module	 in line *_P5OUT
DEREF at 49/0x31	 @ 8-bit Peripheral Module	 in line *_P5OUT
DEREF at 49/0x31	 @ 8-bit Peripheral Module	 in line *_P5OUT
DEREF at 50/0x32	 @ 8-bit Peripheral Module	 in line *_P5DIR
DEREF at 50/0x32	 @ 8-bit Peripheral Module	 in line *_P5DIR
DEREF at 50/0x32	 @ 8-bit Peripheral Module	 in line *_P5DIR
DEREF at 25/0x0019	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 25/0x0019	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 29/0x001D	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 25/0x0019	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 29/0x001D	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 29/0x001D	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 30/0x001E	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 30/0x001E	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 26/0x001A	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 26/0x001A	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 368/0x0170	 @16-bit Peripheral Module	 with fixed-address variable TA0R
DEREF at 368/0x0170	 @16-bit Peripheral Module	 with fixed-address variable TA0R
DEREF at 38/0x0026	 @8-bit Peripheral Module	 with fixed-address variable P1SEL
DEREF at 46/0x002E	 @8-bit Peripheral Module	 with fixed-address variable P2SEL
DEREF at 27/0x001B	 @8-bit Peripheral Module	 with fixed-address variable P3SEL
DEREF at 31/0x001F	 @8-bit Peripheral Module	 with fixed-address variable P4SEL
DEREF at 51/0x0033	 @8-bit Peripheral Module	 with fixed-address variable P5SEL
DEREF at 55/0x0037	 @8-bit Peripheral Module	 with fixed-address variable P6SEL
DEREF at 33/0x0021	 @8-bit Peripheral Module	 with fixed-address variable P1OUT
DEREF at 34/0x0022	 @8-bit Peripheral Module	 with fixed-address variable P1DIR
DEREF at 41/0x0029	 @8-bit Peripheral Module	 with fixed-address variable P2OUT
DEREF at 42/0x002A	 @8-bit Peripheral Module	 with fixed-address variable P2DIR
DEREF at 25/0x0019	 @8-bit Peripheral Module	 with fixed-address variable P3OUT
DEREF at 26/0x001A	 @8-bit Peripheral Module	 with fixed-address variable P3DIR
DEREF at 29/0x001D	 @8-bit Peripheral Module	 with fixed-address variable P4OUT
DEREF at 30/0x001E	 @8-bit Peripheral Module	 with fixed-address variable P4DIR
DEREF at 49/0x0031	 @8-bit Peripheral Module	 with fixed-address variable P5OUT
DEREF at 50/0x0032	 @8-bit Peripheral Module	 with fixed-address variable P5DIR
DEREF at 53/0x0035	 @8-bit Peripheral Module	 with fixed-address variable P6OUT
DEREF at 54/0x0036	 @8-bit Peripheral Module	 with fixed-address variable P6DIR
DEREF at 37/0x0025	 @8-bit Peripheral Module	 with fixed-address variable P1IE
DEREF at 45/0x002D	 @8-bit Peripheral Module	 with fixed-address variable P2IE
DEREF at 384/0x0180	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TBCTL
DEREF at 384/0x0180	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TBCTL
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TA0CTL
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TA0CTL
DEREF at 400/0x0190	 @16-bit Peripheral Module	 with fixed-address variable TBR
DEREF at 384/0x0180	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TBCTL
DEREF at 368/0x0170	 @16-bit Peripheral Module	 with fixed-address variable TA0R
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TA0CTL
DEREF at 87/0x0057	 @8-bit Peripheral Module	 with fixed-address variable BCSCTL1
DEREF at 87/0x0057	 @8-bit Peripheral Module	 with fixed-address variable BCSCTL1
DEREF at 88/0x0058	 @8-bit Peripheral Module	 with fixed-address variable BCSCTL2
DEREF at 0/0x0000	 @Special Function Register	 with fixed-address variable Msp430ClockP_IE1
DEREF at 402/0x0192	 @16-bit Peripheral Module	 with fixed-address variable TBCCR0
DEREF at 400/0x0190	 @16-bit Peripheral Module	 with fixed-address variable TBR
DEREF at 386/0x0182	 @16-bit Peripheral Module	 with fixed-address variable TBCCTL0
DEREF at 386/0x0182	 @16-bit Peripheral Module	 with fixed-address variable TBCCTL0
DEREF at 368/0x0170	 @16-bit Peripheral Module	 with fixed-address variable TA0R
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TA0CTL
DEREF at 384/0x0180	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TBCTL
DEREF at 87/0x0057	 @8-bit Peripheral Module	 with fixed-address variable BCSCTL1
DEREF at 88/0x0058	 @8-bit Peripheral Module	 with fixed-address variable BCSCTL2
DEREF at 386/0x0182	 @16-bit Peripheral Module	 with fixed-address variable TBCCTL0
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TA0CTL
DEREF at 302/0x012E	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TA0IV
DEREF at 384/0x0180	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TBCTL
DEREF at 286/0x011E	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TBIV
DEREF at 25/0x0019	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 49/0x31	 @ 8-bit Peripheral Module	 in line *_P5OUT
DEREF at 49/0x31	 @ 8-bit Peripheral Module	 in line *_P5OUT
DEREF at 49/0x31	 @ 8-bit Peripheral Module	 in line *_P5OUT
DEREF at 386/0x182	 @ 16-bit Peripheral Module	 in line *_TBCCTL0
DEREF at 354/0x0162	 @16-bit Peripheral Module	 with fixed-address variable TA0CCTL0
DEREF at 356/0x0164	 @16-bit Peripheral Module	 with fixed-address variable TA0CCTL1
DEREF at 358/0x0166	 @16-bit Peripheral Module	 with fixed-address variable TA0CCTL2
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable TA0CTL
DEREF at 4/0x0004	 @Special Function Register	 with fixed-address variable ME1
DEREF at 113/0x0071	 @8-bit Peripheral Module	 with fixed-address variable U0TCTL
DEREF at 5/0x0005	 @Special Function Register	 with fixed-address variable ME2
DEREF at 121/0x0079	 @8-bit Peripheral Module	 with fixed-address variable U1TCTL
DEREF at 112/0x0070	 @8-bit Peripheral Module	 with fixed-address variable U0CTLnr
DEREF at 113/0x0071	 @8-bit Peripheral Module	 with fixed-address variable I2CTCTLnr
DEREF at 114/0x0072	 @8-bit Peripheral Module	 with fixed-address variable I2CDCTLnr
DEREF at 112/0x0070	 @8-bit Peripheral Module	 with fixed-address variable U0CTLnr
DEREF at 112/0x0070	 @8-bit Peripheral Module	 with fixed-address variable U0CTLnr
DEREF at 416/0x01A0	 @16-bit Peripheral Module	 with fixed-address variable ADC12CTL0
DEREF at 418/0x01A2	 @16-bit Peripheral Module	 with fixed-address variable ADC12CTL1
DEREF at 418/0x01A2	 @16-bit Peripheral Module	 with fixed-address variable ADC12CTL1
DEREF at 418/0x01A2	 @16-bit Peripheral Module	 with fixed-address variable ADC12CTL1
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable TA0CTL
DEREF at 400/0x190	 @ 16-bit Peripheral Module	 in line *_TBR
DEREF at 87/0x0057	 @8-bit Peripheral Module	 with fixed-address variable BCSCTL1
DEREF at 87/0x0057	 @8-bit Peripheral Module	 with fixed-address variable BCSCTL1
DEREF at 86/0x0056	 @8-bit Peripheral Module	 with fixed-address variable DCOCTL
DEREF at 386/0x182	 @ 16-bit Peripheral Module	 in line *_TBCCTL0
DEREF at 402/0x192	 @ 16-bit Peripheral Module	 in line *_TBCCR0
DEREF at 386/0x182	 @ 16-bit Peripheral Module	 in line *_TBCCTL0
DEREF at 386/0x182	 @ 16-bit Peripheral Module	 in line *_TBCCTL0
DEREF at 384/0x180	 @ 16-bit Peripheral Module	 in line *_TBCTL
DEREF at 386/0x182	 @ 16-bit Peripheral Module	 in line *_TBCCTL0
DEREF at 386/0x182	 @ 16-bit Peripheral Module	 in line *_TBCCTL0
DEREF at 402/0x192	 @ 16-bit Peripheral Module	 in line *_TBCCR0
DEREF at 402/0x192	 @ 16-bit Peripheral Module	 in line *_TBCCR0
DEREF at 404/0x194	 @ 16-bit Peripheral Module	 in line *_TBCCR1
DEREF at 388/0x184	 @ 16-bit Peripheral Module	 in line *_TBCCTL1
DEREF at 388/0x184	 @ 16-bit Peripheral Module	 in line *_TBCCTL1
DEREF at 406/0x196	 @ 16-bit Peripheral Module	 in line *_TBCCR2
DEREF at 390/0x186	 @ 16-bit Peripheral Module	 in line *_TBCCTL2
DEREF at 390/0x186	 @ 16-bit Peripheral Module	 in line *_TBCCTL2
DEREF at 408/0x198	 @ 16-bit Peripheral Module	 in line *_TBCCR3
DEREF at 392/0x188	 @ 16-bit Peripheral Module	 in line *_TBCCTL3
DEREF at 392/0x188	 @ 16-bit Peripheral Module	 in line *_TBCCTL3
DEREF at 410/0x19a	 @ 16-bit Peripheral Module	 in line *_TBCCR4
DEREF at 394/0x18a	 @ 16-bit Peripheral Module	 in line *_TBCCTL4
DEREF at 394/0x18a	 @ 16-bit Peripheral Module	 in line *_TBCCTL4
DEREF at 412/0x19c	 @ 16-bit Peripheral Module	 in line *_TBCCR5
DEREF at 396/0x18c	 @ 16-bit Peripheral Module	 in line *_TBCCTL5
DEREF at 396/0x18c	 @ 16-bit Peripheral Module	 in line *_TBCCTL5
DEREF at 414/0x19e	 @ 16-bit Peripheral Module	 in line *_TBCCR6
DEREF at 398/0x18e	 @ 16-bit Peripheral Module	 in line *_TBCCTL6
DEREF at 398/0x18e	 @ 16-bit Peripheral Module	 in line *_TBCCTL6
DEREF at 49/0x31	 @ 8-bit Peripheral Module	 in line *_P5OUT
DEREF at 49/0x31	 @ 8-bit Peripheral Module	 in line *_P5OUT
DEREF at 49/0x31	 @ 8-bit Peripheral Module	 in line *_P5OUT
DEREF at 50/0x32	 @ 8-bit Peripheral Module	 in line *_P5DIR
DEREF at 50/0x32	 @ 8-bit Peripheral Module	 in line *_P5DIR
DEREF at 50/0x32	 @ 8-bit Peripheral Module	 in line *_P5DIR
DEREF at 25/0x0019	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 25/0x0019	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 29/0x001D	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 25/0x0019	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 29/0x001D	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 29/0x001D	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 30/0x001E	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 30/0x001E	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 26/0x001A	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 26/0x001A	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 38/0x0026	 @8-bit Peripheral Module	 with fixed-address variable P1SEL
DEREF at 46/0x002E	 @8-bit Peripheral Module	 with fixed-address variable P2SEL
DEREF at 27/0x001B	 @8-bit Peripheral Module	 with fixed-address variable P3SEL
DEREF at 31/0x001F	 @8-bit Peripheral Module	 with fixed-address variable P4SEL
DEREF at 51/0x0033	 @8-bit Peripheral Module	 with fixed-address variable P5SEL
DEREF at 55/0x0037	 @8-bit Peripheral Module	 with fixed-address variable P6SEL
DEREF at 33/0x0021	 @8-bit Peripheral Module	 with fixed-address variable P1OUT
DEREF at 34/0x0022	 @8-bit Peripheral Module	 with fixed-address variable P1DIR
DEREF at 41/0x0029	 @8-bit Peripheral Module	 with fixed-address variable P2OUT
DEREF at 42/0x002A	 @8-bit Peripheral Module	 with fixed-address variable P2DIR
DEREF at 25/0x0019	 @8-bit Peripheral Module	 with fixed-address variable P3OUT
DEREF at 26/0x001A	 @8-bit Peripheral Module	 with fixed-address variable P3DIR
DEREF at 29/0x001D	 @8-bit Peripheral Module	 with fixed-address variable P4OUT
DEREF at 30/0x001E	 @8-bit Peripheral Module	 with fixed-address variable P4DIR
DEREF at 49/0x0031	 @8-bit Peripheral Module	 with fixed-address variable P5OUT
DEREF at 50/0x0032	 @8-bit Peripheral Module	 with fixed-address variable P5DIR
DEREF at 53/0x0035	 @8-bit Peripheral Module	 with fixed-address variable P6OUT
DEREF at 54/0x0036	 @8-bit Peripheral Module	 with fixed-address variable P6DIR
DEREF at 37/0x0025	 @8-bit Peripheral Module	 with fixed-address variable P1IE
DEREF at 45/0x002D	 @8-bit Peripheral Module	 with fixed-address variable P2IE
DEREF at 384/0x0180	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TBCTL
DEREF at 384/0x0180	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TBCTL
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TA0CTL
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TA0CTL
DEREF at 400/0x0190	 @16-bit Peripheral Module	 with fixed-address variable TBR
DEREF at 384/0x0180	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TBCTL
DEREF at 368/0x0170	 @16-bit Peripheral Module	 with fixed-address variable TA0R
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TA0CTL
DEREF at 87/0x0057	 @8-bit Peripheral Module	 with fixed-address variable BCSCTL1
DEREF at 87/0x0057	 @8-bit Peripheral Module	 with fixed-address variable BCSCTL1
DEREF at 88/0x0058	 @8-bit Peripheral Module	 with fixed-address variable BCSCTL2
DEREF at 0/0x0000	 @Special Function Register	 with fixed-address variable Msp430ClockP_IE1
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TA0CTL
DEREF at 302/0x012E	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TA0IV
DEREF at 384/0x0180	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TBCTL
DEREF at 286/0x011E	 @16-bit Peripheral Module	 with fixed-address variable Msp430ClockP_TBIV
DEREF at 25/0x0019	 @8-bit Peripheral Module	 with fixed-address variable r
DEREF at 49/0x31	 @ 8-bit Peripheral Module	 in line *_P5OUT
DEREF at 49/0x31	 @ 8-bit Peripheral Module	 in line *_P5OUT
DEREF at 49/0x31	 @ 8-bit Peripheral Module	 in line *_P5OUT
DEREF at 386/0x182	 @ 16-bit Peripheral Module	 in line *_TBCCTL0
DEREF at 354/0x0162	 @16-bit Peripheral Module	 with fixed-address variable TA0CCTL0
DEREF at 356/0x0164	 @16-bit Peripheral Module	 with fixed-address variable TA0CCTL1
DEREF at 358/0x0166	 @16-bit Peripheral Module	 with fixed-address variable TA0CCTL2
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable TA0CTL
DEREF at 4/0x0004	 @Special Function Register	 with fixed-address variable ME1
DEREF at 113/0x0071	 @8-bit Peripheral Module	 with fixed-address variable U0TCTL
DEREF at 5/0x0005	 @Special Function Register	 with fixed-address variable ME2
DEREF at 121/0x0079	 @8-bit Peripheral Module	 with fixed-address variable U1TCTL
DEREF at 112/0x0070	 @8-bit Peripheral Module	 with fixed-address variable U0CTLnr
DEREF at 113/0x0071	 @8-bit Peripheral Module	 with fixed-address variable I2CTCTLnr
DEREF at 114/0x0072	 @8-bit Peripheral Module	 with fixed-address variable I2CDCTLnr
DEREF at 112/0x0070	 @8-bit Peripheral Module	 with fixed-address variable U0CTLnr
DEREF at 112/0x0070	 @8-bit Peripheral Module	 with fixed-address variable U0CTLnr
DEREF at 416/0x01A0	 @16-bit Peripheral Module	 with fixed-address variable ADC12CTL0
DEREF at 418/0x01A2	 @16-bit Peripheral Module	 with fixed-address variable ADC12CTL1
DEREF at 418/0x01A2	 @16-bit Peripheral Module	 with fixed-address variable ADC12CTL1
DEREF at 418/0x01A2	 @16-bit Peripheral Module	 with fixed-address variable ADC12CTL1
DEREF at 352/0x0160	 @16-bit Peripheral Module	 with fixed-address variable TA0CTL
DEREF at 400/0x190	 @ 16-bit Peripheral Module	 in line *_TBR
--------------------------------------------------------------------------------
