%!PS-Adobe-2.0
%%Title: sense_times1.ps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Thu Oct 29 21:47:28 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 7.500 def
/userlinewidth gnulinewidth def
%
/vshift -36 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sense_times1.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Doina Bucur)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Oct 29 21:47:28 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 110 scalefont setfont
1.000 UL
LTb
66 3368 M
63 0 V
7005 0 R
-63 0 V
-7170 0 R
currentpoint gsave translate 90 rotate 0 0 M
( 1) Cshow
grestore
1.000 UL
LTb
66 3711 M
63 0 V
7005 0 R
-63 0 V
-7170 0 R
currentpoint gsave translate 90 rotate 0 0 M
( 2) Cshow
grestore
1.000 UL
LTb
66 4054 M
63 0 V
7005 0 R
-63 0 V
-7170 0 R
currentpoint gsave translate 90 rotate 0 0 M
( 3) Cshow
grestore
1.000 UL
LTb
66 4396 M
63 0 V
7005 0 R
-63 0 V
-7170 0 R
currentpoint gsave translate 90 rotate 0 0 M
( 4) Cshow
grestore
1.000 UL
LTb
66 4739 M
63 0 V
7005 0 R
-63 0 V
-7170 0 R
currentpoint gsave translate 90 rotate 0 0 M
( 5) Cshow
grestore
1.000 UL
LTb
66 5082 M
63 0 V
7005 0 R
-63 0 V
-7170 0 R
currentpoint gsave translate 90 rotate 0 0 M
( 6) Cshow
grestore
1.000 UL
LTb
66 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
66 3302 M
currentpoint gsave translate 90 rotate 0 0 M
(memset.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
220 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(memset.4) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
373 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(AdcStreamP_Init_init.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
527 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(HplAdc12P_HplAdc12_getCtl0.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
681 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(SchedulerBasicP_popTask.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
834 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(SchedulerBasicP_popTask.2) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
988 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(McuSleepC_McuSleep_sleep.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
1142 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(HplAdc12P_HplAdc12_getCtl0.2) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
1295 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(HplAdc12P_HplAdc12_getMem.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
1449 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(Msp430Adc12ImplP_HplAdc12_conversionDone.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
1603 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(Msp430Adc12ImplP_HplAdc12_conversionDone.2) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
1756 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(HplAdc12P_HplAdc12_setMCtl.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
1910 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(HplAdc12P_HplAdc12_setMCtl.2) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
2063 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(HplAdc12P_HplAdc12_getMem.20) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
2217 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(Msp430Adc12ImplP_HplAdc12_conversionDone.3) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
2371 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(SchedulerBasicP_isWaiting.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
2524 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(SchedulerBasicP_pushTask.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
2678 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(SchedulerBasicP_popTask.3) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
2832 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(SchedulerBasicP_popTask.4) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
2985 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(HplAdc12P_HplAdc12_getCtl0.3) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
3139 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(HplAdc12P_HplAdc12_setMCtl.3) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
3293 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(HplAdc12P_HplAdc12_setMCtl.4) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
3446 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(HplAdc12P_HplAdc12_getMCtl.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
3600 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(RoundRobinResourceQueueC_0_RoundRobinQueue_isEnqueued.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
3754 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(RoundRobinResourceQueueC_0_RoundRobinQueue_isEnqueued.2) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
3907 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(RoundRobinResourceQueueC_0_RoundRobinQueue_isEmpty.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
4061 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(RoundRobinResourceQueueC_0_RoundRobinQueue_isEmpty.2) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
4215 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(RoundRobinResourceQueueC_0_clearEntry.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
4368 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(RoundRobinResourceQueueC_0_clearEntry.2) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
4522 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(RoundRobinResourceQueueC_0_RoundRobinQueue_enqueue.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
4676 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(RoundRobinResourceQueueC_0_RoundRobinQueue_enqueue.2) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
4829 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(ArbitratedReadStreamC_0_Resource_granted.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
4983 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(VirtualizeTimerC_0_Timer_stop.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
5137 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(ArbitratedReadStreamC_0_Resource_granted.2) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
5290 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(VirtualizeTimerC_0_Timer_stop.2) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
5444 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(ArbitratedReadStreamC_0_Resource_granted.3) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
5597 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(VirtualizeTimerC_0_Timer_stop.3) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
5751 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(VirtualizeTimerC_0_Timer_stop.4) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
5905 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(ArbitratedReadStreamC_0_Resource_granted.4) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
6058 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(AdcStreamP_SingleChannel_multipleDataReady.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
6212 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(AdcStreamP_SingleChannel_singleDataReady.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
6366 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(AdcStreamP_SingleChannel_singleDataReady.2) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
6519 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(VirtualizeTimerC_0_updateFromTimer_runTask.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
6673 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(VirtualizeTimerC_0_updateFromTimer_runTask.6) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
6827 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(VirtualizeTimerC_0_Timer_stop.5) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
6980 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(AdcStreamP_readStreamDone_runTask.1) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
7134 3368 M
0 63 V
0 1651 R
0 -63 V
/Helvetica findfont 100 scalefont setfont
0 -1717 R
currentpoint gsave translate 90 rotate 0 0 M
(AdcStreamP_readStreamFail_runTask.2) Rshow
grestore
/Helvetica findfont 110 scalefont setfont
1.000 UL
LTb
1.000 UL
LTb
66 5082 N
66 3368 L
7068 0 V
0 1714 V
66 5082 L
Z stroke
LCb setrgbcolor
-319 4225 M
currentpoint gsave translate 90 rotate 0 0 M
(Verification time \(minutes\)) Cshow
grestore
LTb
LCb setrgbcolor
3666 13 M
(Claim) Cshow
LTb
3600 5247 M
(Sense; one TimerB interrupt and one scheduler loop unwinding) Cshow
1.000 UP
1.000 UL
LTb
5.000 UL
LT0
LTb
591 4964 M
(Total verification time) Lshow
LT0
198 4964 M
327 0 V
66 3637 M
154 -12 V
153 -11 V
154 5 V
154 40 V
153 -11 V
154 6 V
154 -40 V
153 5 V
154 0 V
154 0 V
153 0 V
154 18 V
153 -12 V
154 -6 V
154 0 V
153 646 V
154 -606 V
154 -34 V
153 371 V
154 -342 V
154 -6 V
153 326 V
154 937 V
154 -595 V
153 -657 V
154 -28 V
154 560 V
153 565 V
4522 3682 L
154 -63 V
153 6 V
154 0 V
154 -6 V
153 0 V
154 6 V
153 -6 V
154 0 V
154 -5 V
153 5 V
154 0 V
154 0 V
153 132 V
154 6 V
154 -138 V
153 583 V
154 -188 V
stroke
1.000 UL
LT1
LTb
591 4854 M
(Decision procedure runtime) Lshow
LT1
1.000 198 4827 327 55 BoxColFill
198 4827 N
327 0 V
0 54 V
-327 0 V
0 -54 V
Z stroke
gsave 66 3637 N 0 0 V 154 -12 V 153 -11 V 154 5 V 154 40 V 153 -11 V 154 6 V 154 -40 V 153 5 V 154 0 V 154 0 V 153 0 V 154 18 V 153 -12 V 154 -6 V 154 0 V 153 646 V 154 -606 V 154 -34 V 153 371 V 154 -342 V 154 -6 V 153 326 V 154 937 V 154 -595 V 153 -657 V 154 -28 V 154 560 V 153 565 V 154 -1074 V 154 -63 V 153 6 V 154 0 V 154 -6 V 153 0 V 154 6 V 153 -6 V 154 0 V 154 -5 V 153 5 V 154 0 V 154 0 V 153 132 V 154 6 V 154 -138 V 153 583 V 154 -188 V 0 -646 V -7068 0 V 1 PolyFill
66 3637 M
154 -12 V
153 -11 V
154 5 V
154 40 V
153 -11 V
154 6 V
154 -40 V
153 5 V
154 0 V
154 0 V
153 0 V
154 18 V
153 -12 V
154 -6 V
154 0 V
153 646 V
154 -606 V
154 -34 V
153 371 V
154 -342 V
154 -6 V
153 326 V
154 937 V
154 -595 V
153 -657 V
154 -28 V
154 560 V
153 565 V
4522 3682 L
154 -63 V
153 6 V
154 0 V
154 -6 V
153 0 V
154 6 V
153 -6 V
154 0 V
154 -5 V
153 5 V
154 0 V
154 0 V
153 132 V
154 6 V
154 -138 V
153 583 V
154 -188 V
stroke
1.000 UL
LT2
LTb
591 4744 M
(Program unwinding time) Lshow
LT2
1.000 198 4717 327 55 BoxColFill
198 4717 N
327 0 V
0 54 V
-327 0 V
0 -54 V
Z stroke
gsave 66 3637 N 0 0 V 154 -12 V 153 -11 V 154 5 V 154 11 V 153 -11 V 154 5 V 154 -10 V 153 5 V 154 0 V 154 0 V 153 0 V 154 18 V 153 -12 V 154 -6 V 154 0 V 153 78 V 154 -38 V 154 -34 V 153 22 V 154 7 V 154 -6 V 153 -3 V 154 613 V 154 -440 V 153 -159 V 154 -28 V 154 70 V 153 411 V 154 -430 V 154 -63 V 153 6 V 154 0 V 154 -6 V 153 0 V 154 6 V 153 -6 V 154 0 V 154 -5 V 153 5 V 154 0 V 154 0 V 153 8 V 154 5 V 154 -13 V 153 49 V 154 -21 V 0 -279 V -7068 0 V 1 PolyFill
66 3637 M
154 -12 V
153 -11 V
154 5 V
154 11 V
153 -11 V
154 5 V
154 -10 V
153 5 V
154 0 V
154 0 V
153 0 V
154 18 V
153 -12 V
154 -6 V
154 0 V
153 78 V
154 -38 V
154 -34 V
153 22 V
154 7 V
154 -6 V
153 -3 V
154 613 V
154 -440 V
153 -159 V
154 -28 V
154 70 V
153 411 V
154 -430 V
154 -63 V
153 6 V
154 0 V
154 -6 V
153 0 V
154 6 V
153 -6 V
154 0 V
154 -5 V
153 5 V
154 0 V
154 0 V
153 8 V
154 5 V
154 -13 V
153 49 V
154 -21 V
stroke
1.000 UL
LTb
66 5082 N
66 3368 L
7068 0 V
0 1714 V
66 5082 L
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
